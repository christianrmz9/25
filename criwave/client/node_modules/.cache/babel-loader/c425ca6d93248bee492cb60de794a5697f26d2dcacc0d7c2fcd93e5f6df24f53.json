{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'RevenueChart',\n  data() {\n    return {\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ingresos',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          toolbar: {\n            show: false\n          },\n          background: 'transparent',\n          foreColor: '#666'\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.3,\n            stops: [0, 90, 100]\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: '#666'\n            },\n            formatter: function (value) {\n              return value >= 1000000 ? `$${(value / 1000000).toFixed(1)}M` : value >= 1000 ? `$${(value / 1000).toFixed(1)}K` : `$${value}`;\n            }\n          }\n        },\n        grid: {\n          borderColor: '#f1f1f1',\n          strokeDashArray: 4,\n          xaxis: {\n            lines: {\n              show: true\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true\n            }\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        },\n        theme: {\n          mode: 'light'\n        }\n      }\n    };\n  },\n  mounted() {\n    this.checkDarkMode();\n    this.loadData();\n    window.addEventListener('resize', this.handleResize);\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode);\n  },\n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      this.updateChartTheme();\n    },\n    handleResize() {\n      if (this.$refs.chart) {\n        this.$refs.chart.updateOptions({\n          chart: {\n            height: this.calculateChartHeight()\n          }\n        });\n      }\n    },\n    calculateChartHeight() {\n      const width = window.innerWidth;\n      if (width < 768) return 250;\n      if (width < 1024) return 300;\n      return 350;\n    },\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement);\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim();\n      const textPrimary = style.getPropertyValue('--text-primary').trim();\n      const textSecondary = style.getPropertyValue('--text-secondary').trim();\n      const borderColor = style.getPropertyValue('--border-color').trim();\n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: textSecondary\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: borderColor\n        },\n        colors: ['#2E93fA'],\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: bgSecondary,\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          ...this.chartOptions.xaxis,\n          labels: {\n            style: {\n              colors: textSecondary,\n              fontSize: '12px'\n            }\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: borderColor,\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          ...this.chartOptions.yaxis,\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: textSecondary\n            }\n          },\n          labels: {\n            style: {\n              colors: textSecondary\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          style: {\n            fontSize: '12px'\n          },\n          y: {\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        }\n      };\n    },\n    async loadData() {\n      this.isLoading = true;\n      try {\n        // Generar datos para los últimos 30 días\n        const data = [];\n        let currentValue = Math.floor(Math.random() * 500000) + 100000; // Valor inicial\n\n        for (let i = 30; i >= 0; i--) {\n          const date = new Date();\n          date.setDate(date.getDate() - i);\n\n          // Generar variación aleatoria entre -10% y +10%\n          const variation = Math.random() * 0.2 - 0.1;\n          currentValue = Math.floor(currentValue * (1 + variation));\n\n          // Asegurar que el valor no sea negativo\n          currentValue = Math.max(currentValue, 100000);\n          data.push([date.getTime(), currentValue]);\n        }\n\n        // Actualizar las series con los datos\n        this.series = [{\n          name: 'Ingresos',\n          data: data\n        }];\n      } catch (error) {\n        console.error('Error loading revenue data:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","isLoading","isDarkMode","series","chartOptions","chart","type","height","toolbar","show","background","foreColor","dataLabels","enabled","stroke","curve","width","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","xaxis","labels","style","colors","fontSize","axisBorder","axisTicks","crosshairs","color","dashArray","yaxis","title","text","formatter","value","toFixed","grid","borderColor","strokeDashArray","lines","markers","size","strokeColors","strokeWidth","hover","tooltip","shared","intersect","y","Intl","NumberFormat","currency","format","theme","mode","mounted","checkDarkMode","loadData","window","addEventListener","handleResize","matchMedia","beforeDestroy","removeEventListener","methods","matches","updateChartTheme","$refs","updateOptions","calculateChartHeight","innerWidth","getComputedStyle","document","documentElement","bgSecondary","getPropertyValue","trim","textPrimary","textSecondary","currentValue","Math","floor","random","i","date","Date","setDate","getDate","variation","max","push","getTime","error","console"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\RevenueChart.vue"],"sourcesContent":["<template>\n  <div class=\"chart-container\">\n    <div class=\"chart-header\">\n      <h3>Ingresos</h3>\n    </div>\n    <div class=\"chart-content\">\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-spinner\"></div>\n      </div>\n      <apexchart\n        type=\"area\"\n        height=\"350\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RevenueChart',\n  data() {\n    return {\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ingresos',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          toolbar: {\n            show: false\n          },\n          background: 'transparent',\n          foreColor: '#666'\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.7,\n            opacityTo: 0.3,\n            stops: [0, 90, 100]\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: '#666'\n            },\n            formatter: function(value) {\n              return value >= 1000000 \n                ? `$${(value/1000000).toFixed(1)}M` \n                : value >= 1000 \n                  ? `$${(value/1000).toFixed(1)}K` \n                  : `$${value}`\n            }\n          }\n        },\n        grid: {\n          borderColor: '#f1f1f1',\n          strokeDashArray: 4,\n          xaxis: {\n            lines: {\n              show: true\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true\n            }\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        },\n        theme: {\n          mode: 'light'\n        }\n      }\n    }\n  },\n  mounted() {\n    this.checkDarkMode()\n    this.loadData()\n    window.addEventListener('resize', this.handleResize)\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode)\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize)\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode)\n  },\n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches\n      this.updateChartTheme()\n    },\n    handleResize() {\n      if (this.$refs.chart) {\n        this.$refs.chart.updateOptions({\n          chart: {\n            height: this.calculateChartHeight()\n          }\n        })\n      }\n    },\n    calculateChartHeight() {\n      const width = window.innerWidth\n      if (width < 768) return 250\n      if (width < 1024) return 300\n      return 350\n    },\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement)\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim()\n      const textPrimary = style.getPropertyValue('--text-primary').trim()\n      const textSecondary = style.getPropertyValue('--text-secondary').trim()\n      const borderColor = style.getPropertyValue('--border-color').trim()\n      \n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: textSecondary\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: borderColor\n        },\n        colors: ['#2E93fA'],\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: bgSecondary,\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          ...this.chartOptions.xaxis,\n          labels: {\n            style: {\n              colors: textSecondary,\n              fontSize: '12px'\n            }\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: borderColor,\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          ...this.chartOptions.yaxis,\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: textSecondary\n            }\n          },\n          labels: {\n            style: {\n              colors: textSecondary\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          style: {\n            fontSize: '12px'\n          },\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        }\n      }\n    },\n    async loadData() {\n      this.isLoading = true\n      try {\n        // Generar datos para los últimos 30 días\n        const data = []\n        let currentValue = Math.floor(Math.random() * 500000) + 100000 // Valor inicial\n        \n        for (let i = 30; i >= 0; i--) {\n          const date = new Date()\n          date.setDate(date.getDate() - i)\n          \n          // Generar variación aleatoria entre -10% y +10%\n          const variation = (Math.random() * 0.2) - 0.1\n          currentValue = Math.floor(currentValue * (1 + variation))\n          \n          // Asegurar que el valor no sea negativo\n          currentValue = Math.max(currentValue, 100000)\n          \n          data.push([\n            date.getTime(),\n            currentValue\n          ])\n        }\n        \n        // Actualizar las series con los datos\n        this.series = [{\n          name: 'Ingresos',\n          data: data\n        }]\n      } catch (error) {\n        console.error('Error loading revenue data:', error)\n      } finally {\n        this.isLoading = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.chart-container {\n  background: var(--bg-secondary);\n  border-radius: 12px;\n  padding: 1.5rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  height: 100%;\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 1.5rem;\n}\n\n.chart-header h3 {\n  margin: 0;\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--text-primary);\n}\n\n.chart-content {\n  position: relative;\n  height: calc(100% - 3rem);\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.8);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  border-radius: 8px;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid var(--primary-color);\n  border-top-color: transparent;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n:deep(.apexcharts-canvas) {\n  background: transparent !important;\n}\n\n:deep(.apexcharts-gridline) {\n  stroke: var(--border-color);\n}\n\n:deep(.apexcharts-tooltip) {\n  background: var(--bg-secondary);\n  border: 1px solid var(--border-color);\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n:deep(.apexcharts-tooltip-title) {\n  background: var(--bg-primary);\n  color: var(--text-primary);\n  border-bottom: 1px solid var(--border-color);\n}\n\n:deep(.apexcharts-tooltip-text) {\n  color: var(--text-secondary);\n}\n\n:deep(.apexcharts-tooltip-series-group) {\n  padding: 4px 8px;\n}\n\n:deep(.apexcharts-tooltip-marker) {\n  width: 8px;\n  height: 8px;\n  margin-right: 6px;\n}\n\n:deep(.apexcharts-tooltip-y-group) {\n  padding: 2px 0;\n}\n\n:deep(.apexcharts-xaxis-label),\n:deep(.apexcharts-yaxis-label) {\n  fill: var(--text-secondary);\n}\n\n:deep(.apexcharts-title-text),\n:deep(.apexcharts-subtitle-text) {\n  fill: var(--text-primary);\n}\n\n@media (max-width: 768px) {\n  .chart-container {\n    padding: 1rem;\n  }\n\n  .chart-header {\n    margin-bottom: 1rem;\n  }\n\n  .chart-header h3 {\n    font-size: 1.1rem;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}