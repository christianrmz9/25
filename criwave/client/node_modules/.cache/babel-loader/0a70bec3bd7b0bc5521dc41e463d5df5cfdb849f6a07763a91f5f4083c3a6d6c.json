{"ast":null,"code":"/**\n * Componente principal de la aplicación\n * \n * Integra los componentes de header y sidebar,\n * y gestiona el estado del sidebar.\n * \n * @component App\n */\nimport AppHeader from './components/layout/AppHeader.vue';\nimport AppSidebar from './components/layout/AppSidebar.vue';\nimport AppDashboard from './components/dashboard/Dashboard.vue';\nimport { useThemeStore } from './store/theme';\nexport default {\n  name: 'App',\n  components: {\n    AppHeader,\n    AppSidebar,\n    AppDashboard\n  },\n  data() {\n    return {\n      isSidebarOpen: false,\n      themeStore: useThemeStore\n    };\n  },\n  methods: {\n    /**\n     * Alterna la visibilidad del sidebar\n     */\n    toggleSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    },\n    /**\n     * Cierra el sidebar\n     */\n    closeSidebar() {\n      this.isSidebarOpen = false;\n    },\n    /**\n     * Maneja el cambio de tamaño de la ventana\n     */\n    handleResize() {\n      if (window.innerWidth <= 768 && this.isSidebarOpen) {\n        this.closeSidebar();\n      }\n    }\n  },\n  /**\n   * Inicializa el tema al montar el componente\n   */\n  mounted() {\n    // Inicializar el tema\n    this.themeStore.actions.initTheme();\n\n    // Cerrar el sidebar al cambiar el tamaño de la ventana\n    window.addEventListener('resize', this.handleResize);\n  },\n  /**\n   * Limpia los event listeners al desmontar el componente\n   */\n  beforeUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n};","map":{"version":3,"names":["AppHeader","AppSidebar","AppDashboard","useThemeStore","name","components","data","isSidebarOpen","themeStore","methods","toggleSidebar","closeSidebar","handleResize","window","innerWidth","mounted","actions","initTheme","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\" :class=\"{ 'sidebar-open': isSidebarOpen }\">\n    <!-- Header -->\n    <app-header @toggle-sidebar=\"toggleSidebar\" />\n    \n    <!-- Sidebar -->\n    <app-sidebar :isOpen=\"isSidebarOpen\" @close=\"closeSidebar\" />\n    \n    <!-- Contenido principal -->\n    <main class=\"main-content\">\n      <div class=\"container\">\n        <!-- Dashboard como vista principal -->\n        <app-dashboard />\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\n/**\n * Componente principal de la aplicación\n * \n * Integra los componentes de header y sidebar,\n * y gestiona el estado del sidebar.\n * \n * @component App\n */\nimport AppHeader from './components/layout/AppHeader.vue';\nimport AppSidebar from './components/layout/AppSidebar.vue';\nimport AppDashboard from './components/dashboard/Dashboard.vue';\nimport { useThemeStore } from './store/theme';\n\nexport default {\n  name: 'App',\n  \n  components: {\n    AppHeader,\n    AppSidebar,\n    AppDashboard\n  },\n  \n  data() {\n    return {\n      isSidebarOpen: false,\n      themeStore: useThemeStore\n    };\n  },\n  \n  methods: {\n    /**\n     * Alterna la visibilidad del sidebar\n     */\n    toggleSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    },\n    \n    /**\n     * Cierra el sidebar\n     */\n    closeSidebar() {\n      this.isSidebarOpen = false;\n    },\n    \n    /**\n     * Maneja el cambio de tamaño de la ventana\n     */\n    handleResize() {\n      if (window.innerWidth <= 768 && this.isSidebarOpen) {\n        this.closeSidebar();\n      }\n    }\n  },\n  \n  /**\n   * Inicializa el tema al montar el componente\n   */\n  mounted() {\n    // Inicializar el tema\n    this.themeStore.actions.initTheme();\n    \n    // Cerrar el sidebar al cambiar el tamaño de la ventana\n    window.addEventListener('resize', this.handleResize);\n  },\n  \n  /**\n   * Limpia los event listeners al desmontar el componente\n   */\n  beforeUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n};\n</script>\n\n<style>\n/* Estilos específicos del componente App */\n.app-container {\n  min-height: 100vh;\n  background-color: var(--bg-primary);\n  color: var(--text-primary);\n  display: flex;\n  flex-direction: column;\n  transition: padding-left 0.3s ease;\n}\n\n/* Cuando el sidebar está abierto en pantallas grandes */\n@media (min-width: 769px) {\n  .app-container.sidebar-open {\n    padding-left: 280px; /* Ancho del sidebar */\n  }\n}\n\n/* Contenedor principal */\n.container {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n}\n\n/* Contenido principal */\n.main-content {\n  padding-top: 70px; /* Espacio para el header */\n  min-height: calc(100vh - 70px);\n  flex: 1;\n}\n\n/* Asegurarse de que no haya márgenes o bordes no deseados */\nbody, html {\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden; /* Previene scroll horizontal */\n}\n\n/* Ajustes responsive */\n@media (max-width: 768px) {\n  .main-content {\n    padding-top: 64px; /* Ajustado para el header más pequeño en móviles */\n  }\n  \n  .container {\n    padding: 15px;\n  }\n}\n\n@media (max-width: 576px) {\n  .container {\n    padding: 10px;\n  }\n}\n</style> "],"mappings":"AAmBA;;;;;;;;AAQA,OAAOA,SAAQ,MAAO,mCAAmC;AACzD,OAAOC,UAAS,MAAO,oCAAoC;AAC3D,OAAOC,YAAW,MAAO,sCAAsC;AAC/D,SAASC,aAAY,QAAS,eAAe;AAE7C,eAAe;EACbC,IAAI,EAAE,KAAK;EAEXC,UAAU,EAAE;IACVL,SAAS;IACTC,UAAU;IACVC;EACF,CAAC;EAEDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAEL;IACd,CAAC;EACH,CAAC;EAEDM,OAAO,EAAE;IACP;;;IAGAC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACH,aAAY,GAAI,CAAC,IAAI,CAACA,aAAa;IAC1C,CAAC;IAED;;;IAGAI,YAAYA,CAAA,EAAG;MACb,IAAI,CAACJ,aAAY,GAAI,KAAK;IAC5B,CAAC;IAED;;;IAGAK,YAAYA,CAAA,EAAG;MACb,IAAIC,MAAM,CAACC,UAAS,IAAK,GAAE,IAAK,IAAI,CAACP,aAAa,EAAE;QAClD,IAAI,CAACI,YAAY,CAAC,CAAC;MACrB;IACF;EACF,CAAC;EAED;;;EAGAI,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACP,UAAU,CAACQ,OAAO,CAACC,SAAS,CAAC,CAAC;;IAEnC;IACAJ,MAAM,CAACK,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACN,YAAY,CAAC;EACtD,CAAC;EAED;;;EAGAO,aAAaA,CAAA,EAAG;IACdN,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACR,YAAY,CAAC;EACzD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}