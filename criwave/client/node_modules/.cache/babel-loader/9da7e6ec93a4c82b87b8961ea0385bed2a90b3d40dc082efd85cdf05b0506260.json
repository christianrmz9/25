{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-bar\"\n};\nconst _hoisted_2 = {\n  class: \"search-input-wrapper\"\n};\nconst _hoisted_3 = [\"placeholder\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: $props.placeholder,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $setup.handleInput && $setup.handleInput(...args)),\n    onFocus: _cache[2] || (_cache[2] = (...args) => $setup.handleFocus && $setup.handleFocus(...args)),\n    onBlur: _cache[3] || (_cache[3] = (...args) => $setup.handleBlur && $setup.handleBlur(...args)),\n    class: \"search-input\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_3), [[_vModelText, $setup.searchQuery]]), _createCommentVNode(\" Eliminar icono de búsqueda \")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","type","placeholder","$props","_cache","$event","$setup","searchQuery","onInput","args","handleInput","onFocus","handleFocus","onBlur","handleBlur","_hoisted_3","_createCommentVNode"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\ui\\SearchBar.vue"],"sourcesContent":["<template>\n  <div class=\"search-bar\">\n    <div class=\"search-input-wrapper\">\n      <input\n        type=\"text\"\n        :placeholder=\"placeholder\"\n        v-model=\"searchQuery\"\n        @input=\"handleInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        class=\"search-input\"\n      />\n      <!-- Eliminar icono de búsqueda -->\n    </div>\n  </div>\n</template>\n\n<script>\n/**\n * Componente de barra de búsqueda\n * \n * Características:\n * - Soporte para historial de búsquedas recientes\n * - Sugerencias personalizables\n * - Navegación con teclado\n * - Atajo de teclado Ctrl+K\n * \n * @component SearchBar\n */\nimport { ref, watch, onMounted, onBeforeUnmount } from 'vue';\n\nexport default {\n  name: 'SearchBar',\n  \n  props: {\n    /**\n     * Determina si hay resultados disponibles para mostrar\n     */\n    hasResults: {\n      type: Boolean,\n      default: false,\n    },\n    \n    /**\n     * Texto de placeholder para el campo de búsqueda\n     */\n    placeholder: {\n      type: String,\n      default: 'Buscar...',\n    },\n    \n    /**\n     * Consulta inicial (si es aplicable)\n     */\n    initialQuery: {\n      type: String,\n      default: '',\n    },\n    \n    /**\n     * Indica si se deben mostrar las búsquedas recientes\n     */\n    showRecentSearches: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  \n  emits: [\n    'search', \n    'clear', \n    'suggestion-highlighted', \n    'suggestion-selected',\n    'focus',\n    'blur'\n  ],\n  \n  setup(props, { emit }) {\n    const searchQuery = ref(props.initialQuery || '');\n    const isFocused = ref(false);\n    const suggestionsContainer = ref(null);\n    const recentSearches = ref([]);\n    \n    // Cargar búsquedas recientes del localStorage\n    const loadRecentSearches = () => {\n      try {\n        const saved = localStorage.getItem('recentSearches');\n        if (saved) {\n          recentSearches.value = JSON.parse(saved);\n        }\n      } catch (error) {\n        console.error('Error al cargar búsquedas recientes:', error);\n      }\n    };\n    \n    // Guardar búsquedas recientes en localStorage\n    const saveRecentSearches = () => {\n      try {\n        localStorage.setItem('recentSearches', JSON.stringify(recentSearches.value));\n      } catch (error) {\n        console.error('Error al guardar búsquedas recientes:', error);\n      }\n    };\n    \n    // Manejar enfoque en el input\n    const handleFocus = () => {\n      isFocused.value = true;\n      loadRecentSearches(); // Recargar al enfocar por si hay cambios\n      emit('focus');\n    };\n    \n    // Manejar pérdida de enfoque\n    const handleBlur = () => {\n      // Retrasamos para permitir que los clics en sugerencias se procesen\n      setTimeout(() => {\n        isFocused.value = false;\n      }, 200);\n      emit('blur');\n    };\n    \n    // Manejar input\n    const handleInput = () => {\n      emit('search', searchQuery.value);\n    };\n    \n    // Limpiar búsqueda\n    const clearSearch = () => {\n      searchQuery.value = '';\n      emit('clear');\n      emit('search', '');\n      \n      // Enfocar nuevamente el input\n      const searchInput = document.querySelector('.search-input');\n      if (searchInput) {\n        searchInput.focus();\n      }\n    };\n    \n    // Manejar teclas\n    const handleKeydown = (event) => {\n      if (event.key === 'Escape') {\n        if (searchQuery.value) {\n          clearSearch();\n        } else {\n          // Si no hay consulta, perder el enfoque\n          event.target.blur();\n        }\n      }\n    };\n    \n    // Aplicar una búsqueda reciente\n    const applyRecentSearch = (search) => {\n      searchQuery.value = search;\n      emit('search', search);\n    };\n    \n    // Eliminar una búsqueda reciente\n    const removeRecentSearch = (index) => {\n      recentSearches.value.splice(index, 1);\n      saveRecentSearches();\n    };\n    \n    // Cerrar sugerencias al hacer clic fuera\n    const handleDocumentClick = (event) => {\n      const searchBarElement = document.querySelector('.search-bar-container');\n      if (searchBarElement && !searchBarElement.contains(event.target)) {\n        isFocused.value = false;\n      }\n    };\n    \n    // Observar cambios en la consulta para historial\n    watch(searchQuery, (newValue, oldValue) => {\n      if (newValue && newValue !== oldValue && !recentSearches.value.includes(newValue)) {\n        // Solo añadir al historial cuando se envía una búsqueda completa\n        // Esta lógica se maneja en AppSidebar\n      }\n    });\n    \n    onMounted(() => {\n      loadRecentSearches();\n      document.addEventListener('click', handleDocumentClick);\n    });\n    \n    onBeforeUnmount(() => {\n      document.removeEventListener('click', handleDocumentClick);\n    });\n    \n    return {\n      searchQuery,\n      isFocused,\n      suggestionsContainer,\n      recentSearches,\n      handleFocus,\n      handleBlur,\n      handleInput,\n      handleKeydown,\n      clearSearch,\n      applyRecentSearch,\n      removeRecentSearch,\n    };\n  },\n};\n</script>\n\n<style scoped>\n/* Estilos base */\n.search-bar {\n  position: relative;\n  width: 100%;\n}\n\n.search-input-wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n.search-input {\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid var(--border);\n  border-radius: var(--border-radius-md);\n  background-color: var(--bg-secondary);\n  color: var(--text-primary);\n  font-size: 0.875rem;\n  transition: all 0.2s;\n}\n\n.search-input:focus {\n  outline: none;\n  border-color: var(--primary);\n  background-color: var(--bg-primary);\n  box-shadow: 0 0 0 2px var(--primary-light);\n}\n\n.search-input::placeholder {\n  color: var(--text-muted);\n}\n\n.clear-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 0.5rem;\n  color: #666666;\n}\n\n.keyboard-shortcut {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.15rem 0.35rem;\n  font-size: 0.75rem;\n  font-family: monospace;\n  border-radius: 3px;\n  margin-left: 0.5rem;\n  background-color: #f5f5f5;\n  color: #666666;\n  border: 1px solid #e0e0e0;\n}\n\n/* Dark Mode */\n:root[data-theme=\"dark\"] .search-input-wrapper {\n  background-color: #141414;\n  border: none;\n}\n\n:root[data-theme=\"dark\"] .search-input {\n  color: #e0e0e0;\n}\n\n:root[data-theme=\"dark\"] .search-input::placeholder {\n  color: #666666;\n}\n\n:root[data-theme=\"dark\"] .search-icon {\n  color: #666666;\n}\n\n:root[data-theme=\"dark\"] .keyboard-shortcut {\n  background-color: #1a1a1a;\n  color: #e0e0e0;\n  border-color: #333333;\n}\n\n/* Soporte para prefers-color-scheme */\n@media (prefers-color-scheme: dark) {\n  .search-input-wrapper {\n    background-color: #141414;\n    border: none;\n  }\n\n  .search-input {\n    color: #e0e0e0;\n  }\n\n  .search-input::placeholder {\n    color: #666666;\n  }\n\n  .search-icon {\n    color: #666666;\n  }\n\n  .keyboard-shortcut {\n    background-color: #1a1a1a;\n    color: #e0e0e0;\n    border-color: #333333;\n  }\n}\n\n.clear-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.25rem;\n  margin-left: 0.5rem;\n  border: none;\n  background: transparent;\n  color: var(--text-muted);\n  cursor: pointer;\n  opacity: 0.7;\n  transition: opacity 0.2s;\n}\n\n.clear-button:hover {\n  opacity: 1;\n}\n\n.suggestions-container {\n  position: absolute;\n  top: calc(100% + 4px);\n  left: 0;\n  right: 0;\n  z-index: 50;\n  max-height: 400px;\n  overflow-y: auto;\n  background-color: var(--search-suggestions-bg, #ffffff);\n  border-radius: 6px;\n  border: none;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  margin-top: 0;\n}\n\n.suggestions-section-title {\n  padding: 8px 16px;\n  font-size: 0.75rem;\n  font-weight: 600;\n  color: var(--search-suggestions-muted, #666666);\n  text-transform: uppercase;\n  border-bottom: none;\n}\n\n.recent-search-item {\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  cursor: pointer;\n}\n\n.recent-search-item:hover {\n  background-color: var(--search-suggestions-hover, #f5f5f5);\n}\n\n.recent-icon {\n  margin-right: 12px;\n  color: var(--search-suggestions-muted, #666666);\n}\n\n.recent-text {\n  flex: 1;\n  color: var(--suggestion-title-color, #333333);\n}\n\n.remove-recent {\n  background: none;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--text-muted);\n  padding: 0.25rem;\n  border-radius: 50%;\n  opacity: 0;\n  transition: all 0.2s ease;\n}\n\n.recent-search-item:hover .remove-recent {\n  opacity: 0.8;\n}\n\n.remove-recent:hover {\n  background-color: var(--search-suggestions-hover, #f5f5f5);\n  color: var(--text-primary);\n  opacity: 1;\n}\n\n/* Estilos para texto resaltado en sugerencias */\n:deep(.highlight) {\n  background-color: var(--highlight-bg);\n  color: var(--highlight-text);\n  border-radius: 0.25rem;\n  padding: 0.1rem 0.2rem;\n  margin: 0 -0.2rem;\n}\n\n.recent-searches-section {\n  width: 100%;\n  border-radius: 6px;\n  overflow: hidden;\n  background-color: var(--search-suggestions-bg);\n  border: none;\n  margin-top: 0;\n}\n\n.suggestions-container {\n  overflow: hidden;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAsB;mBAFrC;;uBACEC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,mBAAA,CAWM,OAXNC,UAWM,G,gBAVJD,mBAAA,CAQE;IAPAE,IAAI,EAAC,MAAM;IACVC,WAAW,EAAEC,MAAA,CAAAD,WAAW;IALjC,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMiBC,MAAA,CAAAC,WAAW,GAAAF,MAAA;IACnBG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEH,MAAA,CAAAI,WAAA,IAAAJ,MAAA,CAAAI,WAAA,IAAAD,IAAA,CAAW;IAClBE,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEH,MAAA,CAAAM,WAAA,IAAAN,MAAA,CAAAM,WAAA,IAAAH,IAAA,CAAW;IAClBI,MAAI,EAAAT,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEH,MAAA,CAAAQ,UAAA,IAAAR,MAAA,CAAAQ,UAAA,IAAAL,IAAA,CAAU;IACjBb,KAAK,EAAC;2CAVdmB,UAAA,I,cAMiBT,MAAA,CAAAC,WAAW,E,GAMtBS,mBAAA,gCAAmC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}