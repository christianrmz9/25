{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent } from 'vue';\nimport VueApexCharts from 'vue3-apexcharts';\nexport default defineComponent({\n  name: 'RevenueChart',\n  components: {\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      selectedPeriod: 'month',\n      showComparison: false,\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ingresos',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: this.isDarkMode ? '#000000' : '#fff',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        plotOptions: {\n          area: {\n            fillTo: 'origin'\n          }\n        },\n        colors: ['#2E93fA', '#66DA26'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back',\n          padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          },\n          xaxis: {\n            lines: {\n              show: true\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true\n            }\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#999' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666'\n            },\n            formatter: function (value) {\n              return value >= 1000000 ? `$${(value / 1000000).toFixed(1)}M` : value >= 1000 ? `$${(value / 1000).toFixed(1)}K` : `$${value}`;\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        },\n        theme: {\n          mode: this.isDarkMode ? 'dark' : 'light',\n          palette: 'palette1'\n        }\n      }\n    };\n  },\n  created() {\n    // Detectar el modo oscuro inicial\n    this.checkDarkMode();\n    // Escuchar cambios en el modo oscuro\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode);\n  },\n  mounted() {\n    // Cargar datos iniciales con comparación\n    this.loadData(this.selectedPeriod);\n  },\n  beforeUnmount() {\n    // Limpiar el listener cuando el componente se destruye\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode);\n  },\n  watch: {\n    selectedPeriod: {\n      handler(newPeriod) {\n        this.loadData(newPeriod);\n      }\n    },\n    showComparison: {\n      handler() {\n        this.loadData(this.selectedPeriod);\n      }\n    }\n  },\n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme');\n      this.updateChartTheme();\n    },\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement);\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim();\n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: this.isDarkMode ? '#999' : '#666'\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1'\n        },\n        colors: ['#2E93fA', '#66DA26'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#999' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666'\n            },\n            formatter: function (value) {\n              return value >= 1000000 ? `$${(value / 1000000).toFixed(1)}M` : value >= 1000 ? `$${(value / 1000).toFixed(1)}K` : `$${value}`;\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        },\n        theme: {\n          ...this.chartOptions.theme,\n          mode: this.isDarkMode ? 'dark' : 'light'\n        }\n      };\n    },\n    async loadData(period) {\n      this.isLoading = true;\n      try {\n        // Generar datos principales\n        const mainData = this.generateMockData(period);\n\n        // Actualizar las series con los datos principales\n        if (this.showComparison) {\n          // Si showComparison está activo, cargar ambas series\n          const comparisonData = this.generateMockComparisonData(period);\n          this.series = [{\n            name: 'Ingresos actuales',\n            data: mainData\n          }, {\n            name: 'Ingresos período anterior',\n            data: comparisonData\n          }];\n        } else {\n          // Si no hay comparación, solo mostrar la serie principal\n          this.series = [{\n            name: 'Ingresos',\n            data: mainData\n          }];\n        }\n      } catch (error) {\n        console.error('Error loading revenue data:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    generateMockData(period) {\n      const data = [];\n      let points = 0;\n      switch (period) {\n        case 'day':\n          points = 24;\n          for (let i = 0; i < points; i++) {\n            const date = new Date();\n            date.setHours(i, 0, 0);\n            data.push([date.getTime(), Math.floor(Math.random() * 50000) + 10000]);\n          }\n          break;\n        case 'week':\n          points = 7;\n          for (let i = 0; i < points; i++) {\n            const date = new Date();\n            date.setDate(date.getDate() - i);\n            data.push([date.getTime(), Math.floor(Math.random() * 200000) + 50000]);\n          }\n          break;\n        case 'month':\n          points = 30;\n          for (let i = 0; i < points; i++) {\n            const date = new Date();\n            date.setDate(date.getDate() - i);\n            data.push([date.getTime(), Math.floor(Math.random() * 500000) + 100000]);\n          }\n          break;\n        case 'year':\n          points = 12;\n          for (let i = 0; i < points; i++) {\n            const date = new Date();\n            date.setMonth(date.getMonth() - i);\n            data.push([date.getTime(), Math.floor(Math.random() * 2000000) + 500000]);\n          }\n          break;\n      }\n      return data.reverse();\n    },\n    generateMockComparisonData(period) {\n      const data = [];\n      let points = 0;\n      switch (period) {\n        case 'day':\n          points = 24;\n          for (let i = 0; i < points; i++) {\n            const date = new Date();\n            date.setDate(date.getDate() - 1);\n            date.setHours(i, 0, 0);\n            data.push([date.getTime(), Math.floor(Math.random() * 40000) + 8000 // Valores ligeramente menores\n            ]);\n          }\n          break;\n        case 'week':\n          points = 7;\n          for (let i = 0; i < points; i++) {\n            const date = new Date();\n            date.setDate(date.getDate() - i - 7); // Una semana antes\n            data.push([date.getTime(), Math.floor(Math.random() * 180000) + 40000]);\n          }\n          break;\n        case 'month':\n          points = 30;\n          for (let i = 0; i < points; i++) {\n            const date = new Date();\n            date.setMonth(date.getMonth() - 1);\n            date.setDate(date.getDate() - i);\n            data.push([date.getTime(), Math.floor(Math.random() * 450000) + 90000]);\n          }\n          break;\n        case 'year':\n          points = 12;\n          for (let i = 0; i < points; i++) {\n            const date = new Date();\n            date.setFullYear(date.getFullYear() - 1);\n            date.setMonth(date.getMonth() - i);\n            data.push([date.getTime(), Math.floor(Math.random() * 1800000) + 400000]);\n          }\n          break;\n      }\n      return data.reverse();\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","VueApexCharts","name","components","apexchart","data","selectedPeriod","showComparison","isLoading","isDarkMode","series","chartOptions","chart","type","height","background","foreColor","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","plotOptions","area","fillTo","colors","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","curve","width","grid","borderColor","strokeDashArray","position","padding","top","right","bottom","left","xaxis","lines","yaxis","markers","size","strokeColors","strokeWidth","hover","labels","style","fontSize","axisBorder","axisTicks","crosshairs","color","dashArray","title","text","formatter","value","toFixed","tooltip","theme","shared","intersect","y","Intl","NumberFormat","currency","format","mode","palette","created","checkDarkMode","window","matchMedia","addEventListener","mounted","loadData","beforeUnmount","removeEventListener","watch","handler","newPeriod","methods","document","documentElement","classList","contains","updateChartTheme","getComputedStyle","bgSecondary","getPropertyValue","trim","period","mainData","generateMockData","comparisonData","generateMockComparisonData","error","console","points","i","date","Date","setHours","push","getTime","Math","floor","random","setDate","getDate","setMonth","getMonth","reverse","setFullYear","getFullYear"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\RevenueChart.vue"],"sourcesContent":["<template>\n  <div class=\"revenue-chart\">\n    <div class=\"chart-header\">\n        <h2 class=\"chart-title\">Total Ingresos</h2>\n      <div class=\"chart-controls\">\n      <div class=\"period-selector\">\n          <select v-model=\"selectedPeriod\" class=\"period-select\">\n            <option value=\"day\">Hoy</option>\n            <option value=\"week\">Esta semana</option>\n            <option value=\"month\">Este mes</option>\n            <option value=\"year\">Este año</option>\n          </select>\n        </div>\n        <div class=\"comparison-toggle\">\n          <label class=\"switch\">\n            <input type=\"checkbox\" v-model=\"showComparison\">\n            <span class=\"slider\"></span>\n          </label>\n          <span class=\"toggle-label\">Comparar con período anterior</span>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"chart-container\">\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-spinner\"></div>\n          </div>\n      <apexchart\n        type=\"area\"\n        height=\"350\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n      ></apexchart>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport VueApexCharts from 'vue3-apexcharts'\n\nexport default defineComponent({\n  name: 'RevenueChart',\n  components: {\n    apexchart: VueApexCharts\n  },\n  \n  data() {\n    return {\n      selectedPeriod: 'month',\n      showComparison: false,\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ingresos',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: this.isDarkMode ? '#000000' : '#fff',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        plotOptions: {\n          area: {\n            fillTo: 'origin'\n          }\n        },\n        colors: ['#2E93fA', '#66DA26'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back',\n          padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          },\n          xaxis: {\n            lines: {\n              show: true\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true\n            }\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#999' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666'\n            },\n            formatter: function(value) {\n              return value >= 1000000 \n                ? `$${(value/1000000).toFixed(1)}M` \n                : value >= 1000 \n                  ? `$${(value/1000).toFixed(1)}K` \n                  : `$${value}`\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        },\n        theme: {\n          mode: this.isDarkMode ? 'dark' : 'light',\n          palette: 'palette1'\n        }\n      }\n    }\n  },\n\n  created() {\n    // Detectar el modo oscuro inicial\n    this.checkDarkMode()\n    // Escuchar cambios en el modo oscuro\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode)\n  },\n  \n  mounted() {\n    // Cargar datos iniciales con comparación\n    this.loadData(this.selectedPeriod)\n  },\n  \n  beforeUnmount() {\n    // Limpiar el listener cuando el componente se destruye\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode)\n  },\n  \n  watch: {\n    selectedPeriod: {\n      handler(newPeriod) {\n        this.loadData(newPeriod)\n      }\n    },\n    showComparison: {\n      handler() {\n        this.loadData(this.selectedPeriod)\n      }\n    }\n  },\n\n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme')\n      this.updateChartTheme()\n    },\n\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement)\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim()\n      \n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: this.isDarkMode ? '#999' : '#666'\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1'\n        },\n        colors: ['#2E93fA', '#66DA26'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#999' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666'\n            },\n            formatter: function(value) {\n              return value >= 1000000 \n                ? `$${(value/1000000).toFixed(1)}M` \n                : value >= 1000 \n                  ? `$${(value/1000).toFixed(1)}K` \n                  : `$${value}`\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        },\n        theme: {\n          ...this.chartOptions.theme,\n          mode: this.isDarkMode ? 'dark' : 'light'\n        }\n      }\n    },\n\n    async loadData(period) {\n      this.isLoading = true\n      try {\n        // Generar datos principales\n        const mainData = this.generateMockData(period)\n        \n        // Actualizar las series con los datos principales\n        if (this.showComparison) {\n          // Si showComparison está activo, cargar ambas series\n          const comparisonData = this.generateMockComparisonData(period)\n          this.series = [\n            {\n              name: 'Ingresos actuales',\n              data: mainData\n            },\n            {\n              name: 'Ingresos período anterior',\n              data: comparisonData\n            }\n          ]\n        } else {\n          // Si no hay comparación, solo mostrar la serie principal\n          this.series = [{\n            name: 'Ingresos',\n            data: mainData\n          }]\n        }\n      } catch (error) {\n        console.error('Error loading revenue data:', error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    generateMockData(period) {\n      const data = []\n      let points = 0\n      \n      switch(period) {\n        case 'day':\n          points = 24\n          for (let i = 0; i < points; i++) {\n            const date = new Date()\n            date.setHours(i, 0, 0)\n            data.push([\n              date.getTime(),\n              Math.floor(Math.random() * 50000) + 10000\n            ])\n          }\n          break\n        case 'week':\n          points = 7\n          for (let i = 0; i < points; i++) {\n            const date = new Date()\n            date.setDate(date.getDate() - i)\n            data.push([\n              date.getTime(),\n              Math.floor(Math.random() * 200000) + 50000\n            ])\n          }\n          break\n        case 'month':\n          points = 30\n          for (let i = 0; i < points; i++) {\n            const date = new Date()\n            date.setDate(date.getDate() - i)\n            data.push([\n              date.getTime(),\n              Math.floor(Math.random() * 500000) + 100000\n            ])\n          }\n          break\n        case 'year':\n          points = 12\n          for (let i = 0; i < points; i++) {\n            const date = new Date()\n            date.setMonth(date.getMonth() - i)\n            data.push([\n              date.getTime(),\n              Math.floor(Math.random() * 2000000) + 500000\n            ])\n          }\n          break\n      }\n      \n      return data.reverse()\n    },\n\n    generateMockComparisonData(period) {\n      const data = []\n      let points = 0\n      \n      switch(period) {\n        case 'day':\n          points = 24\n          for (let i = 0; i < points; i++) {\n            const date = new Date()\n            date.setDate(date.getDate() - 1)\n            date.setHours(i, 0, 0)\n            data.push([\n              date.getTime(),\n              Math.floor(Math.random() * 40000) + 8000 // Valores ligeramente menores\n            ])\n          }\n          break\n        case 'week':\n          points = 7\n          for (let i = 0; i < points; i++) {\n            const date = new Date()\n            date.setDate(date.getDate() - i - 7) // Una semana antes\n            data.push([\n              date.getTime(),\n              Math.floor(Math.random() * 180000) + 40000\n            ])\n          }\n          break\n        case 'month':\n          points = 30\n          for (let i = 0; i < points; i++) {\n            const date = new Date()\n            date.setMonth(date.getMonth() - 1)\n            date.setDate(date.getDate() - i)\n            data.push([\n              date.getTime(),\n              Math.floor(Math.random() * 450000) + 90000\n            ])\n          }\n          break\n        case 'year':\n          points = 12\n          for (let i = 0; i < points; i++) {\n            const date = new Date()\n            date.setFullYear(date.getFullYear() - 1)\n            date.setMonth(date.getMonth() - i)\n            data.push([\n              date.getTime(),\n              Math.floor(Math.random() * 1800000) + 400000\n            ])\n          }\n          break\n      }\n      \n      return data.reverse()\n    }\n  }\n})\n</script>\n\n<style scoped>\n.revenue-chart {\n  background: var(--bg-secondary);\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: \n    0 2px 4px rgba(0, 0, 0, 0.05),\n    0 4px 8px rgba(0, 0, 0, 0.05),\n    inset 0 -1px 0 rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  transform: translateY(0);\n  transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\n  position: relative;\n  background-image: linear-gradient(\n    to bottom,\n    rgba(255, 255, 255, 0.1) 0%,\n    rgba(255, 255, 255, 0) 20%\n  );\n}\n\n/* Efecto de elevación al pasar el mouse */\n.revenue-chart:hover {\n  transform: translateY(-5px);\n  box-shadow: \n    0 5px 10px rgba(0, 0, 0, 0.1),\n    0 10px 20px rgba(0, 0, 0, 0.1),\n    0 20px 40px rgba(0, 0, 0, 0.05),\n    inset 0 -2px 0 rgba(0, 0, 0, 0.1),\n    inset 0 2px 0 rgba(255, 255, 255, 0.1);\n}\n\n/* Efecto de presión al hacer clic */\n.revenue-chart:active {\n  transform: translateY(-2px);\n  box-shadow: \n    0 2px 5px rgba(0, 0, 0, 0.1),\n    0 5px 10px rgba(0, 0, 0, 0.05),\n    inset 0 -1px 0 rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  transition: all 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);\n}\n\n/* Añadir un pseudo-elemento para el efecto de brillo en el borde */\n.revenue-chart::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    to right,\n    rgba(255, 255, 255, 0) 0%,\n    rgba(255, 255, 255, 0.5) 50%,\n    rgba(255, 255, 255, 0) 100%\n  );\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}\n\n/* Añadir un pseudo-elemento para el efecto de sombra en el borde inferior */\n.revenue-chart::after {\n  content: \"\";\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    to right,\n    rgba(0, 0, 0, 0) 0%,\n    rgba(0, 0, 0, 0.2) 50%,\n    rgba(0, 0, 0, 0) 100%\n  );\n  border-bottom-left-radius: 12px;\n  border-bottom-right-radius: 12px;\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.chart-title {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--text-primary);\n  margin: 0;\n}\n\n.chart-controls {\n  display: flex;\n  gap: 20px;\n  align-items: center;\n}\n\n.period-select {\n  padding: 8px 12px;\n  border: 1px solid var(--border-color);\n  border-radius: 6px;\n  background: var(--bg-secondary);\n  color: var(--text-primary);\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.period-select:hover {\n  border-color: var(--border-hover);\n}\n\n.switch {\n  position: relative;\n  display: inline-block;\n  width: 50px;\n  height: 24px;\n}\n\n.switch input {\n    opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: var(--bg-tertiary);\n  transition: .4s;\n  border-radius: 24px;\n}\n\n.slider:before {\n  position: absolute;\n  content: \"\";\n  height: 16px;\n  width: 16px;\n  left: 4px;\n  bottom: 4px;\n  background-color: var(--bg-primary);\n  transition: .4s;\n  border-radius: 50%;\n}\n\ninput:checked + .slider {\n  background-color: #2E93fA;\n}\n\ninput:checked + .slider:before {\n  transform: translateX(26px);\n}\n\n.toggle-label {\n  margin-left: 10px;\n  color: var(--text-secondary);\n    font-size: 0.9rem;\n  }\n  \n.chart-container {\n  position: relative;\n  min-height: 350px;\n  background: var(--bg-primary);\n}\n\n.loading-overlay {\n    position: absolute;\n  top: 0;\n    left: 0;\n    right: 0;\n  bottom: 0;\n  background: var(--bg-overlay);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid var(--spinner-track);\n  border-top-color: var(--spinner-color);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (max-width: 768px) {\n  .chart-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 15px;\n  }\n\n  .chart-controls {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .period-select {\n  width: 100%;\n  }\n}\n\n:deep(.apexcharts-canvas) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-svg) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-plot-area) {\n  fill: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-grid) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-gridlines-horizontal),\n:deep(.apexcharts-gridlines-vertical) {\n  stroke: var(--border-color) !important;\n}\n\n:deep(.apexcharts-plot-background) {\n  fill: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-inner) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-area-series) path {\n  fill-opacity: 0.5;\n}\n\n:deep(.apexcharts-tooltip) {\n  background: var(--bg-secondary) !important;\n  border: 1px solid var(--border-color) !important;\n}\n\n:deep(.apexcharts-tooltip-title) {\n  background: var(--bg-tertiary) !important;\n  border-bottom: 1px solid var(--border-color) !important;\n}\n\n:deep(.apexcharts-xaxistooltip) {\n  background: var(--bg-secondary) !important;\n  border: 1px solid var(--border-color) !important;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}