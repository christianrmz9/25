{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\n/**\n * Componente de menú lateral\n * \n * Se muestra al hacer clic en el logo del header\n * Contiene enlaces a las diferentes secciones de la aplicación\n * \n * @component AppSidebar\n */\nimport { useThemeStore } from '../../store/theme';\nimport SearchBar from '../ui/SearchBar.vue';\nimport MaterialIcon from '../ui/Icon.vue';\nimport { ICON_MAPPING } from '../../constants/icons';\nexport default {\n  name: 'AppSidebar',\n  components: {\n    SearchBar,\n    icon: MaterialIcon\n  },\n  props: {\n    /**\n     * Indica si el sidebar está abierto o cerrado\n     */\n    isOpen: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      isMobile: window.innerWidth <= 768,\n      themeStore: useThemeStore,\n      searchQuery: '',\n      // Cache para resultados de búsqueda\n      searchCache: new Map(),\n      // Limitar el tamaño del caché\n      maxCacheSize: 20,\n      // Acciones rápidas disponibles\n      quickActions: [{\n        id: 'create-report',\n        text: 'Crear nuevo reporte',\n        icon: 'nav-icon-report',\n        action: () => this.executeQuickAction('create-report'),\n        shortcut: 'Alt+N'\n      }, {\n        id: 'settings',\n        text: 'Abrir configuración',\n        icon: 'nav-icon-settings',\n        action: () => this.executeQuickAction('settings')\n      }, {\n        id: 'help',\n        text: 'Ver ayuda',\n        icon: 'nav-icon-note',\n        action: () => this.executeQuickAction('help')\n      }, {\n        id: 'notifications',\n        text: 'Ver todas las notificaciones',\n        icon: 'nav-icon-bell',\n        action: () => this.executeQuickAction('notifications')\n      }],\n      // Indica si estamos mostrando resultados globales\n      showingGlobalResults: false,\n      // Datos para las secciones de navegación\n      mainItems: [{\n        text: 'Dashboard',\n        icon: 'nav-icon-chart',\n        href: '#',\n        active: true\n      }, {\n        text: 'Notificaciones',\n        icon: 'nav-icon-bell',\n        href: '#',\n        badge: '12'\n      }, {\n        text: 'Tareas',\n        icon: 'nav-icon-check',\n        href: '#'\n      }, {\n        text: 'Notas',\n        icon: 'nav-icon-note',\n        href: '#'\n      }, {\n        text: 'Emails',\n        icon: 'nav-icon-mail',\n        href: '#'\n      }, {\n        text: 'Reportes',\n        icon: 'nav-icon-report',\n        href: '#'\n      }, {\n        text: 'Automatizaciones',\n        icon: 'nav-icon-settings',\n        href: '#'\n      }, {\n        text: 'Flujos de trabajo',\n        icon: 'nav-icon-workflow',\n        href: '#'\n      }],\n      sections: [{\n        title: 'Favoritos',\n        items: [{\n          text: 'UK & EU Companies',\n          icon: 'nav-icon-globe',\n          href: '#'\n        }, {\n          text: 'B2B Relationship Building',\n          icon: 'nav-icon-handshake',\n          href: '#'\n        }, {\n          text: 'Potential Partnership',\n          icon: 'nav-icon-partnership',\n          href: '#'\n        }, {\n          text: 'CRM Meeting Template',\n          icon: 'nav-icon-calendar',\n          href: '#'\n        }]\n      }, {\n        title: 'Registros',\n        items: [{\n          text: 'Clientes',\n          icon: 'nav-icon-users',\n          href: '#'\n        }, {\n          text: 'Contactos',\n          icon: 'nav-icon-phone',\n          href: '#'\n        }]\n      }]\n    };\n  },\n  computed: {\n    /**\n     * Determina la imagen del logo según el tema actual\n     */\n    logoSrc() {\n      return this.themeStore.getters.isDark() ? '/img/Wblanco.png' : '/img/Wnegro.png';\n    },\n    /**\n     * Filtra los elementos principales según la búsqueda\n     */\n    filteredMainItems() {\n      if (!this.searchQuery) return this.mainItems;\n      const queryTerms = this.prepareSearchTerms(this.searchQuery);\n      return this.mainItems.filter(item => this.itemMatchesSearch(item, queryTerms));\n    },\n    /**\n     * Filtra las secciones según la búsqueda\n     */\n    filteredSections() {\n      if (!this.searchQuery) return this.sections;\n      const queryTerms = this.prepareSearchTerms(this.searchQuery);\n\n      // Filtrar cada sección y sus elementos\n      return this.sections.map(section => {\n        // Filtrar items dentro de cada sección\n        const filteredItems = section.items.filter(item => this.itemMatchesSearch(item, queryTerms));\n\n        // Solo devuelve la sección si tiene elementos filtrados\n        if (filteredItems.length) {\n          return {\n            ...section,\n            items: filteredItems\n          };\n        }\n        return null;\n      }).filter(Boolean); // Eliminar secciones vacías\n    },\n    /**\n     * Filtra las acciones rápidas según la búsqueda\n     */\n    filteredQuickActions() {\n      if (!this.searchQuery) return [];\n      const queryTerms = this.prepareSearchTerms(this.searchQuery);\n      return this.quickActions.filter(action => this.itemMatchesSearch(action, queryTerms));\n    },\n    /**\n     * Verifica si hay resultados en la búsqueda actual\n     */\n    hasSearchResults() {\n      // Si no hay consulta, siempre hay resultados\n      if (!this.searchQuery) return true;\n\n      // Verifica si hay algún elemento en los resultados filtrados\n      return this.filteredMainItems.length > 0 || this.filteredSections.length > 0 || this.filteredQuickActions.length > 0;\n    }\n  },\n  mounted() {\n    window.addEventListener('resize', this.checkMobile);\n\n    // Atajos de teclado para el buscador\n    document.addEventListener('keydown', this.handleKeyboardShortcuts);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.checkMobile);\n    document.removeEventListener('keydown', this.handleKeyboardShortcuts);\n  },\n  methods: {\n    /**\n     * Cierra el sidebar\n     */\n    closeSidebar() {\n      this.$emit('close');\n    },\n    /**\n     * Comprueba si el dispositivo es móvil\n     */\n    checkMobile() {\n      this.isMobile = window.innerWidth <= 768;\n    },\n    /**\n     * Actualiza la consulta de búsqueda\n     */\n    filterItems(query) {\n      // Si la consulta es la misma, no hacer nada\n      if (this.searchQuery === query) return;\n      this.searchQuery = query;\n\n      // Guarda la consulta en el almacenamiento local para persistencia\n      if (query && query.length > 2) {\n        this.saveRecentSearch(query);\n      }\n    },\n    /**\n     * Guarda una búsqueda reciente en el almacenamiento local\n     */\n    saveRecentSearch(query) {\n      try {\n        // Obtener búsquedas recientes almacenadas\n        const recentSearches = JSON.parse(localStorage.getItem('recentSearches') || '[]');\n\n        // Eliminar duplicados\n        const filteredSearches = recentSearches.filter(search => search !== query);\n\n        // Añadir la nueva búsqueda al principio\n        filteredSearches.unshift(query);\n\n        // Mantener sólo las 5 búsquedas más recientes\n        const limitedSearches = filteredSearches.slice(0, 5);\n\n        // Guardar en localStorage\n        localStorage.setItem('recentSearches', JSON.stringify(limitedSearches));\n      } catch (error) {\n        console.error('Error al guardar la búsqueda reciente:', error);\n      }\n    },\n    /**\n     * Maneja atajos de teclado\n     */\n    handleKeyboardShortcuts(event) {\n      // Ctrl/Cmd + K para enfocar el buscador\n      if ((event.ctrlKey || event.metaKey) && event.key === 'k') {\n        event.preventDefault();\n        if (this.isOpen && this.$refs.searchBar) {\n          this.$refs.searchBar.focus();\n        } else {\n          // Si el sidebar está cerrado, lo abrimos primero\n          this.$emit('toggle-sidebar');\n          // Espera a que se abra antes de enfocar\n          setTimeout(() => {\n            if (this.$refs.searchBar) this.$refs.searchBar.focus();\n          }, 300);\n        }\n      }\n    },\n    /**\n     * Prepara los términos de búsqueda dividiéndolos y normalizándolos\n     */\n    prepareSearchTerms(query) {\n      // Verificar si ya está en caché\n      const cacheKey = `terms:${query}`;\n      if (this.searchCache.has(cacheKey)) {\n        return this.searchCache.get(cacheKey);\n      }\n      if (!query) return [];\n\n      // Normalizar el texto (quitar acentos, convertir a minúsculas)\n      const normalizedQuery = this.normalizeText(query);\n\n      // Dividir en términos individuales y filtrar términos vacíos o muy cortos\n      const terms = normalizedQuery.split(/\\s+/).filter(term => term.length > 1).map(term => term.toLowerCase());\n\n      // Guardar en caché\n      this.updateCache(cacheKey, terms);\n      return terms;\n    },\n    /**\n     * Comprueba si un elemento coincide con los términos de búsqueda\n     */\n    itemMatchesSearch(item, queryTerms) {\n      if (!queryTerms.length) return true;\n\n      // Clave para caché (item id + query)\n      const itemId = item.id || item.text;\n      const cacheKey = `match:${itemId}:${queryTerms.join('|')}`;\n\n      // Verificar si ya está en caché\n      if (this.searchCache.has(cacheKey)) {\n        return this.searchCache.get(cacheKey);\n      }\n\n      // Normalizar el texto del elemento\n      const normalizedText = this.normalizeText(item.text).toLowerCase();\n\n      // Verificar coincidencia exacta primero\n      if (normalizedText.includes(queryTerms.join(' '))) {\n        this.updateCache(cacheKey, true);\n        return true;\n      }\n\n      // Verificar coincidencia de términos individuales\n      // Un elemento coincide si contiene TODOS los términos de búsqueda\n      const result = queryTerms.every(term => {\n        // Coincidencia directa en el texto\n        if (normalizedText.includes(term)) {\n          return true;\n        }\n\n        // Coincidencia de inicio de palabra\n        const words = normalizedText.split(/\\s+/);\n        return words.some(word => word.startsWith(term));\n      });\n\n      // Guardar en caché\n      this.updateCache(cacheKey, result);\n      return result;\n    },\n    /**\n     * Actualiza la caché de búsqueda\n     */\n    updateCache(key, value) {\n      // Si la caché está llena, eliminar la entrada más antigua\n      if (this.searchCache.size >= this.maxCacheSize) {\n        const firstKey = this.searchCache.keys().next().value;\n        this.searchCache.delete(firstKey);\n      }\n\n      // Añadir nuevo valor\n      this.searchCache.set(key, value);\n    },\n    /**\n     * Limpia la caché de búsqueda\n     */\n    clearSearchCache() {\n      this.searchCache.clear();\n    },\n    /**\n     * Normaliza un texto quitando acentos y caracteres especiales\n     */\n    normalizeText(text) {\n      return text.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') // Eliminar acentos\n      .toLowerCase();\n    },\n    /**\n     * Resalta los términos de búsqueda en un texto\n     */\n    highlightText(text) {\n      if (!this.searchQuery || !text) return text;\n\n      // Preparar términos de búsqueda\n      const terms = this.prepareSearchTerms(this.searchQuery);\n      if (!terms.length) return text;\n\n      // Crear un patrón regex que combine todos los términos\n      // Escapar caracteres especiales para evitar problemas con regex\n      const escapedTerms = terms.map(term => term.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\n\n      // Ordenar términos por longitud (descendente) para resaltar primero los más largos\n      escapedTerms.sort((a, b) => b.length - a.length);\n\n      // Crear patrón regex para todos los términos\n      const pattern = new RegExp(`(${escapedTerms.join('|')})`, 'gi');\n\n      // Reemplazar coincidencias con versión resaltada\n      return text.replace(pattern, '<span class=\"highlight\">$1</span>');\n    },\n    /**\n     * Ejecuta una acción rápida\n     */\n    executeQuickAction(actionId) {\n      const action = this.quickActions.find(a => a.id === actionId);\n      if (!action) return;\n\n      // Cerrar el sidebar\n      this.closeSidebar();\n\n      // Limpiar la búsqueda\n      this.searchQuery = '';\n\n      // Aquí implementarías las acciones específicas\n      console.log(`Ejecutando acción: ${action.text}`);\n\n      // Ejemplos de acciones que podrías implementar:\n      switch (actionId) {\n        case 'create-report':\n          // Navegar a la página de creación de reportes\n          // this.$router.push('/reports/new');\n          break;\n        case 'settings':\n          // Abrir la página de configuración\n          // this.$router.push('/settings');\n          break;\n        case 'help':\n          // Abrir el centro de ayuda\n          // window.open('https://ayuda.tuaplicacion.com', '_blank');\n          break;\n        case 'notifications':\n          // Navegar a la página de notificaciones\n          // this.$router.push('/notifications');\n          break;\n      }\n    },\n    /**\n     * Obtiene el nombre de icono de Material Icons\n     * correspondiente a la clase CSS antigua\n     */\n    getIconName(iconClass) {\n      // Si el icono ya es un nombre de Material Icons, devolverlo tal cual\n      if (!iconClass.startsWith('nav-icon-')) {\n        return iconClass;\n      }\n\n      // Buscar el nombre correspondiente en el mapeo\n      return ICON_MAPPING[iconClass] || 'help_outline';\n    }\n  }\n};","map":{"version":3,"names":["useThemeStore","SearchBar","MaterialIcon","ICON_MAPPING","name","components","icon","props","isOpen","type","Boolean","default","data","isMobile","window","innerWidth","themeStore","searchQuery","searchCache","Map","maxCacheSize","quickActions","id","text","action","executeQuickAction","shortcut","showingGlobalResults","mainItems","href","active","badge","sections","title","items","computed","logoSrc","getters","isDark","filteredMainItems","queryTerms","prepareSearchTerms","filter","item","itemMatchesSearch","filteredSections","map","section","filteredItems","length","filteredQuickActions","hasSearchResults","mounted","addEventListener","checkMobile","document","handleKeyboardShortcuts","beforeUnmount","removeEventListener","methods","closeSidebar","$emit","filterItems","query","saveRecentSearch","recentSearches","JSON","parse","localStorage","getItem","filteredSearches","search","unshift","limitedSearches","slice","setItem","stringify","error","console","event","ctrlKey","metaKey","key","preventDefault","$refs","searchBar","focus","setTimeout","cacheKey","has","get","normalizedQuery","normalizeText","terms","split","term","toLowerCase","updateCache","itemId","join","normalizedText","includes","result","every","words","some","word","startsWith","value","size","firstKey","keys","next","delete","set","clearSearchCache","clear","normalize","replace","highlightText","escapedTerms","sort","a","b","pattern","RegExp","actionId","find","log","getIconName","iconClass"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\layout\\AppSidebar.vue"],"sourcesContent":["<template>\n  <div class=\"sidebar-overlay\" v-if=\"isOpen && isMobile\" @click=\"closeSidebar\"></div>\n  <aside class=\"app-sidebar\" :class=\"{ 'is-open': isOpen }\">\n    <div class=\"sidebar-header\">\n      <div class=\"logo-container\">\n        <img :src=\"logoSrc\" alt=\"Leadwave\" class=\"sidebar-logo\" />\n      </div>\n      <button class=\"close-button\" @click=\"closeSidebar\" aria-label=\"Cerrar menú\">\n        <icon name=\"close\" />\n      </button>\n    </div>\n    \n    <div class=\"search-box\">\n      <search-bar \n        @search=\"filterItems\" \n        ref=\"searchBar\" \n        placeholder=\"Buscar en el sistema...\"\n        :hasResults=\"hasSearchResults\"\n      />\n    </div>\n    \n    <nav class=\"sidebar-nav\">\n      <!-- Acciones rápidas -->\n      <div v-if=\"filteredQuickActions.length > 0\" class=\"quick-actions-section\">\n        <div class=\"section-title\">Acciones rápidas</div>\n        <ul class=\"nav-list\">\n          <li \n            class=\"nav-item quick-action-item\" \n            v-for=\"(action, index) in filteredQuickActions\" \n            :key=\"`action-${index}`\"\n            @click=\"action.action\"\n          >\n            <div class=\"nav-link\">\n              <span class=\"nav-icon\">\n                <icon :name=\"getIconName(action.icon)\" />\n              </span>\n              <span class=\"nav-text\" v-if=\"!searchQuery\" v-text=\"action.text\"></span>\n              <span class=\"nav-text\" v-else v-html=\"highlightText(action.text)\"></span>\n              <kbd v-if=\"action.shortcut\" class=\"action-shortcut\">{{ action.shortcut }}</kbd>\n            </div>\n          </li>\n        </ul>\n      </div>\n      \n      <!-- Elementos de navegación principal -->\n      <ul class=\"nav-list\" v-if=\"filteredMainItems.length > 0\">\n        <li class=\"nav-item\" v-for=\"(item, index) in filteredMainItems\" :key=\"`main-${index}`\">\n          <a :href=\"item.href\" class=\"nav-link\" :class=\"{ active: item.active }\">\n            <span class=\"nav-icon\">\n              <icon :name=\"getIconName(item.icon)\" />\n            </span>\n            <span class=\"nav-text\" v-if=\"!searchQuery\" v-text=\"item.text\"></span>\n            <span class=\"nav-text\" v-else v-html=\"highlightText(item.text)\"></span>\n            <span class=\"nav-badge\" v-if=\"item.badge\">{{ item.badge }}</span>\n          </a>\n        </li>\n      </ul>\n      \n      <!-- Secciones -->\n      <div class=\"nav-section\" v-for=\"(section, secIndex) in filteredSections\" :key=\"`section-${secIndex}`\">\n        <div class=\"section-title\">{{ section.title }}</div>\n        <ul class=\"nav-list\">\n          <li class=\"nav-item\" v-for=\"(item, itemIndex) in section.items\" :key=\"`${secIndex}-${itemIndex}`\">\n            <a :href=\"item.href\" class=\"nav-link\">\n              <span class=\"nav-icon\">\n                <icon :name=\"getIconName(item.icon)\" />\n              </span>\n              <span class=\"nav-text\" v-if=\"!searchQuery\" v-text=\"item.text\"></span>\n              <span class=\"nav-text\" v-else v-html=\"highlightText(item.text)\"></span>\n              <span class=\"nav-badge\" v-if=\"item.badge\">{{ item.badge }}</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      \n      <!-- Mensaje cuando no hay resultados en ninguna categoría -->\n      <div class=\"no-results-container\" v-if=\"searchQuery && !hasSearchResults\">\n        <div class=\"no-results-icon\">\n          <icon name=\"search_off\" size=\"xl\" />\n        </div>\n        <div class=\"no-results-text\">\n          No se encontraron resultados para \"<strong>{{ searchQuery }}</strong>\"\n        </div>\n        <div class=\"no-results-hint\">\n          Intenta con otros términos o revisa la ortografía\n        </div>\n      </div>\n    </nav>\n  </aside>\n</template>\n\n<script>\n/**\n * Componente de menú lateral\n * \n * Se muestra al hacer clic en el logo del header\n * Contiene enlaces a las diferentes secciones de la aplicación\n * \n * @component AppSidebar\n */\nimport { useThemeStore } from '../../store/theme';\nimport SearchBar from '../ui/SearchBar.vue';\nimport MaterialIcon from '../ui/Icon.vue';\nimport { ICON_MAPPING } from '../../constants/icons';\n\nexport default {\n  name: 'AppSidebar',\n  \n  components: {\n    SearchBar,\n    icon: MaterialIcon\n  },\n  \n  props: {\n    /**\n     * Indica si el sidebar está abierto o cerrado\n     */\n    isOpen: {\n      type: Boolean,\n      default: false\n    }\n  },\n  \n  data() {\n    return {\n      isMobile: window.innerWidth <= 768,\n      themeStore: useThemeStore,\n      searchQuery: '',\n      \n      // Cache para resultados de búsqueda\n      searchCache: new Map(),\n      \n      // Limitar el tamaño del caché\n      maxCacheSize: 20,\n      \n      // Acciones rápidas disponibles\n      quickActions: [\n        { \n          id: 'create-report', \n          text: 'Crear nuevo reporte', \n          icon: 'nav-icon-report',\n          action: () => this.executeQuickAction('create-report'),\n          shortcut: 'Alt+N'\n        },\n        { \n          id: 'settings', \n          text: 'Abrir configuración', \n          icon: 'nav-icon-settings',\n          action: () => this.executeQuickAction('settings')\n        },\n        { \n          id: 'help', \n          text: 'Ver ayuda', \n          icon: 'nav-icon-note',\n          action: () => this.executeQuickAction('help')\n        },\n        { \n          id: 'notifications', \n          text: 'Ver todas las notificaciones', \n          icon: 'nav-icon-bell',\n          action: () => this.executeQuickAction('notifications')\n        }\n      ],\n      \n      // Indica si estamos mostrando resultados globales\n      showingGlobalResults: false,\n      \n      // Datos para las secciones de navegación\n      mainItems: [\n        { \n          text: 'Dashboard', \n          icon: 'nav-icon-chart', \n          href: '#', \n          active: true\n        },\n        { \n          text: 'Notificaciones', \n          icon: 'nav-icon-bell', \n          href: '#', \n          badge: '12'\n        },\n        { \n          text: 'Tareas', \n          icon: 'nav-icon-check', \n          href: '#'\n        },\n        { \n          text: 'Notas', \n          icon: 'nav-icon-note', \n          href: '#'\n        },\n        { \n          text: 'Emails', \n          icon: 'nav-icon-mail', \n          href: '#'\n        },\n        { \n          text: 'Reportes', \n          icon: 'nav-icon-report', \n          href: '#'\n        },\n        { \n          text: 'Automatizaciones', \n          icon: 'nav-icon-settings', \n          href: '#'\n        },\n        { \n          text: 'Flujos de trabajo', \n          icon: 'nav-icon-workflow', \n          href: '#'\n        }\n      ],\n      \n      sections: [\n        {\n          title: 'Favoritos',\n          items: [\n            { \n              text: 'UK & EU Companies', \n              icon: 'nav-icon-globe', \n              href: '#'\n            },\n            { \n              text: 'B2B Relationship Building', \n              icon: 'nav-icon-handshake', \n              href: '#'\n            },\n            { \n              text: 'Potential Partnership', \n              icon: 'nav-icon-partnership', \n              href: '#'\n            },\n            { \n              text: 'CRM Meeting Template', \n              icon: 'nav-icon-calendar', \n              href: '#'\n            }\n          ]\n        },\n        {\n          title: 'Registros',\n          items: [\n            { \n              text: 'Clientes', \n              icon: 'nav-icon-users', \n              href: '#'\n            },\n            { \n              text: 'Contactos', \n              icon: 'nav-icon-phone', \n              href: '#'\n            }\n          ]\n        }\n      ]\n    };\n  },\n  \n  computed: {\n    /**\n     * Determina la imagen del logo según el tema actual\n     */\n    logoSrc() {\n      return this.themeStore.getters.isDark() ? '/img/Wblanco.png' : '/img/Wnegro.png';\n    },\n    \n    /**\n     * Filtra los elementos principales según la búsqueda\n     */\n    filteredMainItems() {\n      if (!this.searchQuery) return this.mainItems;\n      \n      const queryTerms = this.prepareSearchTerms(this.searchQuery);\n      \n      return this.mainItems.filter(item => \n        this.itemMatchesSearch(item, queryTerms)\n      );\n    },\n    \n    /**\n     * Filtra las secciones según la búsqueda\n     */\n    filteredSections() {\n      if (!this.searchQuery) return this.sections;\n      \n      const queryTerms = this.prepareSearchTerms(this.searchQuery);\n      \n      // Filtrar cada sección y sus elementos\n      return this.sections.map(section => {\n        // Filtrar items dentro de cada sección\n        const filteredItems = section.items.filter(item => \n          this.itemMatchesSearch(item, queryTerms)\n        );\n        \n        // Solo devuelve la sección si tiene elementos filtrados\n        if (filteredItems.length) {\n          return {\n            ...section,\n            items: filteredItems\n          };\n        }\n        return null;\n      }).filter(Boolean); // Eliminar secciones vacías\n    },\n    \n    /**\n     * Filtra las acciones rápidas según la búsqueda\n     */\n    filteredQuickActions() {\n      if (!this.searchQuery) return [];\n      \n      const queryTerms = this.prepareSearchTerms(this.searchQuery);\n      \n      return this.quickActions.filter(action => \n        this.itemMatchesSearch(action, queryTerms)\n      );\n    },\n    \n    /**\n     * Verifica si hay resultados en la búsqueda actual\n     */\n    hasSearchResults() {\n      // Si no hay consulta, siempre hay resultados\n      if (!this.searchQuery) return true;\n      \n      // Verifica si hay algún elemento en los resultados filtrados\n      return this.filteredMainItems.length > 0 || \n             this.filteredSections.length > 0 ||\n             this.filteredQuickActions.length > 0;\n    }\n  },\n  \n  mounted() {\n    window.addEventListener('resize', this.checkMobile);\n    \n    // Atajos de teclado para el buscador\n    document.addEventListener('keydown', this.handleKeyboardShortcuts);\n  },\n  \n  beforeUnmount() {\n    window.removeEventListener('resize', this.checkMobile);\n    document.removeEventListener('keydown', this.handleKeyboardShortcuts);\n  },\n  \n  methods: {\n    /**\n     * Cierra el sidebar\n     */\n    closeSidebar() {\n      this.$emit('close');\n    },\n    \n    /**\n     * Comprueba si el dispositivo es móvil\n     */\n    checkMobile() {\n      this.isMobile = window.innerWidth <= 768;\n    },\n    \n    /**\n     * Actualiza la consulta de búsqueda\n     */\n    filterItems(query) {\n      // Si la consulta es la misma, no hacer nada\n      if (this.searchQuery === query) return;\n      \n      this.searchQuery = query;\n      \n      // Guarda la consulta en el almacenamiento local para persistencia\n      if (query && query.length > 2) {\n        this.saveRecentSearch(query);\n      }\n    },\n    \n    /**\n     * Guarda una búsqueda reciente en el almacenamiento local\n     */\n    saveRecentSearch(query) {\n      try {\n        // Obtener búsquedas recientes almacenadas\n        const recentSearches = JSON.parse(localStorage.getItem('recentSearches') || '[]');\n        \n        // Eliminar duplicados\n        const filteredSearches = recentSearches.filter(search => search !== query);\n        \n        // Añadir la nueva búsqueda al principio\n        filteredSearches.unshift(query);\n        \n        // Mantener sólo las 5 búsquedas más recientes\n        const limitedSearches = filteredSearches.slice(0, 5);\n        \n        // Guardar en localStorage\n        localStorage.setItem('recentSearches', JSON.stringify(limitedSearches));\n      } catch (error) {\n        console.error('Error al guardar la búsqueda reciente:', error);\n      }\n    },\n    \n    /**\n     * Maneja atajos de teclado\n     */\n    handleKeyboardShortcuts(event) {\n      // Ctrl/Cmd + K para enfocar el buscador\n      if ((event.ctrlKey || event.metaKey) && event.key === 'k') {\n        event.preventDefault();\n        if (this.isOpen && this.$refs.searchBar) {\n          this.$refs.searchBar.focus();\n        } else {\n          // Si el sidebar está cerrado, lo abrimos primero\n          this.$emit('toggle-sidebar');\n          // Espera a que se abra antes de enfocar\n          setTimeout(() => {\n            if (this.$refs.searchBar) this.$refs.searchBar.focus();\n          }, 300);\n        }\n      }\n    },\n    \n    /**\n     * Prepara los términos de búsqueda dividiéndolos y normalizándolos\n     */\n    prepareSearchTerms(query) {\n      // Verificar si ya está en caché\n      const cacheKey = `terms:${query}`;\n      if (this.searchCache.has(cacheKey)) {\n        return this.searchCache.get(cacheKey);\n      }\n      \n      if (!query) return [];\n      \n      // Normalizar el texto (quitar acentos, convertir a minúsculas)\n      const normalizedQuery = this.normalizeText(query);\n      \n      // Dividir en términos individuales y filtrar términos vacíos o muy cortos\n      const terms = normalizedQuery\n        .split(/\\s+/)\n        .filter(term => term.length > 1)\n        .map(term => term.toLowerCase());\n      \n      // Guardar en caché\n      this.updateCache(cacheKey, terms);\n      \n      return terms;\n    },\n    \n    /**\n     * Comprueba si un elemento coincide con los términos de búsqueda\n     */\n    itemMatchesSearch(item, queryTerms) {\n      if (!queryTerms.length) return true;\n      \n      // Clave para caché (item id + query)\n      const itemId = item.id || item.text;\n      const cacheKey = `match:${itemId}:${queryTerms.join('|')}`;\n      \n      // Verificar si ya está en caché\n      if (this.searchCache.has(cacheKey)) {\n        return this.searchCache.get(cacheKey);\n      }\n      \n      // Normalizar el texto del elemento\n      const normalizedText = this.normalizeText(item.text).toLowerCase();\n      \n      // Verificar coincidencia exacta primero\n      if (normalizedText.includes(queryTerms.join(' '))) {\n        this.updateCache(cacheKey, true);\n        return true;\n      }\n      \n      // Verificar coincidencia de términos individuales\n      // Un elemento coincide si contiene TODOS los términos de búsqueda\n      const result = queryTerms.every(term => {\n        // Coincidencia directa en el texto\n        if (normalizedText.includes(term)) {\n          return true;\n        }\n        \n        // Coincidencia de inicio de palabra\n        const words = normalizedText.split(/\\s+/);\n        return words.some(word => word.startsWith(term));\n      });\n      \n      // Guardar en caché\n      this.updateCache(cacheKey, result);\n      \n      return result;\n    },\n    \n    /**\n     * Actualiza la caché de búsqueda\n     */\n    updateCache(key, value) {\n      // Si la caché está llena, eliminar la entrada más antigua\n      if (this.searchCache.size >= this.maxCacheSize) {\n        const firstKey = this.searchCache.keys().next().value;\n        this.searchCache.delete(firstKey);\n      }\n      \n      // Añadir nuevo valor\n      this.searchCache.set(key, value);\n    },\n    \n    /**\n     * Limpia la caché de búsqueda\n     */\n    clearSearchCache() {\n      this.searchCache.clear();\n    },\n    \n    /**\n     * Normaliza un texto quitando acentos y caracteres especiales\n     */\n    normalizeText(text) {\n      return text\n        .normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '') // Eliminar acentos\n        .toLowerCase();\n    },\n    \n    /**\n     * Resalta los términos de búsqueda en un texto\n     */\n    highlightText(text) {\n      if (!this.searchQuery || !text) return text;\n      \n      // Preparar términos de búsqueda\n      const terms = this.prepareSearchTerms(this.searchQuery);\n      if (!terms.length) return text;\n      \n      // Crear un patrón regex que combine todos los términos\n      // Escapar caracteres especiales para evitar problemas con regex\n      const escapedTerms = terms.map(term => \n        term.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      );\n      \n      // Ordenar términos por longitud (descendente) para resaltar primero los más largos\n      escapedTerms.sort((a, b) => b.length - a.length);\n      \n      // Crear patrón regex para todos los términos\n      const pattern = new RegExp(`(${escapedTerms.join('|')})`, 'gi');\n      \n      // Reemplazar coincidencias con versión resaltada\n      return text.replace(pattern, '<span class=\"highlight\">$1</span>');\n    },\n    \n    /**\n     * Ejecuta una acción rápida\n     */\n    executeQuickAction(actionId) {\n      const action = this.quickActions.find(a => a.id === actionId);\n      if (!action) return;\n      \n      // Cerrar el sidebar\n      this.closeSidebar();\n      \n      // Limpiar la búsqueda\n      this.searchQuery = '';\n      \n      // Aquí implementarías las acciones específicas\n      console.log(`Ejecutando acción: ${action.text}`);\n      \n      // Ejemplos de acciones que podrías implementar:\n      switch(actionId) {\n        case 'create-report':\n          // Navegar a la página de creación de reportes\n          // this.$router.push('/reports/new');\n          break;\n        case 'settings':\n          // Abrir la página de configuración\n          // this.$router.push('/settings');\n          break;\n        case 'help':\n          // Abrir el centro de ayuda\n          // window.open('https://ayuda.tuaplicacion.com', '_blank');\n          break;\n        case 'notifications':\n          // Navegar a la página de notificaciones\n          // this.$router.push('/notifications');\n          break;\n      }\n    },\n    \n    /**\n     * Obtiene el nombre de icono de Material Icons\n     * correspondiente a la clase CSS antigua\n     */\n    getIconName(iconClass) {\n      // Si el icono ya es un nombre de Material Icons, devolverlo tal cual\n      if (!iconClass.startsWith('nav-icon-')) {\n        return iconClass;\n      }\n      \n      // Buscar el nombre correspondiente en el mapeo\n      return ICON_MAPPING[iconClass] || 'help_outline';\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Overlay que oscurece el fondo cuando el sidebar está abierto en móvil */\n.sidebar-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n}\n\n/* Estilos del sidebar */\n.app-sidebar {\n  position: fixed;\n  top: 0;\n  left: -280px; /* Oculto por defecto */\n  width: 280px;\n  height: 100vh;\n  background-color: var(--sidebar-bg);\n  z-index: 1000;\n  transition: left 0.3s ease;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  color: var(--sidebar-text);\n  scrollbar-width: thin;\n  scrollbar-color: rgba(255, 255, 255, 0.2) rgba(0, 0, 0, 0.2);\n  box-shadow: var(--card-shadow);\n}\n\n/* Personalización de la barra de desplazamiento para WebKit (Chrome, Safari, etc.) */\n.app-sidebar::-webkit-scrollbar {\n  width: 8px;\n}\n\n.app-sidebar::-webkit-scrollbar-track {\n  background: var(--scrollbar-track);\n  border-radius: 4px;\n}\n\n.app-sidebar::-webkit-scrollbar-thumb {\n  background-color: var(--scrollbar-thumb);\n  border-radius: 4px;\n  opacity: 0.7;\n}\n\n.app-sidebar::-webkit-scrollbar-thumb:hover {\n  background-color: var(--scrollbar-thumb-hover);\n  opacity: 1;\n}\n\n/* Cuando está abierto */\n.app-sidebar.is-open {\n  left: 0;\n}\n\n/* Cabecera del sidebar */\n.sidebar-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.25rem 1rem 0.75rem;\n  border-bottom: none;\n  background-color: var(--bg-secondary);\n}\n\n.logo-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n}\n\n.sidebar-logo {\n  width: 54px;\n  height: 54px;\n  object-fit: contain;\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n  transition: transform 0.3s ease;\n}\n\n.sidebar-logo:hover {\n  transform: scale(1.05);\n}\n\n/* Botón de cerrar */\n.close-button {\n  background: none;\n  border: none;\n  color: var(--text-secondary);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  transition: background-color 0.2s;\n  position: relative;\n}\n\n.close-button:hover {\n  background-color: var(--bg-primary);\n}\n\n/* Estilos de navegación e iconos reutilizados */\n.nav-icon {\n  margin-right: 0.75rem;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0.75;\n}\n\n.nav-link:hover .nav-icon {\n  opacity: 0.9;\n}\n\n.nav-link.active .nav-icon {\n  opacity: 1;\n}\n\n/* Navegación */\n.sidebar-nav {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0.5rem 0;\n  scrollbar-width: thin;\n  scrollbar-color: var(--border) var(--bg-primary);\n  background-color: var(--sidebar-bg);\n}\n\n/* Personalización de la barra de desplazamiento para WebKit (Chrome, Safari, etc.) */\n.sidebar-nav::-webkit-scrollbar {\n  width: 6px;\n}\n\n.sidebar-nav::-webkit-scrollbar-track {\n  background: var(--scrollbar-track);\n  border-radius: 3px;\n}\n\n.sidebar-nav::-webkit-scrollbar-thumb {\n  background-color: var(--scrollbar-thumb);\n  border-radius: 3px;\n  opacity: 0.7;\n}\n\n.sidebar-nav::-webkit-scrollbar-thumb:hover {\n  background-color: var(--scrollbar-thumb-hover);\n  opacity: 1;\n}\n\n.nav-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.nav-section {\n  margin-top: 1.5rem;\n  padding-top: 0.5rem;\n  border-top: 1px solid var(--border);\n}\n\n.section-title {\n  padding: 0.5rem 1rem;\n  font-size: 0.85rem;\n  color: var(--text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.nav-item {\n  margin-bottom: 2px;\n}\n\n.nav-link {\n  display: flex;\n  align-items: center;\n  padding: 0.6rem 1rem;\n  color: var(--text-primary);\n  text-decoration: none;\n  transition: background-color 0.2s;\n  position: relative;\n}\n\n.nav-link:hover {\n  background-color: var(--bg-primary);\n}\n\n.nav-link.active {\n  background-color: var(--bg-primary);\n  color: var(--text-primary);\n  font-weight: 500;\n}\n\n/* Estilos para acciones rápidas */\n.quick-actions-section {\n  margin-bottom: 1rem;\n  border-bottom: 1px solid var(--border);\n  padding-bottom: 0.5rem;\n}\n\n.quick-action-item {\n  cursor: pointer;\n}\n\n.action-shortcut {\n  margin-left: auto;\n  background-color: var(--bg-secondary);\n  color: var(--text-secondary);\n  padding: 2px 5px;\n  border-radius: 4px;\n  font-size: 0.7rem;\n  font-family: monospace;\n  border: 1px solid var(--border);\n}\n\n/* Estilos para mensajes de no resultados */\n.no-results-container {\n  padding: 2rem 1rem;\n  text-align: center;\n  color: var(--text-secondary);\n  animation: fadeIn 0.3s ease;\n}\n\n.no-results-icon {\n  font-size: 2rem;\n  margin-bottom: 1rem;\n  opacity: 0.7;\n}\n\n.no-results-text {\n  font-size: 0.95rem;\n  margin-bottom: 0.5rem;\n}\n\n.no-results-hint {\n  font-size: 0.85rem;\n  opacity: 0.7;\n}\n\n@media (min-width: 769px) {\n  /* En pantallas grandes, transformar el contenido principal */\n  .app-sidebar {\n    left: 0;\n    transform: translateX(-100%);\n  }\n  \n  .app-sidebar.is-open {\n    transform: translateX(0);\n  }\n}\n\n/* Estilo para texto resaltado */\n:deep(.highlight) {\n  background-color: rgba(var(--primary-rgb), 0.2);\n  border-radius: 3px;\n  padding: 0 2px;\n  font-weight: 500;\n  color: var(--primary);\n}\n\n/* Estilos para acciones rápidas */\n.quick-actions-section {\n  margin-bottom: 1rem;\n  border-bottom: 1px solid var(--border);\n  padding-bottom: 0.5rem;\n}\n\n.quick-action-item {\n  cursor: pointer;\n}\n\n.action-shortcut {\n  margin-left: auto;\n  background-color: var(--bg-secondary);\n  color: var(--text-secondary);\n  padding: 2px 5px;\n  border-radius: 4px;\n  font-size: 0.7rem;\n  font-family: monospace;\n  border: 1px solid var(--border);\n}\n\n/* Estilos para mensajes de no resultados */\n.no-results-container {\n  padding: 2rem 1rem;\n  text-align: center;\n  color: var(--text-secondary);\n  animation: fadeIn 0.3s ease;\n}\n\n.no-results-icon {\n  font-size: 2rem;\n  margin-bottom: 1rem;\n  opacity: 0.7;\n}\n\n.no-results-text {\n  font-size: 0.95rem;\n  margin-bottom: 0.5rem;\n}\n\n.no-results-hint {\n  font-size: 0.85rem;\n  opacity: 0.7;\n}\n</style> "],"mappings":";;;;;;AA4FA;;;;;;;;AAQA,SAASA,aAAY,QAAS,mBAAmB;AACjD,OAAOC,SAAQ,MAAO,qBAAqB;AAC3C,OAAOC,YAAW,MAAO,gBAAgB;AACzC,SAASC,YAAW,QAAS,uBAAuB;AAEpD,eAAe;EACbC,IAAI,EAAE,YAAY;EAElBC,UAAU,EAAE;IACVJ,SAAS;IACTK,IAAI,EAAEJ;EACR,CAAC;EAEDK,KAAK,EAAE;IACL;;;IAGAC,MAAM,EAAE;MACNC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAEC,MAAM,CAACC,UAAS,IAAK,GAAG;MAClCC,UAAU,EAAEhB,aAAa;MACzBiB,WAAW,EAAE,EAAE;MAEf;MACAC,WAAW,EAAE,IAAIC,GAAG,CAAC,CAAC;MAEtB;MACAC,YAAY,EAAE,EAAE;MAEhB;MACAC,YAAY,EAAE,CACZ;QACEC,EAAE,EAAE,eAAe;QACnBC,IAAI,EAAE,qBAAqB;QAC3BjB,IAAI,EAAE,iBAAiB;QACvBkB,MAAM,EAAEA,CAAA,KAAM,IAAI,CAACC,kBAAkB,CAAC,eAAe,CAAC;QACtDC,QAAQ,EAAE;MACZ,CAAC,EACD;QACEJ,EAAE,EAAE,UAAU;QACdC,IAAI,EAAE,qBAAqB;QAC3BjB,IAAI,EAAE,mBAAmB;QACzBkB,MAAM,EAAEA,CAAA,KAAM,IAAI,CAACC,kBAAkB,CAAC,UAAU;MAClD,CAAC,EACD;QACEH,EAAE,EAAE,MAAM;QACVC,IAAI,EAAE,WAAW;QACjBjB,IAAI,EAAE,eAAe;QACrBkB,MAAM,EAAEA,CAAA,KAAM,IAAI,CAACC,kBAAkB,CAAC,MAAM;MAC9C,CAAC,EACD;QACEH,EAAE,EAAE,eAAe;QACnBC,IAAI,EAAE,8BAA8B;QACpCjB,IAAI,EAAE,eAAe;QACrBkB,MAAM,EAAEA,CAAA,KAAM,IAAI,CAACC,kBAAkB,CAAC,eAAe;MACvD,EACD;MAED;MACAE,oBAAoB,EAAE,KAAK;MAE3B;MACAC,SAAS,EAAE,CACT;QACEL,IAAI,EAAE,WAAW;QACjBjB,IAAI,EAAE,gBAAgB;QACtBuB,IAAI,EAAE,GAAG;QACTC,MAAM,EAAE;MACV,CAAC,EACD;QACEP,IAAI,EAAE,gBAAgB;QACtBjB,IAAI,EAAE,eAAe;QACrBuB,IAAI,EAAE,GAAG;QACTE,KAAK,EAAE;MACT,CAAC,EACD;QACER,IAAI,EAAE,QAAQ;QACdjB,IAAI,EAAE,gBAAgB;QACtBuB,IAAI,EAAE;MACR,CAAC,EACD;QACEN,IAAI,EAAE,OAAO;QACbjB,IAAI,EAAE,eAAe;QACrBuB,IAAI,EAAE;MACR,CAAC,EACD;QACEN,IAAI,EAAE,QAAQ;QACdjB,IAAI,EAAE,eAAe;QACrBuB,IAAI,EAAE;MACR,CAAC,EACD;QACEN,IAAI,EAAE,UAAU;QAChBjB,IAAI,EAAE,iBAAiB;QACvBuB,IAAI,EAAE;MACR,CAAC,EACD;QACEN,IAAI,EAAE,kBAAkB;QACxBjB,IAAI,EAAE,mBAAmB;QACzBuB,IAAI,EAAE;MACR,CAAC,EACD;QACEN,IAAI,EAAE,mBAAmB;QACzBjB,IAAI,EAAE,mBAAmB;QACzBuB,IAAI,EAAE;MACR,EACD;MAEDG,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,WAAW;QAClBC,KAAK,EAAE,CACL;UACEX,IAAI,EAAE,mBAAmB;UACzBjB,IAAI,EAAE,gBAAgB;UACtBuB,IAAI,EAAE;QACR,CAAC,EACD;UACEN,IAAI,EAAE,2BAA2B;UACjCjB,IAAI,EAAE,oBAAoB;UAC1BuB,IAAI,EAAE;QACR,CAAC,EACD;UACEN,IAAI,EAAE,uBAAuB;UAC7BjB,IAAI,EAAE,sBAAsB;UAC5BuB,IAAI,EAAE;QACR,CAAC,EACD;UACEN,IAAI,EAAE,sBAAsB;UAC5BjB,IAAI,EAAE,mBAAmB;UACzBuB,IAAI,EAAE;QACR;MAEJ,CAAC,EACD;QACEI,KAAK,EAAE,WAAW;QAClBC,KAAK,EAAE,CACL;UACEX,IAAI,EAAE,UAAU;UAChBjB,IAAI,EAAE,gBAAgB;UACtBuB,IAAI,EAAE;QACR,CAAC,EACD;UACEN,IAAI,EAAE,WAAW;UACjBjB,IAAI,EAAE,gBAAgB;UACtBuB,IAAI,EAAE;QACR;MAEJ;IAEJ,CAAC;EACH,CAAC;EAEDM,QAAQ,EAAE;IACR;;;IAGAC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACpB,UAAU,CAACqB,OAAO,CAACC,MAAM,CAAC,IAAI,kBAAiB,GAAI,iBAAiB;IAClF,CAAC;IAED;;;IAGAC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACtB,WAAW,EAAE,OAAO,IAAI,CAACW,SAAS;MAE5C,MAAMY,UAAS,GAAI,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACxB,WAAW,CAAC;MAE5D,OAAO,IAAI,CAACW,SAAS,CAACc,MAAM,CAACC,IAAG,IAC9B,IAAI,CAACC,iBAAiB,CAACD,IAAI,EAAEH,UAAU,CACzC,CAAC;IACH,CAAC;IAED;;;IAGAK,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAAC5B,WAAW,EAAE,OAAO,IAAI,CAACe,QAAQ;MAE3C,MAAMQ,UAAS,GAAI,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACxB,WAAW,CAAC;;MAE5D;MACA,OAAO,IAAI,CAACe,QAAQ,CAACc,GAAG,CAACC,OAAM,IAAK;QAClC;QACA,MAAMC,aAAY,GAAID,OAAO,CAACb,KAAK,CAACQ,MAAM,CAACC,IAAG,IAC5C,IAAI,CAACC,iBAAiB,CAACD,IAAI,EAAEH,UAAU,CACzC,CAAC;;QAED;QACA,IAAIQ,aAAa,CAACC,MAAM,EAAE;UACxB,OAAO;YACL,GAAGF,OAAO;YACVb,KAAK,EAAEc;UACT,CAAC;QACH;QACA,OAAO,IAAI;MACb,CAAC,CAAC,CAACN,MAAM,CAAChC,OAAO,CAAC,EAAE;IACtB,CAAC;IAED;;;IAGAwC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAAC,IAAI,CAACjC,WAAW,EAAE,OAAO,EAAE;MAEhC,MAAMuB,UAAS,GAAI,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACxB,WAAW,CAAC;MAE5D,OAAO,IAAI,CAACI,YAAY,CAACqB,MAAM,CAAClB,MAAK,IACnC,IAAI,CAACoB,iBAAiB,CAACpB,MAAM,EAAEgB,UAAU,CAC3C,CAAC;IACH,CAAC;IAED;;;IAGAW,gBAAgBA,CAAA,EAAG;MACjB;MACA,IAAI,CAAC,IAAI,CAAClC,WAAW,EAAE,OAAO,IAAI;;MAElC;MACA,OAAO,IAAI,CAACsB,iBAAiB,CAACU,MAAK,GAAI,KAChC,IAAI,CAACJ,gBAAgB,CAACI,MAAK,GAAI,KAC/B,IAAI,CAACC,oBAAoB,CAACD,MAAK,GAAI,CAAC;IAC7C;EACF,CAAC;EAEDG,OAAOA,CAAA,EAAG;IACRtC,MAAM,CAACuC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,WAAW,CAAC;;IAEnD;IACAC,QAAQ,CAACF,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACG,uBAAuB,CAAC;EACpE,CAAC;EAEDC,aAAaA,CAAA,EAAG;IACd3C,MAAM,CAAC4C,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACJ,WAAW,CAAC;IACtDC,QAAQ,CAACG,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACF,uBAAuB,CAAC;EACvE,CAAC;EAEDG,OAAO,EAAE;IACP;;;IAGAC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;IACrB,CAAC;IAED;;;IAGAP,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACzC,QAAO,GAAIC,MAAM,CAACC,UAAS,IAAK,GAAG;IAC1C,CAAC;IAED;;;IAGA+C,WAAWA,CAACC,KAAK,EAAE;MACjB;MACA,IAAI,IAAI,CAAC9C,WAAU,KAAM8C,KAAK,EAAE;MAEhC,IAAI,CAAC9C,WAAU,GAAI8C,KAAK;;MAExB;MACA,IAAIA,KAAI,IAAKA,KAAK,CAACd,MAAK,GAAI,CAAC,EAAE;QAC7B,IAAI,CAACe,gBAAgB,CAACD,KAAK,CAAC;MAC9B;IACF,CAAC;IAED;;;IAGAC,gBAAgBA,CAACD,KAAK,EAAE;MACtB,IAAI;QACF;QACA,MAAME,cAAa,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,KAAK,IAAI,CAAC;;QAEjF;QACA,MAAMC,gBAAe,GAAIL,cAAc,CAACvB,MAAM,CAAC6B,MAAK,IAAKA,MAAK,KAAMR,KAAK,CAAC;;QAE1E;QACAO,gBAAgB,CAACE,OAAO,CAACT,KAAK,CAAC;;QAE/B;QACA,MAAMU,eAAc,GAAIH,gBAAgB,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;;QAEpD;QACAN,YAAY,CAACO,OAAO,CAAC,gBAAgB,EAAET,IAAI,CAACU,SAAS,CAACH,eAAe,CAAC,CAAC;MACzE,EAAE,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAChE;IACF,CAAC;IAED;;;IAGArB,uBAAuBA,CAACuB,KAAK,EAAE;MAC7B;MACA,IAAI,CAACA,KAAK,CAACC,OAAM,IAAKD,KAAK,CAACE,OAAO,KAAKF,KAAK,CAACG,GAAE,KAAM,GAAG,EAAE;QACzDH,KAAK,CAACI,cAAc,CAAC,CAAC;QACtB,IAAI,IAAI,CAAC3E,MAAK,IAAK,IAAI,CAAC4E,KAAK,CAACC,SAAS,EAAE;UACvC,IAAI,CAACD,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;QAC9B,OAAO;UACL;UACA,IAAI,CAACzB,KAAK,CAAC,gBAAgB,CAAC;UAC5B;UACA0B,UAAU,CAAC,MAAM;YACf,IAAI,IAAI,CAACH,KAAK,CAACC,SAAS,EAAE,IAAI,CAACD,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;UACxD,CAAC,EAAE,GAAG,CAAC;QACT;MACF;IACF,CAAC;IAED;;;IAGA7C,kBAAkBA,CAACsB,KAAK,EAAE;MACxB;MACA,MAAMyB,QAAO,GAAI,SAASzB,KAAK,EAAE;MACjC,IAAI,IAAI,CAAC7C,WAAW,CAACuE,GAAG,CAACD,QAAQ,CAAC,EAAE;QAClC,OAAO,IAAI,CAACtE,WAAW,CAACwE,GAAG,CAACF,QAAQ,CAAC;MACvC;MAEA,IAAI,CAACzB,KAAK,EAAE,OAAO,EAAE;;MAErB;MACA,MAAM4B,eAAc,GAAI,IAAI,CAACC,aAAa,CAAC7B,KAAK,CAAC;;MAEjD;MACA,MAAM8B,KAAI,GAAIF,eAAc,CACzBG,KAAK,CAAC,KAAK,EACXpD,MAAM,CAACqD,IAAG,IAAKA,IAAI,CAAC9C,MAAK,GAAI,CAAC,EAC9BH,GAAG,CAACiD,IAAG,IAAKA,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;;MAElC;MACA,IAAI,CAACC,WAAW,CAACT,QAAQ,EAAEK,KAAK,CAAC;MAEjC,OAAOA,KAAK;IACd,CAAC;IAED;;;IAGAjD,iBAAiBA,CAACD,IAAI,EAAEH,UAAU,EAAE;MAClC,IAAI,CAACA,UAAU,CAACS,MAAM,EAAE,OAAO,IAAI;;MAEnC;MACA,MAAMiD,MAAK,GAAIvD,IAAI,CAACrB,EAAC,IAAKqB,IAAI,CAACpB,IAAI;MACnC,MAAMiE,QAAO,GAAI,SAASU,MAAM,IAAI1D,UAAU,CAAC2D,IAAI,CAAC,GAAG,CAAC,EAAE;;MAE1D;MACA,IAAI,IAAI,CAACjF,WAAW,CAACuE,GAAG,CAACD,QAAQ,CAAC,EAAE;QAClC,OAAO,IAAI,CAACtE,WAAW,CAACwE,GAAG,CAACF,QAAQ,CAAC;MACvC;;MAEA;MACA,MAAMY,cAAa,GAAI,IAAI,CAACR,aAAa,CAACjD,IAAI,CAACpB,IAAI,CAAC,CAACyE,WAAW,CAAC,CAAC;;MAElE;MACA,IAAII,cAAc,CAACC,QAAQ,CAAC7D,UAAU,CAAC2D,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;QACjD,IAAI,CAACF,WAAW,CAACT,QAAQ,EAAE,IAAI,CAAC;QAChC,OAAO,IAAI;MACb;;MAEA;MACA;MACA,MAAMc,MAAK,GAAI9D,UAAU,CAAC+D,KAAK,CAACR,IAAG,IAAK;QACtC;QACA,IAAIK,cAAc,CAACC,QAAQ,CAACN,IAAI,CAAC,EAAE;UACjC,OAAO,IAAI;QACb;;QAEA;QACA,MAAMS,KAAI,GAAIJ,cAAc,CAACN,KAAK,CAAC,KAAK,CAAC;QACzC,OAAOU,KAAK,CAACC,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACC,UAAU,CAACZ,IAAI,CAAC,CAAC;MAClD,CAAC,CAAC;;MAEF;MACA,IAAI,CAACE,WAAW,CAACT,QAAQ,EAAEc,MAAM,CAAC;MAElC,OAAOA,MAAM;IACf,CAAC;IAED;;;IAGAL,WAAWA,CAACf,GAAG,EAAE0B,KAAK,EAAE;MACtB;MACA,IAAI,IAAI,CAAC1F,WAAW,CAAC2F,IAAG,IAAK,IAAI,CAACzF,YAAY,EAAE;QAC9C,MAAM0F,QAAO,GAAI,IAAI,CAAC5F,WAAW,CAAC6F,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACJ,KAAK;QACrD,IAAI,CAAC1F,WAAW,CAAC+F,MAAM,CAACH,QAAQ,CAAC;MACnC;;MAEA;MACA,IAAI,CAAC5F,WAAW,CAACgG,GAAG,CAAChC,GAAG,EAAE0B,KAAK,CAAC;IAClC,CAAC;IAED;;;IAGAO,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACjG,WAAW,CAACkG,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED;;;IAGAxB,aAAaA,CAACrE,IAAI,EAAE;MAClB,OAAOA,IAAG,CACP8F,SAAS,CAAC,KAAK,EACfC,OAAO,CAAC,kBAAkB,EAAE,EAAE,EAAE;MAAA,CAChCtB,WAAW,CAAC,CAAC;IAClB,CAAC;IAED;;;IAGAuB,aAAaA,CAAChG,IAAI,EAAE;MAClB,IAAI,CAAC,IAAI,CAACN,WAAU,IAAK,CAACM,IAAI,EAAE,OAAOA,IAAI;;MAE3C;MACA,MAAMsE,KAAI,GAAI,IAAI,CAACpD,kBAAkB,CAAC,IAAI,CAACxB,WAAW,CAAC;MACvD,IAAI,CAAC4E,KAAK,CAAC5C,MAAM,EAAE,OAAO1B,IAAI;;MAE9B;MACA;MACA,MAAMiG,YAAW,GAAI3B,KAAK,CAAC/C,GAAG,CAACiD,IAAG,IAChCA,IAAI,CAACuB,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAC5C,CAAC;;MAED;MACAE,YAAY,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC1E,MAAK,GAAIyE,CAAC,CAACzE,MAAM,CAAC;;MAEhD;MACA,MAAM2E,OAAM,GAAI,IAAIC,MAAM,CAAC,IAAIL,YAAY,CAACrB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;;MAE/D;MACA,OAAO5E,IAAI,CAAC+F,OAAO,CAACM,OAAO,EAAE,mCAAmC,CAAC;IACnE,CAAC;IAED;;;IAGAnG,kBAAkBA,CAACqG,QAAQ,EAAE;MAC3B,MAAMtG,MAAK,GAAI,IAAI,CAACH,YAAY,CAAC0G,IAAI,CAACL,CAAA,IAAKA,CAAC,CAACpG,EAAC,KAAMwG,QAAQ,CAAC;MAC7D,IAAI,CAACtG,MAAM,EAAE;;MAEb;MACA,IAAI,CAACoC,YAAY,CAAC,CAAC;;MAEnB;MACA,IAAI,CAAC3C,WAAU,GAAI,EAAE;;MAErB;MACA6D,OAAO,CAACkD,GAAG,CAAC,sBAAsBxG,MAAM,CAACD,IAAI,EAAE,CAAC;;MAEhD;MACA,QAAOuG,QAAQ;QACb,KAAK,eAAe;UAClB;UACA;UACA;QACF,KAAK,UAAU;UACb;UACA;UACA;QACF,KAAK,MAAM;UACT;UACA;UACA;QACF,KAAK,eAAe;UAClB;UACA;UACA;MACJ;IACF,CAAC;IAED;;;;IAIAG,WAAWA,CAACC,SAAS,EAAE;MACrB;MACA,IAAI,CAACA,SAAS,CAACvB,UAAU,CAAC,WAAW,CAAC,EAAE;QACtC,OAAOuB,SAAS;MAClB;;MAEA;MACA,OAAO/H,YAAY,CAAC+H,SAAS,KAAK,cAAc;IAClD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}