{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent } from 'vue';\nimport VueApexCharts from 'vue3-apexcharts';\nexport default defineComponent({\n  name: 'DateRangeChart',\n  components: {\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      startDate: '',\n      endDate: '',\n      today: new Date().toISOString().split('T')[0],\n      isLoading: false,\n      isDarkMode: false,\n      showDatePicker: false,\n      currentMonth: new Date(),\n      tempStartDate: null,\n      tempEndDate: null,\n      weekDays: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],\n      series: [{\n        name: 'Ventas',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: 'transparent',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        colors: ['#2E93fA'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back'\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ventas ($)',\n            style: {\n              fontSize: '14px',\n              color: '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: '#666'\n            },\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        }\n      }\n    };\n  },\n  computed: {\n    hasDateRange() {\n      return this.startDate && this.endDate;\n    },\n    hasData() {\n      return this.series[0].data.length > 0;\n    },\n    currentMonthName() {\n      return this.currentMonth.toLocaleDateString('es-ES', {\n        month: 'long',\n        year: 'numeric'\n      });\n    },\n    calendarDays() {\n      const year = this.currentMonth.getFullYear();\n      const month = this.currentMonth.getMonth();\n      const firstDay = new Date(year, month, 1);\n      const lastDay = new Date(year, month + 1, 0);\n      const days = [];\n      const firstDayOfWeek = firstDay.getDay();\n\n      // Días del mes anterior\n      for (let i = firstDayOfWeek; i > 0; i--) {\n        const prevDate = new Date(year, month, -i + 1);\n        days.push({\n          date: prevDate.toISOString().split('T')[0],\n          dayNumber: prevDate.getDate(),\n          isOtherMonth: true\n        });\n      }\n\n      // Días del mes actual\n      for (let day = 1; day <= lastDay.getDate(); day++) {\n        const currentDate = new Date(year, month, day);\n        days.push({\n          date: currentDate.toISOString().split('T')[0],\n          dayNumber: day,\n          isOtherMonth: false\n        });\n      }\n\n      // Días del mes siguiente\n      const remainingDays = 42 - days.length;\n      for (let i = 1; i <= remainingDays; i++) {\n        const nextDate = new Date(year, month + 1, i);\n        days.push({\n          date: nextDate.toISOString().split('T')[0],\n          dayNumber: i,\n          isOtherMonth: true\n        });\n      }\n      return days;\n    },\n    formatDateRange() {\n      if (!this.startDate && !this.endDate) return '';\n      if (!this.endDate) return this.formatDate(this.startDate);\n      return `${this.formatDate(this.startDate)} - ${this.formatDate(this.endDate)}`;\n    },\n    canApply() {\n      return this.tempStartDate && this.tempEndDate;\n    }\n  },\n  created() {\n    this.checkDarkMode();\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode);\n  },\n  beforeUnmount() {\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode);\n  },\n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme');\n      this.updateChartTheme();\n    },\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement);\n      const textSecondary = style.getPropertyValue('--text-secondary').trim();\n      const borderColor = style.getPropertyValue('--border-color').trim();\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim();\n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: textSecondary,\n          toolbar: {\n            ...this.chartOptions.chart.toolbar,\n            tools: {\n              ...this.chartOptions.chart.toolbar.tools,\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          }\n        },\n        plotOptions: {\n          area: {\n            fillTo: 'origin'\n          }\n        },\n        grid: {\n          show: true,\n          borderColor: this.isDarkMode ? '#333333' : '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back',\n          background: bgSecondary,\n          padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          },\n          xaxis: {\n            lines: {\n              show: true,\n              color: this.isDarkMode ? '#333333' : '#f1f1f1'\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true,\n              color: this.isDarkMode ? '#333333' : '#f1f1f1'\n            }\n          }\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          ...this.chartOptions.xaxis,\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666',\n              fontSize: '12px'\n            }\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: this.isDarkMode ? '#333333' : '#f1f1f1',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          ...this.chartOptions.yaxis,\n          title: {\n            text: 'Ventas ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light'\n        },\n        theme: {\n          mode: this.isDarkMode ? 'dark' : 'light',\n          palette: 'palette1'\n        }\n      };\n    },\n    async loadData() {\n      if (!this.hasDateRange) return;\n      this.isLoading = true;\n      // Resetear los datos actuales\n      this.series[0].data = [];\n      try {\n        const start = new Date(this.startDate);\n        const end = new Date(this.endDate);\n        const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24));\n        const data = [];\n        let currentValue = Math.floor(Math.random() * 500000) + 100000;\n        for (let i = 0; i <= diffDays; i++) {\n          const date = new Date(start);\n          date.setDate(start.getDate() + i);\n          const variation = Math.random() * 0.2 - 0.1;\n          currentValue = Math.floor(currentValue * (1 + variation));\n          currentValue = Math.max(currentValue, 100000);\n          data.push([date.getTime(), currentValue]);\n        }\n\n        // Actualizar los datos con un pequeño retraso para asegurar la re-renderización\n        setTimeout(() => {\n          this.series = [{\n            name: 'Ventas',\n            data: data\n          }];\n          this.isLoading = false;\n        }, 300);\n      } catch (error) {\n        console.error('Error loading data:', error);\n        this.isLoading = false;\n      }\n    },\n    onDateChange() {\n      if (!this.startDate || !this.endDate) return;\n      const start = new Date(this.startDate);\n      const end = new Date(this.endDate);\n      const today = new Date();\n      if (start > end) {\n        this.startDate = this.endDate;\n        return;\n      }\n      if (end > today) {\n        this.endDate = today.toISOString().split('T')[0];\n        return;\n      }\n\n      // Forzar la actualización de los datos\n      this.series[0].data = [];\n      this.$nextTick(() => {\n        this.loadData();\n      });\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const [year, month, day] = dateString.split('-');\n      return `${day}/${month}/${year}`;\n    },\n    toggleDatePicker() {\n      this.showDatePicker = !this.showDatePicker;\n      if (this.showDatePicker) {\n        this.tempStartDate = this.startDate;\n        this.tempEndDate = this.endDate;\n        document.addEventListener('click', this.handleClickOutside);\n      }\n    },\n    handleClickOutside(event) {\n      const picker = this.$el.querySelector('.date-picker-container');\n      if (picker && !picker.contains(event.target)) {\n        this.showDatePicker = false;\n        document.removeEventListener('click', this.handleClickOutside);\n      }\n    },\n    prevMonth() {\n      this.currentMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() - 1);\n    },\n    nextMonth() {\n      this.currentMonth = new Date(this.currentMonth.getFullYear(), this.currentMonth.getMonth() + 1);\n    },\n    selectDate(date) {\n      if (this.isDisabled(date)) return;\n\n      // Crear fecha a partir del string ISO\n      const selectedDate = date;\n      if (!this.tempStartDate || this.tempStartDate && this.tempEndDate) {\n        // Primera selección o nueva selección después de un rango completo\n        this.tempStartDate = selectedDate;\n        this.tempEndDate = null;\n      } else {\n        // Segunda selección para completar el rango\n        if (selectedDate < this.tempStartDate) {\n          this.tempEndDate = this.tempStartDate;\n          this.tempStartDate = selectedDate;\n        } else {\n          this.tempEndDate = selectedDate;\n        }\n      }\n    },\n    isSelected(date) {\n      return date === this.tempStartDate || date === this.tempEndDate;\n    },\n    isInRange(date) {\n      if (!this.tempStartDate || !this.tempEndDate) return false;\n      return date > this.tempStartDate && date < this.tempEndDate;\n    },\n    isToday(date) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      const todayStr = today.toISOString().split('T')[0];\n      return date === todayStr;\n    },\n    isDisabled(date) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      const todayStr = today.toISOString().split('T')[0];\n      return date > todayStr;\n    },\n    applyRange() {\n      if (this.tempStartDate && this.tempEndDate) {\n        this.startDate = this.tempStartDate;\n        this.endDate = this.tempEndDate;\n        this.showDatePicker = false;\n        this.onDateChange();\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","VueApexCharts","name","components","apexchart","data","startDate","endDate","today","Date","toISOString","split","isLoading","isDarkMode","showDatePicker","currentMonth","tempStartDate","tempEndDate","weekDays","series","chartOptions","chart","type","height","background","foreColor","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","colors","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","curve","width","grid","borderColor","strokeDashArray","position","markers","size","strokeWidth","hover","xaxis","labels","style","fontSize","axisBorder","axisTicks","yaxis","title","text","color","formatter","value","Intl","NumberFormat","currency","format","tooltip","shared","intersect","y","computed","hasDateRange","hasData","length","currentMonthName","toLocaleDateString","month","year","calendarDays","getFullYear","getMonth","firstDay","lastDay","days","firstDayOfWeek","getDay","i","prevDate","push","date","dayNumber","getDate","isOtherMonth","day","currentDate","remainingDays","nextDate","formatDateRange","formatDate","canApply","created","checkDarkMode","window","matchMedia","addEventListener","beforeUnmount","removeEventListener","methods","document","documentElement","classList","contains","updateChartTheme","getComputedStyle","textSecondary","getPropertyValue","trim","bgSecondary","plotOptions","area","fillTo","padding","top","right","bottom","left","lines","strokeColors","crosshairs","dashArray","theme","mode","palette","loadData","start","end","diffDays","Math","ceil","currentValue","floor","random","setDate","variation","max","getTime","setTimeout","error","console","onDateChange","$nextTick","dateString","toggleDatePicker","handleClickOutside","event","picker","$el","querySelector","target","prevMonth","nextMonth","selectDate","isDisabled","selectedDate","isSelected","isInRange","isToday","setHours","todayStr","applyRange"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\DateRangeChart.vue"],"sourcesContent":["<template>\n  <div class=\"date-range-chart\">\n    <div class=\"chart-header\">\n      <h3>Ventas por Rango de Fecha</h3>\n      <div class=\"date-controls\">\n        <div class=\"date-picker-container\">\n          <input \n            type=\"text\" \n            readonly\n            :value=\"formatDateRange\"\n            @click=\"toggleDatePicker\"\n            class=\"date-input\"\n            placeholder=\"Seleccionar rango de fechas\"\n          >\n          <div v-if=\"showDatePicker\" class=\"date-picker-popup\">\n            <div class=\"calendar\">\n              <div class=\"calendar-header\">\n                <button @click=\"prevMonth\" class=\"month-nav\">&lt;</button>\n                <span>{{ currentMonthName }}</span>\n                <button @click=\"nextMonth\" class=\"month-nav\">&gt;</button>\n              </div>\n              <div class=\"calendar-body\">\n                <div class=\"weekdays\">\n                  <span v-for=\"day in weekDays\" :key=\"day\">{{ day }}</span>\n                </div>\n                <div class=\"days\">\n                  <div \n                    v-for=\"day in calendarDays\" \n                    :key=\"day.date\"\n                    class=\"day\"\n                    :class=\"{\n                      'selected': isSelected(day.date),\n                      'in-range': isInRange(day.date),\n                      'disabled': isDisabled(day.date),\n                      'today': isToday(day.date),\n                      'other-month': day.isOtherMonth\n                    }\"\n                    @click=\"selectDate(day.date)\"\n                  >\n                    {{ day.dayNumber }}\n                  </div>\n                </div>\n              </div>\n              <div class=\"calendar-footer\">\n                <button @click=\"applyRange\" class=\"apply-btn\" :disabled=\"!canApply\">\n                  Aplicar\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n      \n    <div class=\"chart-container\" v-if=\"hasDateRange\">\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-spinner\"></div>\n      </div>\n      <apexchart\n        v-if=\"hasData\"\n        type=\"area\"\n        height=\"350\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n      ></apexchart>\n      <div v-else-if=\"!isLoading\" class=\"no-data-message\">\n        Selecciona un rango de fechas para visualizar los datos\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport VueApexCharts from 'vue3-apexcharts'\n\nexport default defineComponent({\n  name: 'DateRangeChart',\n  components: {\n    apexchart: VueApexCharts\n  },\n  \n  data() {\n    return {\n      startDate: '',\n      endDate: '',\n      today: new Date().toISOString().split('T')[0],\n      isLoading: false,\n      isDarkMode: false,\n      showDatePicker: false,\n      currentMonth: new Date(),\n      tempStartDate: null,\n      tempEndDate: null,\n      weekDays: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],\n      series: [{\n        name: 'Ventas',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: 'transparent',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        colors: ['#2E93fA'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back'\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ventas ($)',\n            style: {\n              fontSize: '14px',\n              color: '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: '#666'\n            },\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        }\n      }\n    }\n  },\n\n  computed: {\n    hasDateRange() {\n      return this.startDate && this.endDate\n    },\n    hasData() {\n      return this.series[0].data.length > 0\n    },\n    currentMonthName() {\n      return this.currentMonth.toLocaleDateString('es-ES', { \n        month: 'long',\n        year: 'numeric'\n      })\n    },\n\n    calendarDays() {\n      const year = this.currentMonth.getFullYear()\n      const month = this.currentMonth.getMonth()\n      const firstDay = new Date(year, month, 1)\n      const lastDay = new Date(year, month + 1, 0)\n      \n      const days = []\n      const firstDayOfWeek = firstDay.getDay()\n      \n      // Días del mes anterior\n      for (let i = firstDayOfWeek; i > 0; i--) {\n        const prevDate = new Date(year, month, -i + 1)\n        days.push({\n          date: prevDate.toISOString().split('T')[0],\n          dayNumber: prevDate.getDate(),\n          isOtherMonth: true\n        })\n      }\n      \n      // Días del mes actual\n      for (let day = 1; day <= lastDay.getDate(); day++) {\n        const currentDate = new Date(year, month, day)\n        days.push({\n          date: currentDate.toISOString().split('T')[0],\n          dayNumber: day,\n          isOtherMonth: false\n        })\n      }\n      \n      // Días del mes siguiente\n      const remainingDays = 42 - days.length\n      for (let i = 1; i <= remainingDays; i++) {\n        const nextDate = new Date(year, month + 1, i)\n        days.push({\n          date: nextDate.toISOString().split('T')[0],\n          dayNumber: i,\n          isOtherMonth: true\n        })\n      }\n      \n      return days\n    },\n\n    formatDateRange() {\n      if (!this.startDate && !this.endDate) return ''\n      if (!this.endDate) return this.formatDate(this.startDate)\n      return `${this.formatDate(this.startDate)} - ${this.formatDate(this.endDate)}`\n    },\n\n    canApply() {\n      return this.tempStartDate && this.tempEndDate\n    }\n  },\n\n  created() {\n    this.checkDarkMode()\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode)\n  },\n  \n  beforeUnmount() {\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode)\n  },\n  \n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme')\n      this.updateChartTheme()\n    },\n\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement)\n      const textSecondary = style.getPropertyValue('--text-secondary').trim()\n      const borderColor = style.getPropertyValue('--border-color').trim()\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim()\n      \n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: textSecondary,\n          toolbar: {\n            ...this.chartOptions.chart.toolbar,\n            tools: {\n              ...this.chartOptions.chart.toolbar.tools,\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          }\n        },\n        plotOptions: {\n          area: {\n            fillTo: 'origin'\n          }\n        },\n        grid: {\n          show: true,\n          borderColor: this.isDarkMode ? '#333333' : '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back',\n          background: bgSecondary,\n          padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          },\n          xaxis: {\n            lines: {\n              show: true,\n              color: this.isDarkMode ? '#333333' : '#f1f1f1'\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true,\n              color: this.isDarkMode ? '#333333' : '#f1f1f1'\n            }\n          }\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          ...this.chartOptions.xaxis,\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666',\n              fontSize: '12px'\n            }\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: this.isDarkMode ? '#333333' : '#f1f1f1',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          ...this.chartOptions.yaxis,\n          title: {\n            text: 'Ventas ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light'\n        },\n        theme: {\n          mode: this.isDarkMode ? 'dark' : 'light',\n          palette: 'palette1'\n        }\n      }\n    },\n\n    async loadData() {\n      if (!this.hasDateRange) return\n\n      this.isLoading = true\n      // Resetear los datos actuales\n      this.series[0].data = []\n      \n      try {\n        const start = new Date(this.startDate)\n        const end = new Date(this.endDate)\n        const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24))\n        \n        const data = []\n        let currentValue = Math.floor(Math.random() * 500000) + 100000\n        \n        for (let i = 0; i <= diffDays; i++) {\n          const date = new Date(start)\n          date.setDate(start.getDate() + i)\n          \n          const variation = (Math.random() * 0.2) - 0.1\n          currentValue = Math.floor(currentValue * (1 + variation))\n          currentValue = Math.max(currentValue, 100000)\n          \n          data.push([\n            date.getTime(),\n            currentValue\n          ])\n        }\n        \n        // Actualizar los datos con un pequeño retraso para asegurar la re-renderización\n        setTimeout(() => {\n          this.series = [{\n            name: 'Ventas',\n            data: data\n          }]\n          this.isLoading = false\n        }, 300)\n        \n      } catch (error) {\n        console.error('Error loading data:', error)\n        this.isLoading = false\n      }\n    },\n\n    onDateChange() {\n      if (!this.startDate || !this.endDate) return\n      \n      const start = new Date(this.startDate)\n      const end = new Date(this.endDate)\n      const today = new Date()\n\n      if (start > end) {\n        this.startDate = this.endDate\n        return\n      }\n\n      if (end > today) {\n        this.endDate = today.toISOString().split('T')[0]\n        return\n      }\n\n      // Forzar la actualización de los datos\n      this.series[0].data = []\n      this.$nextTick(() => {\n        this.loadData()\n      })\n    },\n\n    formatDate(dateString) {\n      if (!dateString) return ''\n      const [year, month, day] = dateString.split('-')\n      return `${day}/${month}/${year}`\n    },\n\n    toggleDatePicker() {\n      this.showDatePicker = !this.showDatePicker\n      if (this.showDatePicker) {\n        this.tempStartDate = this.startDate\n        this.tempEndDate = this.endDate\n        document.addEventListener('click', this.handleClickOutside)\n      }\n    },\n\n    handleClickOutside(event) {\n      const picker = this.$el.querySelector('.date-picker-container')\n      if (picker && !picker.contains(event.target)) {\n        this.showDatePicker = false\n        document.removeEventListener('click', this.handleClickOutside)\n      }\n    },\n\n    prevMonth() {\n      this.currentMonth = new Date(\n        this.currentMonth.getFullYear(),\n        this.currentMonth.getMonth() - 1\n      )\n    },\n\n    nextMonth() {\n      this.currentMonth = new Date(\n        this.currentMonth.getFullYear(),\n        this.currentMonth.getMonth() + 1\n      )\n    },\n\n    selectDate(date) {\n      if (this.isDisabled(date)) return\n\n      // Crear fecha a partir del string ISO\n      const selectedDate = date\n\n      if (!this.tempStartDate || (this.tempStartDate && this.tempEndDate)) {\n        // Primera selección o nueva selección después de un rango completo\n        this.tempStartDate = selectedDate\n        this.tempEndDate = null\n      } else {\n        // Segunda selección para completar el rango\n        if (selectedDate < this.tempStartDate) {\n          this.tempEndDate = this.tempStartDate\n          this.tempStartDate = selectedDate\n        } else {\n          this.tempEndDate = selectedDate\n        }\n      }\n    },\n\n    isSelected(date) {\n      return date === this.tempStartDate || date === this.tempEndDate\n    },\n\n    isInRange(date) {\n      if (!this.tempStartDate || !this.tempEndDate) return false\n      return date > this.tempStartDate && date < this.tempEndDate\n    },\n\n    isToday(date) {\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n      const todayStr = today.toISOString().split('T')[0]\n      return date === todayStr\n    },\n\n    isDisabled(date) {\n      const today = new Date()\n      today.setHours(0, 0, 0, 0)\n      const todayStr = today.toISOString().split('T')[0]\n      return date > todayStr\n    },\n\n    applyRange() {\n      if (this.tempStartDate && this.tempEndDate) {\n        this.startDate = this.tempStartDate\n        this.endDate = this.tempEndDate\n        this.showDatePicker = false\n        this.onDateChange()\n      }\n    }\n  }\n})\n</script>\n\n<style scoped>\n.date-range-chart {\n  background: var(--bg-secondary);\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: \n    0 2px 4px rgba(0, 0, 0, 0.05),\n    0 4px 8px rgba(0, 0, 0, 0.05),\n    inset 0 -1px 0 rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  transform: translateY(0);\n  transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\n  position: relative;\n  background-image: linear-gradient(\n    to bottom,\n    rgba(255, 255, 255, 0.1) 0%,\n    rgba(255, 255, 255, 0) 20%\n  );\n}\n\n.chart-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  width: 100%;\n}\n\nh3 {\n  margin: 0;\n  color: var(--text-primary);\n}\n\n.date-controls {\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  padding-right: 200px;\n}\n\n.date-picker-container {\n  position: relative;\n  display: inline-block;\n}\n\n.date-input {\n  padding: 8px 12px;\n  border: 1px solid var(--border-color);\n  border-radius: 6px;\n  background: var(--bg-primary);\n  color: var(--text-primary);\n  font-size: 0.9rem;\n  transition: all 0.2s ease;\n}\n\n.date-input:hover {\n  border-color: var(--border-hover);\n}\n\n.date-input:focus {\n  outline: none;\n  border-color: var(--primary);\n  box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.1);\n}\n\n.date-separator {\n  color: var(--text-secondary);\n}\n\n.chart-container {\n  position: relative;\n  min-height: 350px;\n  background: var(--bg-secondary);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--bg-overlay);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid var(--spinner-track);\n  border-top-color: var(--spinner-color);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.no-data-message {\n  height: 350px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--text-secondary);\n  font-size: 1.1rem;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (max-width: 768px) {\n  .chart-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 15px;\n  }\n\n  .date-controls {\n    width: 100%;\n    justify-content: center;\n    padding-right: 0;\n  }\n\n  .date-picker-container {\n    width: 100%;\n    max-width: 300px;\n  }\n}\n\n:deep(.apexcharts-canvas) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-plot-area) {\n  fill: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-grid-row) {\n  fill: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-plot-background) {\n  fill: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-inner) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-xcrosshairs),\n:deep(.apexcharts-ycrosshairs) {\n  stroke: var(--border-color) !important;\n}\n\n:deep(.apexcharts-xaxis line),\n:deep(.apexcharts-yaxis line) {\n  stroke: var(--border-color) !important;\n}\n\n:deep(.apexcharts-gridlines-horizontal),\n:deep(.apexcharts-gridlines-vertical) {\n  stroke: var(--border-color) !important;\n}\n\n:deep(.apexcharts-area) {\n  fill-opacity: 0.45;\n}\n\n:deep(.apexcharts-tooltip) {\n  background: var(--bg-secondary) !important;\n  border: 1px solid var(--border-color) !important;\n}\n\n.update-button {\n  padding: 8px 16px;\n  background: var(--primary);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 100px;\n}\n\n.update-button:hover:not(:disabled) {\n  background: var(--primary-dark);\n  transform: translateY(-1px);\n}\n\n.update-button:disabled {\n  background: var(--disabled);\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.button-text {\n  font-weight: 500;\n}\n\n.date-picker-popup {\n  position: absolute;\n  bottom: calc(100% + 5px);\n  left: 50%;\n  transform: translateX(-50%);\n  margin-bottom: 0;\n  background: var(--bg-primary);\n  border: 1px solid var(--border-color);\n  border-radius: 8px;\n  box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  width: 300px;\n  padding: 16px;\n}\n\n.calendar {\n  width: 100%;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n  font-weight: 500;\n  color: var(--text-primary);\n}\n\n.month-nav {\n  background: none;\n  border: none;\n  color: var(--text-primary);\n  cursor: pointer;\n  padding: 4px 8px;\n  border-radius: 4px;\n}\n\n.month-nav:hover {\n  background: var(--hover);\n}\n\n.weekdays {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  text-align: center;\n  color: var(--text-secondary);\n  font-size: 0.85rem;\n  margin-bottom: 8px;\n}\n\n.days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 2px;\n}\n\n.day {\n  aspect-ratio: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: 4px;\n  font-size: 0.9rem;\n  color: var(--text-primary);\n}\n\n.day:hover:not(.disabled) {\n  background: var(--hover);\n}\n\n.day.selected {\n  background: var(--primary);\n  color: white;\n}\n\n.day.in-range {\n  background: var(--primary-light);\n  color: var(--primary);\n}\n\n.day.disabled {\n  color: var(--text-disabled);\n  cursor: not-allowed;\n}\n\n.day.today {\n  font-weight: bold;\n  border: 1px solid var(--primary);\n}\n\n.day.other-month {\n  color: var(--text-disabled);\n}\n\n.calendar-footer {\n  margin-top: 16px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.apply-btn {\n  padding: 6px 12px;\n  background: var(--primary);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.9rem;\n}\n\n.apply-btn:hover:not(:disabled) {\n  background: var(--primary-dark);\n}\n\n.apply-btn:disabled {\n  background: var(--disabled);\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.date-input {\n  width: 200px;\n  cursor: pointer;\n  text-align: left;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}