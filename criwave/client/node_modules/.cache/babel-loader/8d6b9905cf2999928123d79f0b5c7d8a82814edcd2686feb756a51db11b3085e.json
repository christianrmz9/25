{"ast":null,"code":"/**\n * Componente para renderizar ítems de menú, soportando estructura jerárquica\n * \n * Características:\n * - Soporta elementos simples y elementos con hijos (expansibles)\n * - Gestiona el estado de expandido/colapsado\n * - Permite marcado como favorito\n * - Renderiza correctamente elementos de cabecera de sección\n * \n * @component MenuItem\n */\nimport { computed, ref } from 'vue';\nimport { getIconComponent } from '../../constants/icons';\nimport { ChevronDown } from 'lucide-vue-next';\nexport default {\n  name: 'MenuItem',\n  components: {\n    ChevronDown\n  },\n  props: {\n    /**\n     * Elemento a renderizar\n     */\n    item: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Nivel de profundidad para indentación\n     */\n    depth: {\n      type: Number,\n      default: 0\n    }\n  },\n  emits: ['item-click'],\n  setup(props, {\n    emit\n  }) {\n    // Estado local de expansión\n    const localExpanded = ref(props.item.expanded || false);\n\n    // Verificar si el elemento tiene hijos\n    const hasChildren = computed(() => {\n      return props.item.children && props.item.children.length > 0;\n    });\n\n    // Estado de expansión del elemento\n    const isExpanded = computed(() => {\n      return localExpanded.value;\n    });\n\n    // Verificar si el elemento está en favoritos\n    const isFavorite = computed(() => {\n      try {\n        const visitHistory = JSON.parse(localStorage.getItem('visitHistory') || '{}');\n        const itemPath = props.item.parent ? `${props.item.parent} > ${props.item.text}` : props.item.text;\n        const itemId = `${itemPath}-${props.item.href}`;\n        return (visitHistory[itemId] || 0) >= 3;\n      } catch (error) {\n        console.error('Error al verificar favorito:', error);\n        return false;\n      }\n    });\n\n    // Función para cambiar el estado expandido/colapsado\n    const toggleExpanded = () => {\n      if (props.item.id) {\n        try {\n          // Actualizar estado local primero\n          localExpanded.value = !localExpanded.value;\n\n          // Emitir evento para actualizar el estado global\n          window.dispatchEvent(new CustomEvent('menu-item-expanded', {\n            detail: {\n              id: props.item.id,\n              expanded: localExpanded.value\n            }\n          }));\n\n          // Guardar el estado en localStorage\n          const expandedState = JSON.parse(localStorage.getItem('menuExpandedState') || '{}');\n          expandedState[props.item.id] = localExpanded.value;\n          localStorage.setItem('menuExpandedState', JSON.stringify(expandedState));\n        } catch (error) {\n          console.error('Error al emitir evento de expansión:', error);\n        }\n      }\n    };\n\n    // Cargar el estado guardado al montar el componente\n    try {\n      const expandedState = JSON.parse(localStorage.getItem('menuExpandedState') || '{}');\n      if (props.item.id && expandedState[props.item.id] !== undefined) {\n        localExpanded.value = expandedState[props.item.id];\n      }\n    } catch (error) {\n      console.error('Error al cargar estado expandido:', error);\n    }\n    return {\n      hasChildren,\n      isExpanded,\n      isFavorite,\n      getIconComponent,\n      toggleExpanded,\n      handleClick: () => {\n        if (hasChildren.value) {\n          toggleExpanded();\n        }\n        emit('item-click', props.item);\n      },\n      handleChildClick: item => {\n        if (!item.parent && props.item.text) {\n          emit('item-click', {\n            ...item,\n            parent: props.item.text\n          });\n        } else {\n          emit('item-click', item);\n        }\n      }\n    };\n  }\n};","map":{"version":3,"names":["computed","ref","getIconComponent","ChevronDown","name","components","props","item","type","Object","required","depth","Number","default","emits","setup","emit","localExpanded","expanded","hasChildren","children","length","isExpanded","value","isFavorite","visitHistory","JSON","parse","localStorage","getItem","itemPath","parent","text","itemId","href","error","console","toggleExpanded","id","window","dispatchEvent","CustomEvent","detail","expandedState","setItem","stringify","undefined","handleClick","handleChildClick"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\layout\\MenuItem.vue"],"sourcesContent":["/**\n * @component MenuItem\n * @description Componente que maneja cada elemento individual del menú.\n * Este es un componente recursivo que puede contener otros MenuItems como hijos.\n * \n * Responsabilidades:\n * - Renderizar elementos individuales del menú\n * - Manejar la expansión/colapso de submenús\n * - Gestionar estados de hover y active\n * - Mostrar íconos y badges\n * - Manejar la navegación al hacer clic\n * \n * Características:\n * - Recursividad: Puede contener otros MenuItems (submenús)\n * - Estados: normal, hover, active, expanded\n * - Soporte para íconos y badges\n * - Animaciones de hover y expansión\n * - Gestión de historial de visitas\n */\n\n<template>\n  <div class=\"menu-item-wrapper\" :class=\"{ 'with-children': hasChildren }\">\n    <!-- Elemento principal -->\n    <div \n      class=\"menu-item\" \n      :class=\"{ \n        'expanded': isExpanded,\n        'section-header': item.isSection\n      }\"\n    >\n      <a \n        v-if=\"!item.isSection\" \n        :href=\"item.href || '#'\" \n        class=\"nav-link\" \n        :class=\"{ 'active': item.active }\"\n        @click.prevent=\"handleClick\"\n      >\n        <span class=\"nav-icon\" v-if=\"item.icon\">\n          <component :is=\"getIconComponent(item.icon)\" size=\"20\" />\n        </span>\n        <span class=\"nav-text\">{{ item.text }}</span>\n        <span v-if=\"item.badge\" class=\"nav-badge\">{{ item.badge }}</span>\n        \n        <!-- Flecha para expandir/colapsar -->\n        <span v-if=\"hasChildren\" class=\"expand-arrow\" :class=\"{ 'expanded': isExpanded }\">\n          <ChevronDown size=\"20\" />\n        </span>\n      </a>\n      \n      <!-- Título de sección -->\n      <div v-else class=\"section-title\">\n        {{ item.text }}\n      </div>\n    </div>\n    \n    <!-- Subelementos (renderizado recursivo) -->\n    <transition name=\"slide-children\">\n      <div v-if=\"hasChildren && isExpanded\" class=\"children-wrapper\">\n        <menu-item \n          v-for=\"child in item.children\" \n          :key=\"child.id\" \n          :item=\"child\"\n          :depth=\"depth + 1\"\n          @item-click=\"handleChildClick\"\n        />\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/**\n * Componente para renderizar ítems de menú, soportando estructura jerárquica\n * \n * Características:\n * - Soporta elementos simples y elementos con hijos (expansibles)\n * - Gestiona el estado de expandido/colapsado\n * - Permite marcado como favorito\n * - Renderiza correctamente elementos de cabecera de sección\n * \n * @component MenuItem\n */\nimport { computed, ref } from 'vue';\nimport { getIconComponent } from '../../constants/icons';\nimport { ChevronDown } from 'lucide-vue-next';\n\nexport default {\n  name: 'MenuItem',\n  \n  components: {\n    ChevronDown\n  },\n  \n  props: {\n    /**\n     * Elemento a renderizar\n     */\n    item: {\n      type: Object,\n      required: true\n    },\n    \n    /**\n     * Nivel de profundidad para indentación\n     */\n    depth: {\n      type: Number,\n      default: 0\n    }\n  },\n  \n  emits: ['item-click'],\n  \n  setup(props, { emit }) {\n    // Estado local de expansión\n    const localExpanded = ref(props.item.expanded || false);\n    \n    // Verificar si el elemento tiene hijos\n    const hasChildren = computed(() => {\n      return props.item.children && props.item.children.length > 0;\n    });\n    \n    // Estado de expansión del elemento\n    const isExpanded = computed(() => {\n      return localExpanded.value;\n    });\n    \n    // Verificar si el elemento está en favoritos\n    const isFavorite = computed(() => {\n      try {\n        const visitHistory = JSON.parse(localStorage.getItem('visitHistory') || '{}');\n        const itemPath = props.item.parent ? `${props.item.parent} > ${props.item.text}` : props.item.text;\n        const itemId = `${itemPath}-${props.item.href}`;\n        return (visitHistory[itemId] || 0) >= 3;\n      } catch (error) {\n        console.error('Error al verificar favorito:', error);\n        return false;\n      }\n    });\n\n    // Función para cambiar el estado expandido/colapsado\n    const toggleExpanded = () => {\n      if (props.item.id) {\n        try {\n          // Actualizar estado local primero\n          localExpanded.value = !localExpanded.value;\n          \n          // Emitir evento para actualizar el estado global\n          window.dispatchEvent(\n            new CustomEvent('menu-item-expanded', {\n              detail: {\n                id: props.item.id,\n                expanded: localExpanded.value\n              }\n            })\n          );\n          \n          // Guardar el estado en localStorage\n          const expandedState = JSON.parse(localStorage.getItem('menuExpandedState') || '{}');\n          expandedState[props.item.id] = localExpanded.value;\n          localStorage.setItem('menuExpandedState', JSON.stringify(expandedState));\n          \n        } catch (error) {\n          console.error('Error al emitir evento de expansión:', error);\n        }\n      }\n    };\n    \n    // Cargar el estado guardado al montar el componente\n    try {\n      const expandedState = JSON.parse(localStorage.getItem('menuExpandedState') || '{}');\n      if (props.item.id && expandedState[props.item.id] !== undefined) {\n        localExpanded.value = expandedState[props.item.id];\n      }\n    } catch (error) {\n      console.error('Error al cargar estado expandido:', error);\n    }\n    \n    return {\n      hasChildren,\n      isExpanded,\n      isFavorite,\n      getIconComponent,\n      toggleExpanded,\n      handleClick: () => {\n        if (hasChildren.value) {\n          toggleExpanded();\n        }\n        emit('item-click', props.item);\n      },\n      handleChildClick: (item) => {\n        if (!item.parent && props.item.text) {\n          emit('item-click', { ...item, parent: props.item.text });\n        } else {\n          emit('item-click', item);\n        }\n      }\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* ========================================\n   ESTILOS BASE DEL ELEMENTO\n   ======================================== */\n.menu-item-wrapper {\n  position: relative;\n}\n\n.menu-item {\n  position: relative;\n}\n\n/* ========================================\n   ESTILOS DEL ENLACE Y HOVER\n   ======================================== */\n.nav-link {\n  display: flex;\n  align-items: center;\n  padding: 0.55rem 1rem;\n  text-decoration: none;\n  transition: all 0.2s ease;\n  position: relative;\n  border-left: 3px solid transparent;\n  color: var(--text-primary);\n}\n\n/* Efectos hover - Estos son los estilos principales para la interactividad */\n.nav-link:hover {\n  background-color: var(--bg-hover);\n  border-left-color: var(--primary);\n  transform: translateX(4px);\n  color: var(--primary);\n}\n\n/* ========================================\n   ESTILOS DE ÍCONOS\n   ======================================== */\n.nav-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 0.75rem;\n  width: 20px;\n  height: 20px;\n  color: var(--text-secondary);\n  opacity: 0.7;\n  transition: all 0.2s ease;\n}\n\n/* Efectos hover para íconos */\n.nav-link:hover .nav-icon {\n  transform: scale(1.1);\n  opacity: 1;\n  color: var(--primary);\n}\n\n/* ========================================\n   ESTILOS DE TEXTO Y BADGES\n   ======================================== */\n.nav-text {\n  flex: 1;\n  min-width: 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: color 0.2s ease;\n}\n\n.nav-badge {\n  background-color: var(--badge-bg);\n  color: var(--badge-text);\n  padding: 0.15rem 0.5rem;\n  border-radius: 12px;\n  font-size: 0.75rem;\n}\n\n/* ========================================\n   ESTILOS DE EXPANSIÓN/COLAPSO\n   ======================================== */\n.expand-arrow {\n  margin-left: auto;\n  transition: transform 0.2s ease;\n}\n\n.expand-arrow.expanded {\n  transform: rotate(180deg);\n}\n\n/* ========================================\n   MODO OSCURO\n   ======================================== */\n@media (prefers-color-scheme: dark) {\n  .nav-link:hover {\n    background-color: #3D3D3D !important;\n    border-left: 3px solid var(--primary) !important;\n    color: #E0E0E0 !important;\n  }\n\n  .nav-link:hover .nav-icon {\n    color: var(--primary) !important;\n    opacity: 1;\n  }\n\n  .nav-link:hover .nav-text {\n    color: #E0E0E0 !important;\n  }\n}\n\n/* Modo claro */\n@media (prefers-color-scheme: light) {\n  .item-parent,\n  .parent-indicator {\n    color: rgba(0, 0, 0, 0.6); /* Un gris más oscuro para modo claro */\n  }\n}\n\n/* Modo oscuro */\n@media (prefers-color-scheme: dark) {\n  .item-parent,\n  .parent-indicator {\n    color: rgba(255, 255, 255, 0.7); /* Un gris más claro para modo oscuro */\n  }\n\n  .nav-link:hover {\n    background-color: #3D3D3D !important;\n    border-left: 3px solid var(--primary) !important;\n    color: #E0E0E0 !important;\n  }\n\n  .nav-link:hover .nav-icon {\n    color: var(--primary) !important;\n    opacity: 1;\n  }\n\n  .nav-link:hover .nav-text {\n    color: #E0E0E0 !important;\n  }\n}\n\n/* Estilos para elementos con hijos */\n.with-children > .menu-item > .nav-link {\n  font-weight: 500;\n}\n\n/* Indentación de subelementos */\n.children-wrapper {\n  padding-left: 0.5rem;\n  overflow: hidden;\n}\n\n/* Hijos de segundo nivel o más */\n.children-wrapper .children-wrapper {\n  border-left: 1px solid var(--border);\n  margin-left: 0.75rem;\n}\n\n/* Animación para mostrar/ocultar hijos */\n.slide-children-enter-active,\n.slide-children-leave-active {\n  transition: all 0.3s ease-out;\n  max-height: 1000px;\n  opacity: 1;\n  overflow: hidden;\n}\n\n.slide-children-enter-from,\n.slide-children-leave-to {\n  max-height: 0;\n  opacity: 0;\n  overflow: hidden;\n}\n\n/* Estilos para cabeceras de sección */\n.section-title {\n  font-size: var(--section-title-size);\n  font-weight: var(--section-title-weight);\n  color: var(--section-title-color);\n  text-transform: var(--section-title-transform);\n  letter-spacing: var(--section-title-spacing);\n  padding: var(--section-title-padding);\n}\n\n.section-header {\n  margin-top: 0.5rem;\n}\n\n/* Modo oscuro */\n:root[data-theme='dark'] {\n  .nav-link,\n  .nav-text,\n  .menu-item a {\n    color: rgba(255, 255, 255, 0.6) !important;\n  }\n\n  .nav-link:hover,\n  .nav-text:hover,\n  .menu-item a:hover {\n    color: rgba(255, 255, 255, 0.9) !important;\n  }\n\n  .nav-link.active,\n  .nav-text.active,\n  .menu-item a.active {\n    color: rgba(255, 255, 255, 1) !important;\n  }\n\n  .nav-icon {\n    color: rgba(255, 255, 255, 0.6) !important;\n  }\n\n  .nav-link:hover .nav-icon {\n    color: rgba(255, 255, 255, 0.9) !important;\n  }\n\n  .section-title {\n    color: rgba(255, 255, 255, 0.4) !important;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}