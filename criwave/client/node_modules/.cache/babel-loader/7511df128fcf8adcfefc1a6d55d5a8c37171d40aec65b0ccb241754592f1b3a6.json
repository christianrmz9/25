{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"date-range-chart\"\n};\nconst _hoisted_2 = {\n  class: \"chart-header\"\n};\nconst _hoisted_3 = {\n  class: \"date-controls\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_6 = {\n  key: 2,\n  class: \"no-data-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_date_picker = _resolveComponent(\"v-date-picker\");\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"Ventas por Rango de Fecha\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_v_date_picker, {\n    modelValue: _ctx.dates,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.dates = $event),\n    range: \"\",\n    \"show-adjacent-months\": \"\",\n    max: _ctx.today,\n    \"first-day-of-week\": 0,\n    title: 'Seleccionar rango de fechas',\n    header: 'Seleccionar rango de fechas',\n    \"onClick:date\": _ctx.onDateChange\n  }, {\n    actions: _withCtx(() => [_createVNode(_component_v_spacer), _createVNode(_component_v_btn, {\n      color: \"error\",\n      variant: \"text\",\n      onClick: _ctx.clearDates\n    }, {\n      default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\" Limpiar \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n      color: \"primary\",\n      variant: \"text\",\n      onClick: _ctx.confirmDateRange,\n      disabled: !_ctx.hasDateRange\n    }, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" Aplicar \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\", \"disabled\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"max\", \"onClick:date\"])])]), _ctx.hasDateRange ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[4] || (_cache[4] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _ctx.hasData ? (_openBlock(), _createBlock(_component_apexchart, {\n    key: 1,\n    type: \"area\",\n    height: \"350\",\n    options: _ctx.chartOptions,\n    series: _ctx.series\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])) : !_ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" Selecciona un rango de fechas para visualizar los datos \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createVNode","_component_v_date_picker","modelValue","_ctx","dates","_cache","$event","range","max","today","title","header","onDateChange","actions","_withCtx","_component_v_spacer","_component_v_btn","color","variant","onClick","clearDates","default","_createTextVNode","_","confirmDateRange","disabled","hasDateRange","_hoisted_4","isLoading","_hoisted_5","_createCommentVNode","hasData","_createBlock","_component_apexchart","type","height","options","chartOptions","series","_hoisted_6"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\DateRangeChart.vue"],"sourcesContent":["<template>\n  <div class=\"date-range-chart\">\n    <div class=\"chart-header\">\n      <h3>Ventas por Rango de Fecha</h3>\n      <div class=\"date-controls\">\n        <v-date-picker\n          v-model=\"dates\"\n          range\n          show-adjacent-months\n          :max=\"today\"\n          :first-day-of-week=\"0\"\n          :title=\"'Seleccionar rango de fechas'\"\n          :header=\"'Seleccionar rango de fechas'\"\n          @click:date=\"onDateChange\"\n        >\n          <template v-slot:actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"error\"\n              variant=\"text\"\n              @click=\"clearDates\"\n            >\n              Limpiar\n            </v-btn>\n            <v-btn\n              color=\"primary\"\n              variant=\"text\"\n              @click=\"confirmDateRange\"\n              :disabled=\"!hasDateRange\"\n            >\n              Aplicar\n            </v-btn>\n          </template>\n        </v-date-picker>\n      </div>\n    </div>\n      \n    <div class=\"chart-container\" v-if=\"hasDateRange\">\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-spinner\"></div>\n      </div>\n      <apexchart\n        v-if=\"hasData\"\n        type=\"area\"\n        height=\"350\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n      ></apexchart>\n      <div v-else-if=\"!isLoading\" class=\"no-data-message\">\n        Selecciona un rango de fechas para visualizar los datos\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport VueApexCharts from 'vue3-apexcharts'\n\nexport default defineComponent({\n  name: 'DateRangeChart',\n  components: {\n    apexchart: VueApexCharts\n  },\n  \n  data() {\n    return {\n      dates: [],\n      tempDate: null,\n      menu: false,\n      today: new Date().toISOString().split('T')[0],\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ventas',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: 'transparent',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        colors: ['#2E93fA'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back'\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ventas ($)',\n            style: {\n              fontSize: '14px',\n              color: '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: '#666'\n            },\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        }\n      }\n    }\n  },\n\n  computed: {\n    dateRangeText() {\n      if (!this.dates || this.dates.length !== 2) return ''\n      const [start, end] = this.dates\n      return `${this.formatDate(start)} - ${this.formatDate(end)}`\n    },\n    \n    hasDateRange() {\n      return this.dates && this.dates.length === 2\n    },\n\n    hasData() {\n      return this.series[0].data.length > 0\n    }\n  },\n\n  created() {\n    this.checkDarkMode()\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode)\n  },\n  \n  beforeUnmount() {\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode)\n  },\n  \n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme')\n      this.updateChartTheme()\n    },\n\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement)\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim()\n      const textSecondary = style.getPropertyValue('--text-secondary').trim()\n      const borderColor = style.getPropertyValue('--border-color').trim()\n      \n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: textSecondary\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: borderColor\n        },\n        xaxis: {\n          ...this.chartOptions.xaxis,\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          }\n        },\n        yaxis: {\n          ...this.chartOptions.yaxis,\n          title: {\n            style: {\n              color: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light'\n        }\n      }\n    },\n\n    async loadData() {\n      if (!this.hasDateRange) return\n\n      this.isLoading = true\n      this.series[0].data = []\n      \n      try {\n        const [start, end] = this.dates\n        const startDate = new Date(start)\n        const endDate = new Date(end)\n        const diffDays = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24))\n        \n        const data = []\n        let currentValue = Math.floor(Math.random() * 500000) + 100000\n        \n        for (let i = 0; i <= diffDays; i++) {\n          const date = new Date(startDate)\n          date.setDate(startDate.getDate() + i)\n          \n          const variation = (Math.random() * 0.2) - 0.1\n          currentValue = Math.floor(currentValue * (1 + variation))\n          currentValue = Math.max(currentValue, 100000)\n          \n          data.push([\n            date.getTime(),\n            currentValue\n          ])\n        }\n        \n        setTimeout(() => {\n          this.series = [{\n            name: 'Ventas',\n            data: data\n          }]\n          this.isLoading = false\n        }, 300)\n        \n      } catch (error) {\n        console.error('Error loading data:', error)\n        this.isLoading = false\n      }\n    },\n\n    formatDate(dateStr) {\n      if (!dateStr) return ''\n      const [year, month, day] = dateStr.split('-')\n      return `${day}/${month}/${year}`\n    },\n\n    onDateChange(newDate) {\n      if (!this.tempDate) {\n        this.tempDate = newDate\n        this.dates = [newDate]\n      } else {\n        const startDate = new Date(this.tempDate)\n        const endDate = new Date(newDate)\n        \n        if (endDate < startDate) {\n          this.dates = [newDate, this.tempDate]\n        } else {\n          this.dates = [this.tempDate, newDate]\n        }\n        \n        this.tempDate = null\n      }\n    },\n\n    clearDates() {\n      this.dates = []\n      this.tempDate = null\n      this.series[0].data = []\n    },\n\n    confirmDateRange() {\n      if (this.hasDateRange) {\n        this.loadData()\n      }\n    }\n  }\n})\n</script>\n\n<style scoped>\n.date-range-chart {\n  background: var(--bg-secondary);\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.date-controls {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 15px;\n}\n\n.chart-container {\n  position: relative;\n  min-height: 350px;\n  background: var(--bg-primary);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--bg-overlay);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid var(--spinner-track);\n  border-top-color: var(--spinner-color);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.no-data-message {\n  height: 350px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--text-secondary);\n  font-size: 1.1rem;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n:deep(.v-date-picker) {\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n:deep(.v-date-picker-month) {\n  padding: 0 12px;\n}\n\n:deep(.v-date-picker-month__day) {\n  border-radius: 4px;\n}\n\n:deep(.v-date-picker-month__day--selected) {\n  background-color: var(--primary) !important;\n}\n\n:deep(.v-date-picker-month__day--range) {\n  background-color: var(--primary-light) !important;\n  opacity: 0.4;\n}\n\n@media (max-width: 768px) {\n  .chart-header {\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .date-controls {\n    width: 100%;\n    justify-content: center;\n  }\n\n  :deep(.v-date-picker) {\n    width: 100%;\n  }\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAe;;EAJhCC,GAAA;EAqCSD,KAAK,EAAC;;;EArCfC,GAAA;EAsC4BD,KAAK,EAAC;;;EAtClCC,GAAA;EAgDkCD,KAAK,EAAC;;;;;;;uBA/CtCE,mBAAA,CAmDM,OAnDNC,UAmDM,GAlDJC,mBAAA,CAiCM,OAjCNC,UAiCM,G,0BAhCJD,mBAAA,CAAkC,YAA9B,2BAAyB,sBAC7BA,mBAAA,CA8BM,OA9BNE,UA8BM,GA7BJC,YAAA,CA4BgBC,wBAAA;IAjCxBC,UAAA,EAMmBC,IAAA,CAAAC,KAAK;IANxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMmBH,IAAA,CAAAC,KAAK,GAAAE,MAAA;IACdC,KAAK,EAAL,EAAK;IACL,sBAAoB,EAApB,EAAoB;IACnBC,GAAG,EAAEL,IAAA,CAAAM,KAAK;IACV,mBAAiB,EAAE,CAAC;IACpBC,KAAK,EAAE,6BAA6B;IACpCC,MAAM,EAAE,6BAA6B;IACrC,cAAU,EAAER,IAAA,CAAAS;;IAEIC,OAAO,EAAAC,QAAA,CACtB,MAAqB,CAArBd,YAAA,CAAqBe,mBAAA,GACrBf,YAAA,CAMQgB,gBAAA;MALNC,KAAK,EAAC,OAAO;MACbC,OAAO,EAAC,MAAM;MACbC,OAAK,EAAEhB,IAAA,CAAAiB;;MApBtBC,OAAA,EAAAP,QAAA,CAqBa,MAEDT,MAAA,QAAAA,MAAA,OAvBZiB,gBAAA,CAqBa,WAED,E;MAvBZC,CAAA;oCAwBYvB,YAAA,CAOQgB,gBAAA;MANNC,KAAK,EAAC,SAAS;MACfC,OAAO,EAAC,MAAM;MACbC,OAAK,EAAEhB,IAAA,CAAAqB,gBAAgB;MACvBC,QAAQ,GAAGtB,IAAA,CAAAuB;;MA5B1BL,OAAA,EAAAP,QAAA,CA6Ba,MAEDT,MAAA,QAAAA,MAAA,OA/BZiB,gBAAA,CA6Ba,WAED,E;MA/BZC,CAAA;;IAAAA,CAAA;gEAqCuCpB,IAAA,CAAAuB,YAAY,I,cAA/C/B,mBAAA,CAcM,OAdNgC,UAcM,GAbOxB,IAAA,CAAAyB,SAAS,I,cAApBjC,mBAAA,CAEM,OAFNkC,UAEM,EAAAxB,MAAA,QAAAA,MAAA,OADJR,mBAAA,CAAmC;IAA9BJ,KAAK,EAAC;EAAiB,2B,MAvCpCqC,mBAAA,gBA0Cc3B,IAAA,CAAA4B,OAAO,I,cADfC,YAAA,CAMaC,oBAAA;IA/CnBvC,GAAA;IA2CQwC,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,KAAK;IACXC,OAAO,EAAEjC,IAAA,CAAAkC,YAAY;IACrBC,MAAM,EAAEnC,IAAA,CAAAmC;qDAEMnC,IAAA,CAAAyB,SAAS,I,cAA1BjC,mBAAA,CAEM,OAFN4C,UAEM,EAF8C,2DAEpD,KAlDNT,mBAAA,e,KAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}