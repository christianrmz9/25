{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\n/**\n * Componente de menú lateral\n * \n * Se muestra al hacer clic en el logo del header\n * Contiene enlaces a las diferentes secciones de la aplicación\n * \n * @component AppSidebar\n */\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue';\nimport { useStore } from 'vuex';\nimport SearchBar from '../ui/SearchBar.vue';\nimport MaterialIcon from '../ui/Icon.vue';\nimport { ICON_MAPPING } from '../../constants/icons';\nexport default {\n  name: 'AppSidebar',\n  components: {\n    SearchBar,\n    icon: MaterialIcon\n  },\n  props: {\n    /**\n     * Indica si el sidebar está abierto o cerrado\n     */\n    isOpen: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const store = useStore();\n    const isMobile = ref(window.innerWidth <= 768);\n    const searchQuery = ref('');\n\n    // Información sobre la sugerencia resaltada actualmente\n    const highlightedSuggestionIndex = ref(-1);\n    const highlightedSuggestionType = ref(''); // 'main', 'section', 'action'\n\n    // Cache para resultados de búsqueda\n    const searchCache = ref(new Map());\n\n    // Favoritos dinámicos - guardar historial de visitas\n    const favoriteItems = ref([]);\n\n    // Datos para acciones rápidas y navegación...\n    // (mantener los mismos datos del componente original)\n    const quickActions = [{\n      id: 'create-report',\n      text: 'Crear nuevo reporte',\n      icon: 'nav-icon-report',\n      action: () => executeQuickAction('create-report'),\n      shortcut: 'Alt+N'\n    }, {\n      id: 'settings',\n      text: 'Abrir configuración',\n      icon: 'nav-icon-settings',\n      action: () => executeQuickAction('settings')\n    }, {\n      id: 'help',\n      text: 'Ver ayuda',\n      icon: 'nav-icon-note',\n      action: () => executeQuickAction('help')\n    }, {\n      id: 'notifications',\n      text: 'Ver todas las notificaciones',\n      icon: 'nav-icon-bell',\n      action: () => executeQuickAction('notifications')\n    }];\n\n    // Datos para las secciones de navegación\n    const mainItems = [{\n      text: 'Dashboard',\n      icon: 'nav-icon-chart',\n      href: '#',\n      active: true\n    }, {\n      text: 'Notificaciones',\n      icon: 'nav-icon-bell',\n      href: '#',\n      badge: '12'\n    }, {\n      text: 'Tareas',\n      icon: 'nav-icon-check',\n      href: '#'\n    }, {\n      text: 'Notas',\n      icon: 'nav-icon-note',\n      href: '#'\n    }, {\n      text: 'Emails',\n      icon: 'nav-icon-mail',\n      href: '#'\n    }, {\n      text: 'Reportes',\n      icon: 'nav-icon-report',\n      href: '#'\n    }, {\n      text: 'Automatizaciones',\n      icon: 'nav-icon-settings',\n      href: '#'\n    }, {\n      text: 'Flujos de trabajo',\n      icon: 'nav-icon-workflow',\n      href: '#'\n    }];\n    const sections = [{\n      title: 'Favoritos',\n      items: [{\n        text: 'UK & EU Companies',\n        icon: 'nav-icon-globe',\n        href: '#'\n      }, {\n        text: 'B2B Relationship Building',\n        icon: 'nav-icon-handshake',\n        href: '#'\n      }, {\n        text: 'Potential Partnership',\n        icon: 'nav-icon-partnership',\n        href: '#'\n      }, {\n        text: 'CRM Meeting Template',\n        icon: 'nav-icon-calendar',\n        href: '#'\n      }]\n    }, {\n      title: 'Registros',\n      items: [{\n        text: 'Clientes',\n        icon: 'nav-icon-users',\n        href: '#'\n      }, {\n        text: 'Contactos',\n        icon: 'nav-icon-phone',\n        href: '#'\n      }]\n    }];\n\n    // Computed properties\n\n    // Determina la imagen del logo según el tema actual\n    const logoSrc = computed(() => {\n      return store.getters['theme/isDark'] ? '/img/Wblanco.png' : '/img/Wnegro.png';\n    });\n\n    // Funciones para filtrar elementos según la búsqueda\n    const prepareSearchTerms = query => {\n      return query.toLowerCase().trim().split(/\\s+/);\n    };\n    const itemMatchesSearch = (item, queryTerms) => {\n      const itemText = item.text.toLowerCase();\n      return queryTerms.every(term => itemText.includes(term));\n    };\n\n    // Filtra los elementos principales según la búsqueda\n    const filteredMainItems = computed(() => {\n      if (!searchQuery.value) return mainItems;\n      const queryTerms = prepareSearchTerms(searchQuery.value);\n      return mainItems.filter(item => itemMatchesSearch(item, queryTerms));\n    });\n\n    // Filtra las secciones según la búsqueda\n    const filteredSections = computed(() => {\n      // Si tenemos una búsqueda, filtramos normalmente\n      if (searchQuery.value) {\n        const queryTerms = prepareSearchTerms(searchQuery.value);\n\n        // Filtrar cada sección y sus elementos\n        return sections.map(section => {\n          // Filtrar items dentro de cada sección\n          const filteredItems = section.items.filter(item => itemMatchesSearch(item, queryTerms));\n\n          // Solo devuelve la sección si tiene elementos filtrados\n          if (filteredItems.length) {\n            return {\n              ...section,\n              items: filteredItems\n            };\n          }\n          return null;\n        }).filter(Boolean); // Eliminar secciones vacías\n      }\n\n      // Cuando no hay búsqueda, mostramos las secciones normales y la sección de favoritos dinámica\n      const result = [...sections]; // Copiar las secciones estáticas\n\n      // Solo añadir la sección de favoritos dinámicos si hay elementos\n      if (favoriteItems.value.length > 0) {\n        // Reemplazar la sección de favoritos con la dinámica\n        const favoriteIndex = result.findIndex(section => section.title === 'Favoritos');\n        if (favoriteIndex !== -1) {\n          result[favoriteIndex] = {\n            title: 'Favoritos',\n            items: favoriteItems.value\n          };\n        }\n      }\n      return result;\n    });\n\n    // Filtra las acciones rápidas según la búsqueda\n    const filteredQuickActions = computed(() => {\n      if (!searchQuery.value) return [];\n      const queryTerms = prepareSearchTerms(searchQuery.value);\n      return quickActions.filter(action => itemMatchesSearch(action, queryTerms));\n    });\n\n    // Verifica si hay resultados en la búsqueda actual\n    const hasSearchResults = computed(() => {\n      // Si no hay consulta, siempre hay resultados\n      if (!searchQuery.value) return true;\n\n      // Verifica si hay algún elemento en los resultados filtrados\n      return filteredMainItems.value.length > 0 || filteredSections.value.length > 0 || filteredQuickActions.value.length > 0;\n    });\n\n    // Métodos\n\n    // Cierra el sidebar\n    const closeSidebar = () => {\n      emit('close');\n    };\n\n    // Comprueba si el dispositivo es móvil\n    const checkMobile = () => {\n      isMobile.value = window.innerWidth <= 768;\n    };\n\n    // Actualiza la consulta de búsqueda\n    const filterItems = query => {\n      // Si la consulta es la misma, no hacer nada\n      if (searchQuery.value === query) return;\n      searchQuery.value = query;\n      highlightedSuggestionIndex.value = -1;\n      highlightedSuggestionType.value = '';\n\n      // Guarda la consulta en el almacenamiento local para persistencia\n      if (query && query.length > 2) {\n        saveRecentSearch(query);\n      }\n    };\n\n    // Guarda una búsqueda reciente en el almacenamiento local\n    const saveRecentSearch = query => {\n      try {\n        // Obtener búsquedas recientes almacenadas\n        const recentSearches = JSON.parse(localStorage.getItem('recentSearches') || '[]');\n\n        // Eliminar duplicados\n        const filteredSearches = recentSearches.filter(search => search !== query);\n\n        // Añadir la nueva búsqueda al principio\n        filteredSearches.unshift(query);\n\n        // Mantener sólo las 5 búsquedas más recientes\n        const limitedSearches = filteredSearches.slice(0, 5);\n\n        // Guardar en localStorage\n        localStorage.setItem('recentSearches', JSON.stringify(limitedSearches));\n      } catch (error) {\n        console.error('Error al guardar búsqueda reciente:', error);\n      }\n    };\n\n    // Resalta texto en los resultados de búsqueda\n    const highlightText = text => {\n      if (!searchQuery.value) return text;\n      const escapedQuery = searchQuery.value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      const regex = new RegExp(`(${escapedQuery})`, 'gi');\n      return text.replace(regex, '<span class=\"highlight\">$1</span>');\n    };\n\n    // Obtiene el nombre correcto del icono según el mapeo\n    const getIconName = iconKey => {\n      return ICON_MAPPING[iconKey] || iconKey;\n    };\n\n    // Ejecuta una acción rápida\n    const executeQuickAction = actionId => {\n      console.log('Ejecutando acción:', actionId);\n      // Implementar lógica específica para cada acción\n      closeSidebar();\n    };\n\n    // Lifecycle hooks\n    onMounted(() => {\n      window.addEventListener('resize', checkMobile);\n\n      // Atajos de teclado para el buscador\n      document.addEventListener('keydown', handleKeyboardShortcuts);\n\n      // Cargar favoritos basados en el historial\n      updateFavorites();\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', checkMobile);\n      document.removeEventListener('keydown', handleKeyboardShortcuts);\n    });\n\n    // Maneja los atajos de teclado\n    const handleKeyboardShortcuts = event => {\n      // Ctrl/Cmd + K para enfocar el buscador\n      if ((event.ctrlKey || event.metaKey) && event.key === 'k') {\n        event.preventDefault();\n        const searchBar = document.querySelector('.search-input');\n        if (searchBar) {\n          searchBar.focus();\n        }\n      }\n    };\n\n    // Maneja la selección de sugerencias\n    const handleSuggestionHighlight = index => {\n      console.log('Sugerencia resaltada:', index);\n    };\n    const handleSuggestionSelect = suggestion => {\n      console.log('Sugerencia seleccionada:', suggestion);\n    };\n\n    // Resalta una sugerencia\n    const highlightSuggestion = (index, type) => {\n      highlightedSuggestionIndex.value = index;\n      highlightedSuggestionType.value = type;\n    };\n\n    // Implementar funciones para aplicar sugerencias\n    const applyMainSuggestion = item => {\n      if (item && item.href) {\n        // Registrar visita para estadísticas de favoritos\n        registerVisit(item);\n        window.location.href = item.href;\n      }\n      closeSidebar();\n    };\n    const applySectionSuggestion = item => {\n      if (item && item.href) {\n        // Registrar visita para estadísticas de favoritos\n        registerVisit(item);\n        window.location.href = item.href;\n      }\n      closeSidebar();\n    };\n    const applyActionSuggestion = action => {\n      if (action && action.action) {\n        action.action();\n      }\n    };\n\n    // Manejar clic en elementos del menú\n    const handleItemClick = item => {\n      // Registrar visita para estadísticas de favoritos\n      registerVisit(item);\n\n      // Navegar a la página\n      if (item.href) {\n        window.location.href = item.href;\n      }\n\n      // Cerrar el sidebar en dispositivos móviles\n      if (isMobile.value) {\n        closeSidebar();\n      }\n    };\n\n    // Función para registrar visitas y actualizar favoritos\n    const registerVisit = item => {\n      try {\n        // Intentar obtener el historial existente\n        const visitHistory = JSON.parse(localStorage.getItem('visitHistory') || '{}');\n\n        // Crear un ID único para el elemento basado en su texto y href\n        const itemId = `${item.text}-${item.href}`;\n\n        // Verificar si es la primera visita (para animación)\n        const isFirstVisit = !visitHistory[itemId];\n        const oldCount = visitHistory[itemId] || 0;\n\n        // Incrementar contador o inicializarlo\n        visitHistory[itemId] = oldCount + 1;\n\n        // Guardar en localStorage\n        localStorage.setItem('visitHistory', JSON.stringify(visitHistory));\n\n        // Verificar si este elemento debe convertirse en favorito\n        // (Si es la 3ra visita, mostrar mensaje)\n        if (oldCount === 2) {\n          // El elemento ahora tendrá 3 visitas y se convertirá en favorito\n          showFavoriteTip(item.text);\n        }\n\n        // Actualizar los favoritos basados en el historial\n        updateFavorites();\n\n        // Agregar efecto visual (parpadeo) al elemento si es el primero\n        if (isFirstVisit) {\n          setTimeout(() => {\n            // Buscar el contador de visitas relevante y agregar una clase de animación\n            const allItems = document.querySelectorAll('.nav-link');\n            allItems.forEach(el => {\n              const textElement = el.querySelector('.nav-text');\n              if (textElement && textElement.textContent === item.text) {\n                el.classList.add('just-visited');\n                setTimeout(() => {\n                  el.classList.remove('just-visited');\n                }, 1000);\n              }\n            });\n          }, 100);\n        }\n      } catch (error) {\n        console.error('Error al registrar visita:', error);\n      }\n    };\n\n    // Mostrar mensaje de tip cuando un elemento se convierte en favorito\n    const showFavoriteTip = itemName => {\n      // Crear elemento para el mensaje de tip\n      const tipElement = document.createElement('div');\n      tipElement.className = 'favorite-tip';\n      tipElement.innerHTML = `\n        <div class=\"favorite-tip-content\">\n          <span class=\"favorite-tip-icon\">⭐</span>\n          <div class=\"favorite-tip-message\">\n            <strong>${itemName}</strong> se ha añadido a tus favoritos\n          </div>\n          <button class=\"favorite-tip-close\">✕</button>\n        </div>\n      `;\n\n      // Añadir al DOM\n      document.body.appendChild(tipElement);\n\n      // Mostrar el tip con animación\n      setTimeout(() => {\n        tipElement.classList.add('show');\n      }, 100);\n\n      // Configurar botón para cerrar\n      const closeBtn = tipElement.querySelector('.favorite-tip-close');\n      if (closeBtn) {\n        closeBtn.addEventListener('click', () => {\n          tipElement.classList.remove('show');\n          setTimeout(() => {\n            document.body.removeChild(tipElement);\n          }, 300);\n        });\n      }\n\n      // Auto-cerrar después de 5 segundos\n      setTimeout(() => {\n        if (document.body.contains(tipElement)) {\n          tipElement.classList.remove('show');\n          setTimeout(() => {\n            if (document.body.contains(tipElement)) {\n              document.body.removeChild(tipElement);\n            }\n          }, 300);\n        }\n      }, 5000);\n    };\n\n    // Actualizar favoritos basados en el historial de visitas\n    const updateFavorites = () => {\n      try {\n        // Obtener historial de visitas\n        const visitHistory = JSON.parse(localStorage.getItem('visitHistory') || '{}');\n\n        // Combinar los elementos principales y de secciones para seleccionar favoritos\n        const allItems = [...mainItems, ...sections.flatMap(section => section.items)];\n\n        // Crear array de elementos con su frecuencia de visitas\n        const itemsWithFrequency = allItems.map(item => {\n          const itemId = `${item.text}-${item.href}`;\n          return {\n            ...item,\n            frequency: visitHistory[itemId] || 0\n          };\n        });\n\n        // Ordenar por frecuencia de visitas (descendente)\n        itemsWithFrequency.sort((a, b) => b.frequency - a.frequency);\n\n        // Tomar los 4 elementos más visitados (con al menos 1 visita)\n        favoriteItems.value = itemsWithFrequency.filter(item => item.frequency > 0).slice(0, 4);\n      } catch (error) {\n        console.error('Error al actualizar favoritos:', error);\n      }\n    };\n    return {\n      isMobile,\n      logoSrc,\n      searchQuery,\n      highlightedSuggestionIndex,\n      highlightedSuggestionType,\n      searchCache,\n      filteredMainItems,\n      filteredSections,\n      filteredQuickActions,\n      hasSearchResults,\n      closeSidebar,\n      filterItems,\n      highlightText,\n      getIconName,\n      executeQuickAction,\n      highlightSuggestion,\n      applyMainSuggestion,\n      applySectionSuggestion,\n      applyActionSuggestion,\n      handleSuggestionHighlight,\n      handleSuggestionSelect,\n      handleItemClick\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onBeforeUnmount","useStore","SearchBar","MaterialIcon","ICON_MAPPING","name","components","icon","props","isOpen","type","Boolean","default","setup","emit","store","isMobile","window","innerWidth","searchQuery","highlightedSuggestionIndex","highlightedSuggestionType","searchCache","Map","favoriteItems","quickActions","id","text","action","executeQuickAction","shortcut","mainItems","href","active","badge","sections","title","items","logoSrc","getters","prepareSearchTerms","query","toLowerCase","trim","split","itemMatchesSearch","item","queryTerms","itemText","every","term","includes","filteredMainItems","value","filter","filteredSections","map","section","filteredItems","length","result","favoriteIndex","findIndex","filteredQuickActions","hasSearchResults","closeSidebar","checkMobile","filterItems","saveRecentSearch","recentSearches","JSON","parse","localStorage","getItem","filteredSearches","search","unshift","limitedSearches","slice","setItem","stringify","error","console","highlightText","escapedQuery","replace","regex","RegExp","getIconName","iconKey","actionId","log","addEventListener","document","handleKeyboardShortcuts","updateFavorites","removeEventListener","event","ctrlKey","metaKey","key","preventDefault","searchBar","querySelector","focus","handleSuggestionHighlight","index","handleSuggestionSelect","suggestion","highlightSuggestion","applyMainSuggestion","registerVisit","location","applySectionSuggestion","applyActionSuggestion","handleItemClick","visitHistory","itemId","isFirstVisit","oldCount","showFavoriteTip","setTimeout","allItems","querySelectorAll","forEach","el","textElement","textContent","classList","add","remove","itemName","tipElement","createElement","className","innerHTML","body","appendChild","closeBtn","removeChild","contains","flatMap","itemsWithFrequency","frequency","sort","a","b"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\layout\\AppSidebar.vue"],"sourcesContent":["<template>\n  <div class=\"sidebar-overlay\" v-if=\"isOpen && isMobile\" @click=\"closeSidebar\"></div>\n  <aside class=\"app-sidebar\" :class=\"{ 'is-open': isOpen }\">\n    <div class=\"sidebar-header\">\n      <div class=\"logo-container\">\n        <img :src=\"logoSrc\" alt=\"Leadwave\" class=\"sidebar-logo\" />\n      </div>\n      <button class=\"close-button\" @click=\"closeSidebar\" aria-label=\"Cerrar menú\">\n        <icon name=\"close\" />\n      </button>\n    </div>\n    \n    <div class=\"search-box\">\n      <search-bar \n        @search=\"filterItems\" \n        @suggestion-highlighted=\"handleSuggestionHighlight\"\n        @suggestion-selected=\"handleSuggestionSelect\"\n        ref=\"searchBar\" \n        placeholder=\"Buscar en el sistema...\"\n        :hasResults=\"hasSearchResults\"\n      >\n        <template v-slot:suggestions>\n          <!-- Sugerencias de elementos principales -->\n          <div \n            v-for=\"(item, index) in filteredMainItems\" \n            :key=\"`suggestion-main-${index}`\"\n            class=\"suggestion-item\"\n            :class=\"{ 'selected': highlightedSuggestionType === 'main' && highlightedSuggestionIndex === index }\"\n            @mousedown.prevent=\"applyMainSuggestion(item)\"\n            @mouseover=\"highlightSuggestion(index, 'main')\"\n          >\n            <icon :name=\"getIconName(item.icon)\" class=\"suggestion-icon\" aria-hidden=\"true\" />\n            <span class=\"suggestion-text\" v-html=\"highlightText(item.text)\"></span>\n          </div>\n          \n          <!-- Sugerencias de elementos de secciones -->\n          <template v-for=\"(section, secIndex) in filteredSections\">\n            <div \n              v-for=\"(item, itemIndex) in section.items\" \n              :key=\"`suggestion-section-${secIndex}-${itemIndex}`\"\n              class=\"suggestion-item\"\n              :class=\"{ 'selected': highlightedSuggestionType === 'section' && highlightedSuggestionIndex === `${secIndex}-${itemIndex}` }\"\n              @mousedown.prevent=\"applySectionSuggestion(item)\"\n              @mouseover=\"highlightSuggestion(`${secIndex}-${itemIndex}`, 'section')\"\n            >\n              <icon :name=\"getIconName(item.icon)\" class=\"suggestion-icon\" aria-hidden=\"true\" />\n              <span class=\"suggestion-text\">\n                <span class=\"suggestion-section\">{{ section.title }}</span>\n                <span v-html=\"highlightText(item.text)\"></span>\n              </span>\n            </div>\n          </template>\n          \n          <!-- Sugerencias de acciones rápidas -->\n          <div \n            v-for=\"(action, index) in filteredQuickActions\" \n            :key=\"`suggestion-action-${index}`\"\n            class=\"suggestion-item\"\n            :class=\"{ 'selected': highlightedSuggestionType === 'action' && highlightedSuggestionIndex === index }\"\n            @mousedown.prevent=\"applyActionSuggestion(action)\"\n            @mouseover=\"highlightSuggestion(index, 'action')\"\n          >\n            <icon :name=\"getIconName(action.icon)\" class=\"suggestion-icon\" aria-hidden=\"true\" />\n            <span class=\"suggestion-text\">\n              <span class=\"suggestion-section\">Acción</span>\n              <span v-html=\"highlightText(action.text)\"></span>\n            </span>\n          </div>\n        </template>\n      </search-bar>\n    </div>\n    \n    <nav class=\"sidebar-nav\">\n      <!-- Acciones rápidas -->\n      <div v-if=\"filteredQuickActions.length > 0\" class=\"quick-actions-section\">\n        <div class=\"section-title\">Acciones rápidas</div>\n        <ul class=\"nav-list\">\n          <li \n            class=\"nav-item quick-action-item\" \n            v-for=\"(action, index) in filteredQuickActions\" \n            :key=\"`action-${index}`\"\n            @click=\"action.action\"\n          >\n            <div class=\"nav-link\">\n              <span class=\"nav-icon\">\n                <icon :name=\"getIconName(action.icon)\" />\n              </span>\n              <span class=\"nav-text\" v-if=\"!searchQuery\" v-text=\"action.text\"></span>\n              <span class=\"nav-text\" v-else v-html=\"highlightText(action.text)\"></span>\n              <kbd v-if=\"action.shortcut\" class=\"action-shortcut\">{{ action.shortcut }}</kbd>\n            </div>\n          </li>\n        </ul>\n      </div>\n      \n      <!-- Elementos de navegación principal -->\n      <ul class=\"nav-list\" v-if=\"filteredMainItems.length > 0\">\n        <li class=\"nav-item\" v-for=\"(item, index) in filteredMainItems\" :key=\"`main-${index}`\">\n          <a \n            :href=\"item.href\" \n            class=\"nav-link\" \n            :class=\"{ active: item.active }\"\n            @click.prevent=\"handleItemClick(item)\"\n          >\n            <span class=\"nav-icon\">\n              <icon :name=\"getIconName(item.icon)\" />\n            </span>\n            <span class=\"nav-text\" v-if=\"!searchQuery\" v-text=\"item.text\"></span>\n            <span class=\"nav-text\" v-else v-html=\"highlightText(item.text)\"></span>\n            <span class=\"nav-badge\" v-if=\"item.badge\">{{ item.badge }}</span>\n          </a>\n        </li>\n      </ul>\n      \n      <!-- Secciones -->\n      <div class=\"nav-section\" v-for=\"(section, secIndex) in filteredSections\" :key=\"`section-${secIndex}`\">\n        <div class=\"section-title\">{{ section.title }}</div>\n        <ul class=\"nav-list\">\n          <li class=\"nav-item\" v-for=\"(item, itemIndex) in section.items\" :key=\"`${secIndex}-${itemIndex}`\">\n            <a \n              :href=\"item.href\" \n              class=\"nav-link\"\n              @click.prevent=\"handleItemClick(item)\"\n            >\n              <span class=\"nav-icon\">\n                <icon :name=\"getIconName(item.icon)\" />\n              </span>\n              <span class=\"nav-text\" v-if=\"!searchQuery\" v-text=\"item.text\"></span>\n              <span class=\"nav-text\" v-else v-html=\"highlightText(item.text)\"></span>\n              <span class=\"nav-badge\" v-if=\"item.badge\">{{ item.badge }}</span>\n              <span v-if=\"section.title === 'Favoritos' && item.frequency\" class=\"favorite-count\">{{ item.frequency }}</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      \n      <!-- Mensaje cuando no hay resultados en ninguna categoría -->\n      <div class=\"no-results-container\" v-if=\"searchQuery && !hasSearchResults\">\n        <div class=\"no-results-icon\">\n          <icon name=\"search_off\" size=\"xl\" />\n        </div>\n        <div class=\"no-results-text\">\n          No se encontraron resultados para \"<strong>{{ searchQuery }}</strong>\"\n        </div>\n        <div class=\"no-results-hint\">\n          Intenta con otros términos o revisa la ortografía\n        </div>\n      </div>\n    </nav>\n  </aside>\n</template>\n\n<script>\n/**\n * Componente de menú lateral\n * \n * Se muestra al hacer clic en el logo del header\n * Contiene enlaces a las diferentes secciones de la aplicación\n * \n * @component AppSidebar\n */\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue';\nimport { useStore } from 'vuex';\nimport SearchBar from '../ui/SearchBar.vue';\nimport MaterialIcon from '../ui/Icon.vue';\nimport { ICON_MAPPING } from '../../constants/icons';\n\nexport default {\n  name: 'AppSidebar',\n  \n  components: {\n    SearchBar,\n    icon: MaterialIcon\n  },\n  \n  props: {\n    /**\n     * Indica si el sidebar está abierto o cerrado\n     */\n    isOpen: {\n      type: Boolean,\n      default: false\n    }\n  },\n  \n  setup(props, { emit }) {\n    const store = useStore();\n    const isMobile = ref(window.innerWidth <= 768);\n    const searchQuery = ref('');\n    \n    // Información sobre la sugerencia resaltada actualmente\n    const highlightedSuggestionIndex = ref(-1);\n    const highlightedSuggestionType = ref(''); // 'main', 'section', 'action'\n    \n    // Cache para resultados de búsqueda\n    const searchCache = ref(new Map());\n\n    // Favoritos dinámicos - guardar historial de visitas\n    const favoriteItems = ref([]);\n    \n    // Datos para acciones rápidas y navegación...\n    // (mantener los mismos datos del componente original)\n    const quickActions = [\n      { \n        id: 'create-report', \n        text: 'Crear nuevo reporte', \n        icon: 'nav-icon-report',\n        action: () => executeQuickAction('create-report'),\n        shortcut: 'Alt+N'\n      },\n      { \n        id: 'settings', \n        text: 'Abrir configuración', \n        icon: 'nav-icon-settings',\n        action: () => executeQuickAction('settings')\n      },\n      { \n        id: 'help', \n        text: 'Ver ayuda', \n        icon: 'nav-icon-note',\n        action: () => executeQuickAction('help')\n      },\n      { \n        id: 'notifications', \n        text: 'Ver todas las notificaciones', \n        icon: 'nav-icon-bell',\n        action: () => executeQuickAction('notifications')\n      }\n    ];\n    \n    // Datos para las secciones de navegación\n    const mainItems = [\n      { \n        text: 'Dashboard', \n        icon: 'nav-icon-chart', \n        href: '#', \n        active: true\n      },\n      { \n        text: 'Notificaciones', \n        icon: 'nav-icon-bell', \n        href: '#', \n        badge: '12'\n      },\n      { \n        text: 'Tareas', \n        icon: 'nav-icon-check', \n        href: '#'\n      },\n      { \n        text: 'Notas', \n        icon: 'nav-icon-note', \n        href: '#'\n      },\n      { \n        text: 'Emails', \n        icon: 'nav-icon-mail', \n        href: '#'\n      },\n      { \n        text: 'Reportes', \n        icon: 'nav-icon-report', \n        href: '#'\n      },\n      { \n        text: 'Automatizaciones', \n        icon: 'nav-icon-settings', \n        href: '#'\n      },\n      { \n        text: 'Flujos de trabajo', \n        icon: 'nav-icon-workflow', \n        href: '#'\n      }\n    ];\n    \n    const sections = [\n      {\n        title: 'Favoritos',\n        items: [\n          { \n            text: 'UK & EU Companies', \n            icon: 'nav-icon-globe', \n            href: '#'\n          },\n          { \n            text: 'B2B Relationship Building', \n            icon: 'nav-icon-handshake', \n            href: '#'\n          },\n          { \n            text: 'Potential Partnership', \n            icon: 'nav-icon-partnership', \n            href: '#'\n          },\n          { \n            text: 'CRM Meeting Template', \n            icon: 'nav-icon-calendar', \n            href: '#'\n          }\n        ]\n      },\n      {\n        title: 'Registros',\n        items: [\n          { \n            text: 'Clientes', \n            icon: 'nav-icon-users', \n            href: '#'\n          },\n          { \n            text: 'Contactos', \n            icon: 'nav-icon-phone', \n            href: '#'\n          }\n        ]\n      }\n    ];\n    \n    // Computed properties\n    \n    // Determina la imagen del logo según el tema actual\n    const logoSrc = computed(() => {\n      return store.getters['theme/isDark'] ? '/img/Wblanco.png' : '/img/Wnegro.png';\n    });\n    \n    // Funciones para filtrar elementos según la búsqueda\n    const prepareSearchTerms = (query) => {\n      return query.toLowerCase().trim().split(/\\s+/);\n    };\n    \n    const itemMatchesSearch = (item, queryTerms) => {\n      const itemText = item.text.toLowerCase();\n      return queryTerms.every(term => itemText.includes(term));\n    };\n    \n    // Filtra los elementos principales según la búsqueda\n    const filteredMainItems = computed(() => {\n      if (!searchQuery.value) return mainItems;\n      \n      const queryTerms = prepareSearchTerms(searchQuery.value);\n      \n      return mainItems.filter(item => \n        itemMatchesSearch(item, queryTerms)\n      );\n    });\n    \n    // Filtra las secciones según la búsqueda\n    const filteredSections = computed(() => {\n      // Si tenemos una búsqueda, filtramos normalmente\n      if (searchQuery.value) {\n        const queryTerms = prepareSearchTerms(searchQuery.value);\n        \n        // Filtrar cada sección y sus elementos\n        return sections.map(section => {\n          // Filtrar items dentro de cada sección\n          const filteredItems = section.items.filter(item => \n            itemMatchesSearch(item, queryTerms)\n          );\n          \n          // Solo devuelve la sección si tiene elementos filtrados\n          if (filteredItems.length) {\n            return {\n              ...section,\n              items: filteredItems\n            };\n          }\n          return null;\n        }).filter(Boolean); // Eliminar secciones vacías\n      }\n      \n      // Cuando no hay búsqueda, mostramos las secciones normales y la sección de favoritos dinámica\n      const result = [...sections]; // Copiar las secciones estáticas\n      \n      // Solo añadir la sección de favoritos dinámicos si hay elementos\n      if (favoriteItems.value.length > 0) {\n        // Reemplazar la sección de favoritos con la dinámica\n        const favoriteIndex = result.findIndex(section => section.title === 'Favoritos');\n        if (favoriteIndex !== -1) {\n          result[favoriteIndex] = {\n            title: 'Favoritos',\n            items: favoriteItems.value\n          };\n        }\n      }\n      \n      return result;\n    });\n    \n    // Filtra las acciones rápidas según la búsqueda\n    const filteredQuickActions = computed(() => {\n      if (!searchQuery.value) return [];\n      \n      const queryTerms = prepareSearchTerms(searchQuery.value);\n      \n      return quickActions.filter(action => \n        itemMatchesSearch(action, queryTerms)\n      );\n    });\n    \n    // Verifica si hay resultados en la búsqueda actual\n    const hasSearchResults = computed(() => {\n      // Si no hay consulta, siempre hay resultados\n      if (!searchQuery.value) return true;\n      \n      // Verifica si hay algún elemento en los resultados filtrados\n      return filteredMainItems.value.length > 0 || \n             filteredSections.value.length > 0 ||\n             filteredQuickActions.value.length > 0;\n    });\n    \n    // Métodos\n    \n    // Cierra el sidebar\n    const closeSidebar = () => {\n      emit('close');\n    };\n    \n    // Comprueba si el dispositivo es móvil\n    const checkMobile = () => {\n      isMobile.value = window.innerWidth <= 768;\n    };\n    \n    // Actualiza la consulta de búsqueda\n    const filterItems = (query) => {\n      // Si la consulta es la misma, no hacer nada\n      if (searchQuery.value === query) return;\n      \n      searchQuery.value = query;\n      highlightedSuggestionIndex.value = -1;\n      highlightedSuggestionType.value = '';\n      \n      // Guarda la consulta en el almacenamiento local para persistencia\n      if (query && query.length > 2) {\n        saveRecentSearch(query);\n      }\n    };\n    \n    // Guarda una búsqueda reciente en el almacenamiento local\n    const saveRecentSearch = (query) => {\n      try {\n        // Obtener búsquedas recientes almacenadas\n        const recentSearches = JSON.parse(localStorage.getItem('recentSearches') || '[]');\n        \n        // Eliminar duplicados\n        const filteredSearches = recentSearches.filter(search => search !== query);\n        \n        // Añadir la nueva búsqueda al principio\n        filteredSearches.unshift(query);\n        \n        // Mantener sólo las 5 búsquedas más recientes\n        const limitedSearches = filteredSearches.slice(0, 5);\n        \n        // Guardar en localStorage\n        localStorage.setItem('recentSearches', JSON.stringify(limitedSearches));\n      } catch (error) {\n        console.error('Error al guardar búsqueda reciente:', error);\n      }\n    };\n    \n    // Resalta texto en los resultados de búsqueda\n    const highlightText = (text) => {\n      if (!searchQuery.value) return text;\n      \n      const escapedQuery = searchQuery.value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      const regex = new RegExp(`(${escapedQuery})`, 'gi');\n      \n      return text.replace(regex, '<span class=\"highlight\">$1</span>');\n    };\n    \n    // Obtiene el nombre correcto del icono según el mapeo\n    const getIconName = (iconKey) => {\n      return ICON_MAPPING[iconKey] || iconKey;\n    };\n    \n    // Ejecuta una acción rápida\n    const executeQuickAction = (actionId) => {\n      console.log('Ejecutando acción:', actionId);\n      // Implementar lógica específica para cada acción\n      closeSidebar();\n    };\n    \n    // Lifecycle hooks\n    onMounted(() => {\n      window.addEventListener('resize', checkMobile);\n      \n      // Atajos de teclado para el buscador\n      document.addEventListener('keydown', handleKeyboardShortcuts);\n      \n      // Cargar favoritos basados en el historial\n      updateFavorites();\n    });\n    \n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', checkMobile);\n      document.removeEventListener('keydown', handleKeyboardShortcuts);\n    });\n    \n    // Maneja los atajos de teclado\n    const handleKeyboardShortcuts = (event) => {\n      // Ctrl/Cmd + K para enfocar el buscador\n      if ((event.ctrlKey || event.metaKey) && event.key === 'k') {\n        event.preventDefault();\n        const searchBar = document.querySelector('.search-input');\n        if (searchBar) {\n          searchBar.focus();\n        }\n      }\n    };\n    \n    // Maneja la selección de sugerencias\n    const handleSuggestionHighlight = (index) => {\n      console.log('Sugerencia resaltada:', index);\n    };\n    \n    const handleSuggestionSelect = (suggestion) => {\n      console.log('Sugerencia seleccionada:', suggestion);\n    };\n    \n    // Resalta una sugerencia\n    const highlightSuggestion = (index, type) => {\n      highlightedSuggestionIndex.value = index;\n      highlightedSuggestionType.value = type;\n    };\n    \n    // Implementar funciones para aplicar sugerencias\n    const applyMainSuggestion = (item) => {\n      if (item && item.href) {\n        // Registrar visita para estadísticas de favoritos\n        registerVisit(item);\n        window.location.href = item.href;\n      }\n      closeSidebar();\n    };\n    \n    const applySectionSuggestion = (item) => {\n      if (item && item.href) {\n        // Registrar visita para estadísticas de favoritos\n        registerVisit(item);\n        window.location.href = item.href;\n      }\n      closeSidebar();\n    };\n    \n    const applyActionSuggestion = (action) => {\n      if (action && action.action) {\n        action.action();\n      }\n    };\n    \n    // Manejar clic en elementos del menú\n    const handleItemClick = (item) => {\n      // Registrar visita para estadísticas de favoritos\n      registerVisit(item);\n      \n      // Navegar a la página\n      if (item.href) {\n        window.location.href = item.href;\n      }\n      \n      // Cerrar el sidebar en dispositivos móviles\n      if (isMobile.value) {\n        closeSidebar();\n      }\n    };\n    \n    // Función para registrar visitas y actualizar favoritos\n    const registerVisit = (item) => {\n      try {\n        // Intentar obtener el historial existente\n        const visitHistory = JSON.parse(localStorage.getItem('visitHistory') || '{}');\n        \n        // Crear un ID único para el elemento basado en su texto y href\n        const itemId = `${item.text}-${item.href}`;\n        \n        // Verificar si es la primera visita (para animación)\n        const isFirstVisit = !visitHistory[itemId];\n        const oldCount = visitHistory[itemId] || 0;\n        \n        // Incrementar contador o inicializarlo\n        visitHistory[itemId] = oldCount + 1;\n        \n        // Guardar en localStorage\n        localStorage.setItem('visitHistory', JSON.stringify(visitHistory));\n        \n        // Verificar si este elemento debe convertirse en favorito\n        // (Si es la 3ra visita, mostrar mensaje)\n        if (oldCount === 2) {\n          // El elemento ahora tendrá 3 visitas y se convertirá en favorito\n          showFavoriteTip(item.text);\n        }\n        \n        // Actualizar los favoritos basados en el historial\n        updateFavorites();\n        \n        // Agregar efecto visual (parpadeo) al elemento si es el primero\n        if (isFirstVisit) {\n          setTimeout(() => {\n            // Buscar el contador de visitas relevante y agregar una clase de animación\n            const allItems = document.querySelectorAll('.nav-link');\n            allItems.forEach(el => {\n              const textElement = el.querySelector('.nav-text');\n              if (textElement && textElement.textContent === item.text) {\n                el.classList.add('just-visited');\n                setTimeout(() => {\n                  el.classList.remove('just-visited');\n                }, 1000);\n              }\n            });\n          }, 100);\n        }\n      } catch (error) {\n        console.error('Error al registrar visita:', error);\n      }\n    };\n    \n    // Mostrar mensaje de tip cuando un elemento se convierte en favorito\n    const showFavoriteTip = (itemName) => {\n      // Crear elemento para el mensaje de tip\n      const tipElement = document.createElement('div');\n      tipElement.className = 'favorite-tip';\n      tipElement.innerHTML = `\n        <div class=\"favorite-tip-content\">\n          <span class=\"favorite-tip-icon\">⭐</span>\n          <div class=\"favorite-tip-message\">\n            <strong>${itemName}</strong> se ha añadido a tus favoritos\n          </div>\n          <button class=\"favorite-tip-close\">✕</button>\n        </div>\n      `;\n      \n      // Añadir al DOM\n      document.body.appendChild(tipElement);\n      \n      // Mostrar el tip con animación\n      setTimeout(() => {\n        tipElement.classList.add('show');\n      }, 100);\n      \n      // Configurar botón para cerrar\n      const closeBtn = tipElement.querySelector('.favorite-tip-close');\n      if (closeBtn) {\n        closeBtn.addEventListener('click', () => {\n          tipElement.classList.remove('show');\n          setTimeout(() => {\n            document.body.removeChild(tipElement);\n          }, 300);\n        });\n      }\n      \n      // Auto-cerrar después de 5 segundos\n      setTimeout(() => {\n        if (document.body.contains(tipElement)) {\n          tipElement.classList.remove('show');\n          setTimeout(() => {\n            if (document.body.contains(tipElement)) {\n              document.body.removeChild(tipElement);\n            }\n          }, 300);\n        }\n      }, 5000);\n    };\n    \n    // Actualizar favoritos basados en el historial de visitas\n    const updateFavorites = () => {\n      try {\n        // Obtener historial de visitas\n        const visitHistory = JSON.parse(localStorage.getItem('visitHistory') || '{}');\n        \n        // Combinar los elementos principales y de secciones para seleccionar favoritos\n        const allItems = [\n          ...mainItems,\n          ...sections.flatMap(section => section.items)\n        ];\n        \n        // Crear array de elementos con su frecuencia de visitas\n        const itemsWithFrequency = allItems.map(item => {\n          const itemId = `${item.text}-${item.href}`;\n          return {\n            ...item,\n            frequency: visitHistory[itemId] || 0\n          };\n        });\n        \n        // Ordenar por frecuencia de visitas (descendente)\n        itemsWithFrequency.sort((a, b) => b.frequency - a.frequency);\n        \n        // Tomar los 4 elementos más visitados (con al menos 1 visita)\n        favoriteItems.value = itemsWithFrequency\n          .filter(item => item.frequency > 0)\n          .slice(0, 4);\n        \n      } catch (error) {\n        console.error('Error al actualizar favoritos:', error);\n      }\n    };\n    \n    return {\n      isMobile,\n      logoSrc,\n      searchQuery,\n      highlightedSuggestionIndex,\n      highlightedSuggestionType,\n      searchCache,\n      filteredMainItems,\n      filteredSections,\n      filteredQuickActions,\n      hasSearchResults,\n      closeSidebar,\n      filterItems,\n      highlightText,\n      getIconName,\n      executeQuickAction,\n      highlightSuggestion,\n      applyMainSuggestion,\n      applySectionSuggestion,\n      applyActionSuggestion,\n      handleSuggestionHighlight,\n      handleSuggestionSelect,\n      handleItemClick\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Overlay que oscurece el fondo cuando el sidebar está abierto en móvil */\n.sidebar-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n}\n\n/* Estilos del sidebar */\n.app-sidebar {\n  position: fixed;\n  top: 0;\n  left: -280px; /* Oculto por defecto */\n  width: 280px;\n  height: 100vh;\n  background-color: var(--sidebar-bg);\n  z-index: 1000;\n  transition: left 0.3s ease;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  color: var(--sidebar-text);\n  scrollbar-width: thin;\n  scrollbar-color: rgba(255, 255, 255, 0.2) rgba(0, 0, 0, 0.2);\n  box-shadow: var(--card-shadow);\n}\n\n/* Personalización de la barra de desplazamiento para WebKit (Chrome, Safari, etc.) */\n.app-sidebar::-webkit-scrollbar {\n  width: 8px;\n}\n\n.app-sidebar::-webkit-scrollbar-track {\n  background: var(--scrollbar-track);\n  border-radius: 4px;\n}\n\n.app-sidebar::-webkit-scrollbar-thumb {\n  background-color: var(--scrollbar-thumb);\n  border-radius: 4px;\n  opacity: 0.7;\n}\n\n.app-sidebar::-webkit-scrollbar-thumb:hover {\n  background-color: var(--scrollbar-thumb-hover);\n  opacity: 1;\n}\n\n/* Cuando está abierto */\n.app-sidebar.is-open {\n  left: 0;\n}\n\n/* Cabecera del sidebar */\n.sidebar-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 1.25rem 1rem 0.75rem;\n  border-bottom: none;\n  background-color: var(--bg-secondary);\n}\n\n.logo-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n}\n\n.sidebar-logo {\n  width: 54px;\n  height: 54px;\n  object-fit: contain;\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n  transition: transform 0.3s ease;\n}\n\n.sidebar-logo:hover {\n  transform: scale(1.05);\n}\n\n/* Botón de cerrar */\n.close-button {\n  background: none;\n  border: none;\n  color: var(--text-secondary);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  transition: background-color 0.2s;\n  position: relative;\n}\n\n.close-button:hover {\n  background-color: var(--bg-primary);\n}\n\n/* Estilos de navegación e iconos reutilizados */\n.nav-icon {\n  margin-right: 0.75rem;\n  width: 20px;\n  height: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 0.75;\n}\n\n.nav-link:hover .nav-icon {\n  opacity: 0.9;\n}\n\n.nav-link.active .nav-icon {\n  opacity: 1;\n}\n\n/* Navegación */\n.sidebar-nav {\n  flex: 1;\n  overflow-y: auto;\n  padding: 0.5rem 0;\n  scrollbar-width: thin;\n  scrollbar-color: var(--border) var(--bg-primary);\n  background-color: var(--sidebar-bg);\n}\n\n/* Personalización de la barra de desplazamiento para WebKit (Chrome, Safari, etc.) */\n.sidebar-nav::-webkit-scrollbar {\n  width: 6px;\n}\n\n.sidebar-nav::-webkit-scrollbar-track {\n  background: var(--scrollbar-track);\n  border-radius: 3px;\n}\n\n.sidebar-nav::-webkit-scrollbar-thumb {\n  background-color: var(--scrollbar-thumb);\n  border-radius: 3px;\n  opacity: 0.7;\n}\n\n.sidebar-nav::-webkit-scrollbar-thumb:hover {\n  background-color: var(--scrollbar-thumb-hover);\n  opacity: 1;\n}\n\n.nav-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.nav-section {\n  margin-top: 1.5rem;\n  padding-top: 0.5rem;\n  border-top: 1px solid var(--border);\n}\n\n.section-title {\n  padding: 0.5rem 1rem;\n  font-size: 0.85rem;\n  color: var(--text-secondary);\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n}\n\n.nav-item {\n  margin-bottom: 2px;\n}\n\n.nav-link {\n  display: flex;\n  align-items: center;\n  padding: 0.6rem 1rem;\n  color: var(--text-primary);\n  text-decoration: none;\n  transition: background-color 0.2s;\n  position: relative;\n}\n\n.nav-link:hover {\n  background-color: var(--bg-primary);\n}\n\n.nav-link.active {\n  background-color: var(--bg-primary);\n  color: var(--text-primary);\n  font-weight: 500;\n}\n\n/* Estilos para acciones rápidas */\n.quick-actions-section {\n  margin-bottom: 1rem;\n  border-bottom: 1px solid var(--border);\n  padding-bottom: 0.5rem;\n}\n\n.quick-action-item {\n  cursor: pointer;\n}\n\n.action-shortcut {\n  margin-left: auto;\n  background-color: var(--bg-secondary);\n  color: var(--text-secondary);\n  padding: 2px 5px;\n  border-radius: 4px;\n  font-size: 0.7rem;\n  font-family: monospace;\n  border: 1px solid var(--border);\n}\n\n/* Estilos para mensajes de no resultados */\n.no-results-container {\n  padding: 2rem 1rem;\n  text-align: center;\n  color: var(--text-secondary);\n  animation: fadeIn 0.3s ease;\n}\n\n.no-results-icon {\n  font-size: 2rem;\n  margin-bottom: 1rem;\n  opacity: 0.7;\n}\n\n.no-results-text {\n  font-size: 0.95rem;\n  margin-bottom: 0.5rem;\n}\n\n.no-results-hint {\n  font-size: 0.85rem;\n  opacity: 0.7;\n}\n\n@media (min-width: 769px) {\n  /* En pantallas grandes, transformar el contenido principal */\n  .app-sidebar {\n    left: 0;\n    transform: translateX(-100%);\n  }\n  \n  .app-sidebar.is-open {\n    transform: translateX(0);\n  }\n}\n\n/* Estilo para texto resaltado */\n:deep(.highlight) {\n  background-color: rgba(var(--primary-rgb), 0.2);\n  border-radius: 3px;\n  padding: 0 2px;\n  font-weight: 500;\n  color: var(--primary);\n}\n\n/* Estilos para acciones rápidas */\n.quick-actions-section {\n  margin-bottom: 1rem;\n  border-bottom: 1px solid var(--border);\n  padding-bottom: 0.5rem;\n}\n\n.quick-action-item {\n  cursor: pointer;\n}\n\n.action-shortcut {\n  margin-left: auto;\n  background-color: var(--bg-secondary);\n  color: var(--text-secondary);\n  padding: 2px 5px;\n  border-radius: 4px;\n  font-size: 0.7rem;\n  font-family: monospace;\n  border: 1px solid var(--border);\n}\n\n/* Estilos para mensajes de no resultados */\n.no-results-container {\n  padding: 2rem 1rem;\n  text-align: center;\n  color: var(--text-secondary);\n  animation: fadeIn 0.3s ease;\n}\n\n.no-results-icon {\n  font-size: 2rem;\n  margin-bottom: 1rem;\n  opacity: 0.7;\n}\n\n.no-results-text {\n  font-size: 0.95rem;\n  margin-bottom: 0.5rem;\n}\n\n.no-results-hint {\n  font-size: 0.85rem;\n  opacity: 0.7;\n}\n\n/* Estilos específicos para las sugerencias */\n:deep(.suggestion-section) {\n  display: block;\n  font-size: 0.7rem;\n  color: var(--text-secondary);\n  opacity: 0.7;\n  margin-bottom: 2px;\n}\n\n:deep(.highlight) {\n  background-color: rgba(44, 198, 175, 0.2);\n  color: var(--primary);\n  padding: 0 2px;\n  border-radius: 2px;\n  font-weight: 600;\n}\n\n:deep(.suggestion-item) {\n  border-left: 2px solid transparent;\n  transition: border-color 0.2s ease, background-color 0.2s ease;\n}\n\n:deep(.suggestion-item.selected),\n:deep(.suggestion-item:hover) {\n  border-left-color: var(--primary);\n  background-color: var(--bg-hover);\n}\n\n/* Mejorar visualización de búsquedas recientes */\n:deep(.search-suggestions) {\n  background-color: var(--bg-primary);\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\n}\n\n/* Divider entre secciones de sugerencias */\n:deep(.current-suggestions) {\n  position: relative;\n}\n\n:deep(.current-suggestions::after) {\n  content: '';\n  position: absolute;\n  bottom: -5px;\n  left: 15%;\n  right: 15%;\n  height: 1px;\n  background-color: var(--border);\n  opacity: 0.5;\n}\n\n/* Estilos para el contador de frecuencia en favoritos */\n.favorite-count {\n  margin-left: auto;\n  background-color: var(--favorite-count-bg);\n  color: var(--favorite-count-text);\n  font-size: 0.7rem;\n  padding: 2px 5px;\n  border-radius: 10px;\n  min-width: 18px;\n  text-align: center;\n  font-weight: 500;\n  opacity: 0.9;\n  transition: all 0.2s ease;\n}\n\n.nav-link:hover .favorite-count {\n  opacity: 1;\n  background-color: var(--primary);\n  color: white;\n  transform: scale(1.05);\n}\n\n/* Estilo para los elementos de favoritos */\n.nav-section:first-of-type .nav-link {\n  transition: all 0.2s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.nav-section:first-of-type .nav-link:before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 3px;\n  background-color: var(--primary);\n  opacity: 0;\n  transition: opacity 0.2s ease;\n}\n\n.nav-section:first-of-type .nav-link:hover {\n  background-color: var(--favorite-bg);\n}\n\n.nav-section:first-of-type .nav-link:hover:before {\n  opacity: 1;\n}\n\n.nav-section:first-of-type .nav-icon {\n  color: var(--primary);\n  opacity: 0.9;\n}\n\n/* Efecto de animación para el primer clic */\n.just-visited {\n  animation: pulse 1s ease;\n}\n\n@keyframes pulse {\n  0% {\n    background-color: var(--bg-primary);\n  }\n  50% {\n    background-color: var(--favorite-bg);\n  }\n  100% {\n    background-color: var(--bg-primary);\n  }\n}\n\n/* Estilos para el mensaje de tip de favoritos */\n.favorite-tip {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  background-color: var(--bg-secondary);\n  border-radius: var(--border-radius-md);\n  box-shadow: var(--shadow-md);\n  padding: 12px 16px;\n  z-index: 9999;\n  transform: translateY(100px);\n  opacity: 0;\n  transition: transform 0.3s ease, opacity 0.3s ease;\n  max-width: 350px;\n  border-left: 4px solid var(--primary);\n}\n\n.favorite-tip.show {\n  transform: translateY(0);\n  opacity: 1;\n}\n\n.favorite-tip-content {\n  display: flex;\n  align-items: center;\n}\n\n.favorite-tip-icon {\n  font-size: 1.5rem;\n  margin-right: 12px;\n}\n\n.favorite-tip-message {\n  flex: 1;\n  font-size: 0.9rem;\n  color: var(--text-primary);\n}\n\n.favorite-tip-close {\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: var(--text-secondary);\n  padding: 4px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 8px;\n  font-size: 0.8rem;\n}\n\n.favorite-tip-close:hover {\n  background-color: var(--bg-hover);\n  color: var(--text-primary);\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}