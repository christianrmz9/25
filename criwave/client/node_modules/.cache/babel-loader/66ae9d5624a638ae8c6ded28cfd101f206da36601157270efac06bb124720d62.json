{"ast":null,"code":"/**\n * Componente para renderizar ítems de menú, soportando estructura jerárquica\n * \n * Características:\n * - Soporta elementos simples y elementos con hijos (expansibles)\n * - Gestiona el estado de expandido/colapsado\n * - Permite marcado como favorito\n * - Renderiza correctamente elementos de cabecera de sección\n * \n * @component MenuItem\n */\nimport { computed } from 'vue';\nexport default {\n  name: 'MenuItem',\n  props: {\n    /**\n     * Elemento a renderizar\n     */\n    item: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Nivel de profundidad para indentación\n     */\n    depth: {\n      type: Number,\n      default: 0\n    }\n  },\n  emits: ['item-click'],\n  setup(props, {\n    emit\n  }) {\n    // Verificar si el elemento tiene hijos\n    const hasChildren = computed(() => {\n      return props.item.children && props.item.children.length > 0;\n    });\n\n    // Estado de expansión del elemento\n    const isExpanded = computed(() => {\n      return props.item.expanded || false;\n    });\n\n    // Manejar clic en elemento\n    const handleClick = () => {\n      emit('item-click', props.item);\n      if (hasChildren.value) {\n        props.item.expanded = !props.item.expanded;\n      }\n    };\n\n    // Manejar clic en elemento hijo\n    const handleChildClick = item => {\n      emit('item-click', item);\n    };\n    return {\n      hasChildren,\n      isExpanded,\n      handleClick,\n      handleChildClick\n    };\n  }\n};","map":{"version":3,"names":["computed","name","props","item","type","Object","required","depth","Number","default","emits","setup","emit","hasChildren","children","length","isExpanded","expanded","handleClick","value","handleChildClick"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\layout\\MenuItem.vue"],"sourcesContent":["<template>\n  <div class=\"menu-item-wrapper\" :class=\"{ 'with-children': hasChildren }\">\n    <!-- Elemento principal -->\n    <div \n      class=\"menu-item\" \n      :class=\"{ \n        'expanded': isExpanded,\n        'section-header': item.isSection\n      }\"\n    >\n      <a \n        v-if=\"!item.isSection\" \n        :href=\"item.href || '#'\" \n        class=\"nav-link\" \n        :class=\"{ 'active': item.active }\"\n        @click.prevent=\"handleClick\"\n      >\n        <span class=\"nav-text\">{{ item.text }}</span>\n        <span v-if=\"item.badge\" class=\"nav-badge\">{{ item.badge }}</span>\n        \n        <!-- Flecha para expandir/colapsar -->\n        <span v-if=\"hasChildren\" class=\"expand-arrow\" :class=\"{ 'expanded': isExpanded }\">\n          ▼\n        </span>\n      </a>\n      \n      <!-- Título de sección -->\n      <div v-else class=\"section-title\">\n        {{ item.text }}\n      </div>\n    </div>\n    \n    <!-- Subelementos (renderizado recursivo) -->\n    <transition name=\"slide-children\">\n      <div v-if=\"hasChildren && isExpanded\" class=\"children-wrapper\">\n        <menu-item \n          v-for=\"child in item.children\" \n          :key=\"child.id\" \n          :item=\"child\"\n          :depth=\"depth + 1\"\n          @item-click=\"handleChildClick\"\n        />\n      </div>\n    </transition>\n  </div>\n</template>\n\n<script>\n/**\n * Componente para renderizar ítems de menú, soportando estructura jerárquica\n * \n * Características:\n * - Soporta elementos simples y elementos con hijos (expansibles)\n * - Gestiona el estado de expandido/colapsado\n * - Permite marcado como favorito\n * - Renderiza correctamente elementos de cabecera de sección\n * \n * @component MenuItem\n */\nimport { computed } from 'vue';\n\nexport default {\n  name: 'MenuItem',\n  \n  props: {\n    /**\n     * Elemento a renderizar\n     */\n    item: {\n      type: Object,\n      required: true\n    },\n    \n    /**\n     * Nivel de profundidad para indentación\n     */\n    depth: {\n      type: Number,\n      default: 0\n    }\n  },\n  \n  emits: ['item-click'],\n  \n  setup(props, { emit }) {\n    // Verificar si el elemento tiene hijos\n    const hasChildren = computed(() => {\n      return props.item.children && props.item.children.length > 0;\n    });\n    \n    // Estado de expansión del elemento\n    const isExpanded = computed(() => {\n      return props.item.expanded || false;\n    });\n    \n    // Manejar clic en elemento\n    const handleClick = () => {\n      emit('item-click', props.item);\n      \n      if (hasChildren.value) {\n        props.item.expanded = !props.item.expanded;\n      }\n    };\n    \n    // Manejar clic en elemento hijo\n    const handleChildClick = (item) => {\n      emit('item-click', item);\n    };\n    \n    return {\n      hasChildren,\n      isExpanded,\n      handleClick,\n      handleChildClick\n    };\n  }\n};\n</script>\n\n<style scoped>\n.menu-item-wrapper {\n  position: relative;\n}\n\n.menu-item {\n  position: relative;\n}\n\n.nav-link {\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  color: var(--text-primary);\n  text-decoration: none;\n  transition: background-color 0.2s;\n}\n\n.nav-link:hover {\n  background-color: var(--bg-hover);\n}\n\n.nav-link.active {\n  background-color: var(--bg-active);\n  color: var(--primary);\n}\n\n.nav-text {\n  flex: 1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.nav-badge {\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 0.75rem;\n  background-color: var(--primary);\n  color: white;\n  margin-left: 8px;\n}\n\n.expand-arrow {\n  font-size: 0.75rem;\n  transition: transform 0.2s;\n}\n\n.expand-arrow.expanded {\n  transform: rotate(180deg);\n}\n\n.children-wrapper {\n  padding-left: 16px;\n}\n\n.section-title {\n  padding: 16px 16px 8px;\n  font-size: 0.75rem;\n  font-weight: 600;\n  text-transform: uppercase;\n  color: var(--text-secondary);\n  letter-spacing: 0.05em;\n}\n</style> "],"mappings":"AAgDA;;;;;;;;;;;AAWA,SAASA,QAAO,QAAS,KAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,UAAU;EAEhBC,KAAK,EAAE;IACL;;;IAGAC,IAAI,EAAE;MACJC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IAED;;;IAGAC,KAAK,EAAE;MACLH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,KAAK,EAAE,CAAC,YAAY,CAAC;EAErBC,KAAKA,CAACT,KAAK,EAAE;IAAEU;EAAK,CAAC,EAAE;IACrB;IACA,MAAMC,WAAU,GAAIb,QAAQ,CAAC,MAAM;MACjC,OAAOE,KAAK,CAACC,IAAI,CAACW,QAAO,IAAKZ,KAAK,CAACC,IAAI,CAACW,QAAQ,CAACC,MAAK,GAAI,CAAC;IAC9D,CAAC,CAAC;;IAEF;IACA,MAAMC,UAAS,GAAIhB,QAAQ,CAAC,MAAM;MAChC,OAAOE,KAAK,CAACC,IAAI,CAACc,QAAO,IAAK,KAAK;IACrC,CAAC,CAAC;;IAEF;IACA,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxBN,IAAI,CAAC,YAAY,EAAEV,KAAK,CAACC,IAAI,CAAC;MAE9B,IAAIU,WAAW,CAACM,KAAK,EAAE;QACrBjB,KAAK,CAACC,IAAI,CAACc,QAAO,GAAI,CAACf,KAAK,CAACC,IAAI,CAACc,QAAQ;MAC5C;IACF,CAAC;;IAED;IACA,MAAMG,gBAAe,GAAKjB,IAAI,IAAK;MACjCS,IAAI,CAAC,YAAY,EAAET,IAAI,CAAC;IAC1B,CAAC;IAED,OAAO;MACLU,WAAW;MACXG,UAAU;MACVE,WAAW;MACXE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}