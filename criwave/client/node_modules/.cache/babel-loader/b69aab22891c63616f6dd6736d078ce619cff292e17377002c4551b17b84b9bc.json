{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-content\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_app_header = _resolveComponent(\"app-header\");\n  const _component_app_sidebar = _resolveComponent(\"app-sidebar\");\n  const _component_app_dashboard = _resolveComponent(\"app-dashboard\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"app-container\", {\n      'sidebar-open': $data.isSidebarOpen\n    }])\n  }, [_createCommentVNode(\" Header \"), _createVNode(_component_app_header, {\n    onToggleSidebar: $options.toggleSidebar\n  }, null, 8 /* PROPS */, [\"onToggleSidebar\"]), _createCommentVNode(\" Sidebar \"), _createVNode(_component_app_sidebar, {\n    isOpen: $data.isSidebarOpen,\n    onClose: $options.closeSidebar\n  }, null, 8 /* PROPS */, [\"isOpen\", \"onClose\"]), _createCommentVNode(\" Contenido principal \"), _createElementVNode(\"main\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Dashboard como vista principal \"), _createVNode(_component_app_dashboard)])])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$data","isSidebarOpen","_createCommentVNode","_createVNode","_component_app_header","onToggleSidebar","$options","toggleSidebar","_component_app_sidebar","isOpen","onClose","closeSidebar","_createElementVNode","_hoisted_1","_hoisted_2","_component_app_dashboard"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\" :class=\"{ 'sidebar-open': isSidebarOpen }\">\n    <!-- Header -->\n    <app-header @toggle-sidebar=\"toggleSidebar\" />\n    \n    <!-- Sidebar -->\n    <app-sidebar :isOpen=\"isSidebarOpen\" @close=\"closeSidebar\" />\n    \n    <!-- Contenido principal -->\n    <main class=\"main-content\">\n      <div class=\"container\">\n        <!-- Dashboard como vista principal -->\n        <app-dashboard />\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\n/**\n * Componente principal de la aplicación\n * \n * Integra los componentes de header y sidebar,\n * y gestiona el estado del sidebar.\n * \n * @component App\n */\nimport AppHeader from './components/layout/AppHeader.vue';\nimport AppSidebar from './components/layout/AppSidebar.vue';\nimport AppDashboard from './components/dashboard/Dashboard.vue';\nimport { useThemeStore } from './store/theme';\n\nexport default {\n  name: 'App',\n  \n  components: {\n    AppHeader,\n    AppSidebar,\n    AppDashboard\n  },\n  \n  data() {\n    return {\n      isSidebarOpen: false,\n      themeStore: useThemeStore\n    };\n  },\n  \n  methods: {\n    /**\n     * Alterna la visibilidad del sidebar\n     */\n    toggleSidebar() {\n      this.isSidebarOpen = !this.isSidebarOpen;\n    },\n    \n    /**\n     * Cierra el sidebar\n     */\n    closeSidebar() {\n      this.isSidebarOpen = false;\n    },\n    \n    /**\n     * Maneja el cambio de tamaño de la ventana\n     */\n    handleResize() {\n      if (window.innerWidth <= 768 && this.isSidebarOpen) {\n        this.closeSidebar();\n      }\n    }\n  },\n  \n  /**\n   * Inicializa el tema al montar el componente\n   */\n  mounted() {\n    // Inicializar el tema\n    this.themeStore.actions.initTheme();\n    \n    // Cerrar el sidebar al cambiar el tamaño de la ventana\n    window.addEventListener('resize', this.handleResize);\n  },\n  \n  /**\n   * Limpia los event listeners al desmontar el componente\n   */\n  beforeUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n};\n</script>\n\n<style>\n/* Estilos específicos del componente App */\n.app-container {\n  min-height: 100vh;\n  background-color: var(--bg-primary);\n  color: var(--text-primary);\n  display: flex;\n  flex-direction: column;\n  transition: padding-left 0.3s ease;\n}\n\n/* Cuando el sidebar está abierto en pantallas grandes */\n@media (min-width: 769px) {\n  .app-container.sidebar-open {\n    padding-left: 280px; /* Ancho del sidebar */\n  }\n}\n\n/* Contenedor principal */\n.container {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n  width: 100%;\n}\n\n/* Contenido principal */\n.main-content {\n  padding-top: 70px; /* Espacio para el header */\n  min-height: calc(100vh - 70px);\n  flex: 1;\n}\n\n/* Asegurarse de que no haya márgenes o bordes no deseados */\nbody, html {\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden; /* Previene scroll horizontal */\n}\n\n/* Ajustes responsive */\n@media (max-width: 768px) {\n  .main-content {\n    padding-top: 64px; /* Ajustado para el header más pequeño en móviles */\n  }\n  \n  .container {\n    padding: 15px;\n  }\n}\n\n@media (max-width: 576px) {\n  .container {\n    padding: 10px;\n  }\n}\n</style> "],"mappings":";;EASUA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAW;;;;;uBAT1BC,mBAAA,CAcM;IAdDD,KAAK,EADZE,eAAA,EACa,eAAe;MAAA,gBAA2BC,KAAA,CAAAC;IAAa;MAChEC,mBAAA,YAAe,EACfC,YAAA,CAA8CC,qBAAA;IAAjCC,eAAc,EAAEC,QAAA,CAAAC;EAAa,8CAE1CL,mBAAA,aAAgB,EAChBC,YAAA,CAA6DK,sBAAA;IAA/CC,MAAM,EAAET,KAAA,CAAAC,aAAa;IAAGS,OAAK,EAAEJ,QAAA,CAAAK;kDAE7CT,mBAAA,yBAA4B,EAC5BU,mBAAA,CAKO,QALPC,UAKO,GAJLD,mBAAA,CAGM,OAHNE,UAGM,GAFJZ,mBAAA,oCAAuC,EACvCC,YAAA,CAAiBY,wBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}