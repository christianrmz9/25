{"ast":null,"code":"/**\r\n * Componente de barra de búsqueda reutilizable\r\n * \r\n * Emite eventos al escribir para filtrar elementos y proporciona\r\n * funcionalidad para limpiar la búsqueda\r\n * \r\n * @component SearchBar\r\n */\nexport default {\n  name: 'SearchBar',\n  props: {\n    /**\r\n     * Texto del placeholder\r\n     */\n    placeholder: {\n      type: String,\n      default: 'Buscar...'\n    },\n    /**\r\n     * Retraso de búsqueda en ms (para debounce)\r\n     */\n    debounce: {\n      type: Number,\n      default: 300\n    }\n  },\n  data() {\n    return {\n      searchQuery: '',\n      debounceTimeout: null\n    };\n  },\n  methods: {\n    /**\r\n     * Maneja el evento de entrada de búsqueda\r\n     * con debounce para evitar múltiples llamadas\r\n     */\n    onSearch() {\n      clearTimeout(this.debounceTimeout);\n      this.debounceTimeout = setTimeout(() => {\n        this.$emit('search', this.searchQuery);\n      }, this.debounce);\n    },\n    /**\r\n     * Limpia la búsqueda actual\r\n     */\n    clearSearch() {\n      this.searchQuery = '';\n      this.$emit('search', '');\n      this.$refs.searchInput.focus();\n    },\n    /**\r\n     * Establece el foco en el campo de búsqueda\r\n     */\n    focus() {\n      this.$refs.searchInput.focus();\n    }\n  }\n};","map":{"version":3,"names":["name","props","placeholder","type","String","default","debounce","Number","data","searchQuery","debounceTimeout","methods","onSearch","clearTimeout","setTimeout","$emit","clearSearch","$refs","searchInput","focus"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\ui\\SearchBar.vue"],"sourcesContent":["<template>\r\n  <div class=\"search-bar\">\r\n    <input \r\n      type=\"text\" \r\n      v-model=\"searchQuery\" \r\n      :placeholder=\"placeholder\" \r\n      class=\"search-input\"\r\n      @input=\"onSearch\"\r\n      @keyup.esc=\"clearSearch\"\r\n      ref=\"searchInput\"\r\n    />\r\n    <span v-if=\"searchQuery\" class=\"clear-search\" @click=\"clearSearch\">×</span>\r\n    <span v-else class=\"search-icon\">⌕</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Componente de barra de búsqueda reutilizable\r\n * \r\n * Emite eventos al escribir para filtrar elementos y proporciona\r\n * funcionalidad para limpiar la búsqueda\r\n * \r\n * @component SearchBar\r\n */\r\nexport default {\r\n  name: 'SearchBar',\r\n  \r\n  props: {\r\n    /**\r\n     * Texto del placeholder\r\n     */\r\n    placeholder: {\r\n      type: String,\r\n      default: 'Buscar...'\r\n    },\r\n    \r\n    /**\r\n     * Retraso de búsqueda en ms (para debounce)\r\n     */\r\n    debounce: {\r\n      type: Number,\r\n      default: 300\r\n    }\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      debounceTimeout: null\r\n    };\r\n  },\r\n  \r\n  methods: {\r\n    /**\r\n     * Maneja el evento de entrada de búsqueda\r\n     * con debounce para evitar múltiples llamadas\r\n     */\r\n    onSearch() {\r\n      clearTimeout(this.debounceTimeout);\r\n      this.debounceTimeout = setTimeout(() => {\r\n        this.$emit('search', this.searchQuery);\r\n      }, this.debounce);\r\n    },\r\n    \r\n    /**\r\n     * Limpia la búsqueda actual\r\n     */\r\n    clearSearch() {\r\n      this.searchQuery = '';\r\n      this.$emit('search', '');\r\n      this.$refs.searchInput.focus();\r\n    },\r\n    \r\n    /**\r\n     * Establece el foco en el campo de búsqueda\r\n     */\r\n    focus() {\r\n      this.$refs.searchInput.focus();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.search-bar {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 14px 10px 34px;\r\n  border-radius: 6px;\r\n  border: none;\r\n  background-color: var(--search-bg);\r\n  color: var(--search-text);\r\n  font-size: 0.95rem;\r\n  transition: all 0.2s ease;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-input::placeholder {\r\n  color: var(--search-placeholder);\r\n}\r\n\r\n.search-input:focus {\r\n  outline: none;\r\n  background-color: var(--bg-primary);\r\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.search-icon,\r\n.clear-search {\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: var(--text-secondary);\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.clear-search {\r\n  left: auto;\r\n  right: 10px;\r\n  cursor: pointer;\r\n  font-size: 1.4rem;\r\n  opacity: 0.7;\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.clear-search:hover {\r\n  opacity: 1;\r\n}\r\n</style> "],"mappings":"AAiBA;;;;;;;;AAQA,eAAe;EACbA,IAAI,EAAE,WAAW;EAEjBC,KAAK,EAAE;IACL;;;IAGAC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IAED;;;IAGAC,QAAQ,EAAE;MACRH,IAAI,EAAEI,MAAM;MACZF,OAAO,EAAE;IACX;EACF,CAAC;EAEDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP;;;;IAIAC,QAAQA,CAAA,EAAG;MACTC,YAAY,CAAC,IAAI,CAACH,eAAe,CAAC;MAClC,IAAI,CAACA,eAAc,GAAII,UAAU,CAAC,MAAM;QACtC,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACN,WAAW,CAAC;MACxC,CAAC,EAAE,IAAI,CAACH,QAAQ,CAAC;IACnB,CAAC;IAED;;;IAGAU,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACP,WAAU,GAAI,EAAE;MACrB,IAAI,CAACM,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC;MACxB,IAAI,CAACE,KAAK,CAACC,WAAW,CAACC,KAAK,CAAC,CAAC;IAChC,CAAC;IAED;;;IAGAA,KAAKA,CAAA,EAAG;MACN,IAAI,CAACF,KAAK,CAACC,WAAW,CAACC,KAAK,CAAC,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}