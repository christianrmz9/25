{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineComponent } from 'vue';\nimport VueApexCharts from 'vue3-apexcharts';\nexport default defineComponent({\n  name: 'RevenueChart',\n  components: {\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      selectedPeriod: 'month',\n      showComparison: true,\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ingresos',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: this.isDarkMode ? '#000000' : '#fff',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        plotOptions: {\n          area: {\n            fillTo: 'origin'\n          }\n        },\n        colors: ['#2E93fA', '#66DA26'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back',\n          padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          },\n          xaxis: {\n            lines: {\n              show: true\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true\n            }\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#999' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666'\n            },\n            formatter: function (value) {\n              return value >= 1000000 ? `$${(value / 1000000).toFixed(1)}M` : value >= 1000 ? `$${(value / 1000).toFixed(1)}K` : `$${value}`;\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        },\n        theme: {\n          mode: this.isDarkMode ? 'dark' : 'light',\n          palette: 'palette1'\n        }\n      }\n    };\n  },\n  created() {\n    // Detectar el modo oscuro inicial\n    this.checkDarkMode();\n    // Escuchar cambios en el modo oscuro\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode);\n  },\n  mounted() {\n    // Cargar datos iniciales con comparación\n    this.loadData(this.selectedPeriod);\n  },\n  beforeUnmount() {\n    // Limpiar el listener cuando el componente se destruye\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode);\n  },\n  watch: {\n    selectedPeriod: {\n      handler(newPeriod) {\n        this.loadData(newPeriod);\n      },\n      immediate: false // Cambiado a false porque ya lo manejamos en mounted\n    },\n    showComparison(newValue) {\n      if (newValue) {\n        this.loadComparisonData();\n      } else {\n        this.series = this.series.slice(0, 1);\n      }\n    }\n  },\n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme');\n      this.updateChartTheme();\n    },\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement);\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim();\n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: this.isDarkMode ? '#999' : '#666'\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1'\n        },\n        colors: ['#2E93fA', '#66DA26'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#999' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666'\n            },\n            formatter: function (value) {\n              return value >= 1000000 ? `$${(value / 1000000).toFixed(1)}M` : value >= 1000 ? `$${(value / 1000).toFixed(1)}K` : `$${value}`;\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        },\n        theme: {\n          ...this.chartOptions.theme,\n          mode: this.isDarkMode ? 'dark' : 'light'\n        }\n      };\n    },\n    async loadData(period) {\n      this.isLoading = true;\n      try {\n        // Aquí iría la llamada a tu API\n        // Por ahora usamos datos de ejemplo\n        const data = this.generateMockData(period);\n        this.series = [{\n          name: 'Ingresos',\n          data: data\n        }];\n\n        // Siempre cargar los datos de comparación si showComparison es true\n        if (this.showComparison) {\n          const comparisonData = this.generateMockComparisonData(period);\n          this.series.push({\n            name: 'Período anterior',\n            data: comparisonData\n          });\n        }\n      } catch (error) {\n        console.error('Error loading revenue data:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async loadComparisonData() {\n      try {\n        const comparisonData = this.generateMockComparisonData(this.selectedPeriod);\n        if (this.series.length > 1) {\n          this.series[1] = {\n            name: 'Período anterior',\n            data: comparisonData\n          };\n        } else {\n          this.series.push({\n            name: 'Período anterior',\n            data: comparisonData\n          });\n        }\n      } catch (error) {\n        console.error('Error loading comparison data:', error);\n      }\n    },\n    generateMockData(period) {\n      const now = new Date();\n      const data = [];\n      let points = 0;\n      switch (period) {\n        case 'day':\n          points = 24;\n          for (let i = 0; i < points; i++) {\n            data.push([now.setHours(i, 0, 0), Math.floor(Math.random() * 50000) + 10000]);\n          }\n          break;\n        case 'week':\n          points = 7;\n          for (let i = 0; i < points; i++) {\n            data.push([now.setDate(now.getDate() - 1), Math.floor(Math.random() * 200000) + 50000]);\n          }\n          break;\n        case 'month':\n          points = 30;\n          for (let i = 0; i < points; i++) {\n            data.push([now.setDate(now.getDate() - 1), Math.floor(Math.random() * 500000) + 100000]);\n          }\n          break;\n        case 'year':\n          points = 12;\n          for (let i = 0; i < points; i++) {\n            data.push([now.setMonth(now.getMonth() - 1), Math.floor(Math.random() * 2000000) + 500000]);\n          }\n          break;\n      }\n      return data.reverse();\n    },\n    generateMockComparisonData(period) {\n      return this.generateMockData(period).map(([date, value]) => {\n        const prevDate = new Date(date);\n        switch (period) {\n          case 'day':\n            prevDate.setDate(prevDate.getDate() - 1);\n            break;\n          case 'week':\n            prevDate.setDate(prevDate.getDate() - 7);\n            break;\n          case 'month':\n            prevDate.setMonth(prevDate.getMonth() - 1);\n            break;\n          case 'year':\n            prevDate.setFullYear(prevDate.getFullYear() - 1);\n            break;\n        }\n        return [prevDate.getTime(), Math.floor(value * 0.8 + Math.random() * value * 0.4)];\n      });\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","VueApexCharts","name","components","apexchart","data","selectedPeriod","showComparison","isLoading","isDarkMode","series","chartOptions","chart","type","height","background","foreColor","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","plotOptions","area","fillTo","colors","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","curve","width","grid","borderColor","strokeDashArray","position","padding","top","right","bottom","left","xaxis","lines","yaxis","markers","size","strokeColors","strokeWidth","hover","labels","style","fontSize","axisBorder","axisTicks","crosshairs","color","dashArray","title","text","formatter","value","toFixed","tooltip","theme","shared","intersect","y","Intl","NumberFormat","currency","format","mode","palette","created","checkDarkMode","window","matchMedia","addEventListener","mounted","loadData","beforeUnmount","removeEventListener","watch","handler","newPeriod","immediate","newValue","loadComparisonData","slice","methods","document","documentElement","classList","contains","updateChartTheme","getComputedStyle","bgSecondary","getPropertyValue","trim","period","generateMockData","comparisonData","generateMockComparisonData","push","error","console","length","now","Date","points","i","setHours","Math","floor","random","setDate","getDate","setMonth","getMonth","reverse","map","date","prevDate","setFullYear","getFullYear","getTime"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\RevenueChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"revenue-chart\">\r\n    <div class=\"chart-header\">\r\n        <h2 class=\"chart-title\">Total Ingresos</h2>\r\n      <div class=\"chart-controls\">\r\n      <div class=\"period-selector\">\r\n          <select v-model=\"selectedPeriod\" class=\"period-select\">\r\n            <option value=\"day\">Hoy</option>\r\n            <option value=\"week\">Esta semana</option>\r\n            <option value=\"month\">Este mes</option>\r\n            <option value=\"year\">Este año</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"comparison-toggle\">\r\n          <label class=\"switch\">\r\n            <input type=\"checkbox\" v-model=\"showComparison\">\r\n            <span class=\"slider\"></span>\r\n          </label>\r\n          <span class=\"toggle-label\">Comparar con período anterior</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"chart-container\">\r\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\r\n        <div class=\"loading-spinner\"></div>\r\n          </div>\r\n      <apexchart\r\n        type=\"area\"\r\n        height=\"350\"\r\n        :options=\"chartOptions\"\r\n        :series=\"series\"\r\n      ></apexchart>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport VueApexCharts from 'vue3-apexcharts'\r\n\r\nexport default defineComponent({\r\n  name: 'RevenueChart',\r\n  components: {\r\n    apexchart: VueApexCharts\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      selectedPeriod: 'month',\r\n      showComparison: true,\r\n      isLoading: false,\r\n      isDarkMode: false,\r\n      series: [{\r\n        name: 'Ingresos',\r\n        data: []\r\n      }],\r\n      chartOptions: {\r\n        chart: {\r\n          type: 'area',\r\n          height: 350,\r\n          background: this.isDarkMode ? '#000000' : '#fff',\r\n          foreColor: '#666',\r\n          toolbar: {\r\n            show: true,\r\n            tools: {\r\n              download: true,\r\n              selection: true,\r\n              zoom: true,\r\n              zoomin: true,\r\n              zoomout: true,\r\n              pan: true,\r\n              reset: true\r\n            }\r\n          },\r\n          animations: {\r\n            enabled: true,\r\n            easing: 'easeinout',\r\n            speed: 800,\r\n            animateGradually: {\r\n              enabled: true,\r\n              delay: 150\r\n            },\r\n            dynamicAnimation: {\r\n              enabled: true,\r\n              speed: 350\r\n            }\r\n          }\r\n        },\r\n        plotOptions: {\r\n          area: {\r\n            fillTo: 'origin'\r\n          }\r\n        },\r\n        colors: ['#2E93fA', '#66DA26'],\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            opacityFrom: 0.45,\r\n            opacityTo: 0.05,\r\n            stops: [0, 95, 100]\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n          width: 2\r\n        },\r\n        grid: {\r\n          show: true,\r\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1',\r\n          strokeDashArray: 3,\r\n          position: 'back',\r\n          padding: {\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            left: 0\r\n          },\r\n          xaxis: {\r\n            lines: {\r\n              show: true\r\n            }\r\n          },\r\n          yaxis: {\r\n            lines: {\r\n              show: true\r\n            }\r\n          }\r\n        },\r\n        markers: {\r\n          size: 4,\r\n          colors: ['#2E93fA'],\r\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\r\n          strokeWidth: 2,\r\n          hover: {\r\n            size: 7\r\n          }\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          labels: {\r\n            style: {\r\n              colors: this.isDarkMode ? '#999' : '#666',\r\n              fontSize: '12px'\r\n            }\r\n          },\r\n          axisBorder: {\r\n            show: false\r\n          },\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n          crosshairs: {\r\n            show: true,\r\n            stroke: {\r\n              color: '#666',\r\n              width: 1,\r\n              dashArray: 3\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Ingresos ($)',\r\n            style: {\r\n              fontSize: '14px',\r\n              color: this.isDarkMode ? '#999' : '#666'\r\n            }\r\n          },\r\n          labels: {\r\n            style: {\r\n              colors: this.isDarkMode ? '#999' : '#666'\r\n            },\r\n            formatter: function(value) {\r\n              return value >= 1000000 \r\n                ? `$${(value/1000000).toFixed(1)}M` \r\n                : value >= 1000 \r\n                  ? `$${(value/1000).toFixed(1)}K` \r\n                  : `$${value}`\r\n            }\r\n          }\r\n        },\r\n        tooltip: {\r\n          theme: this.isDarkMode ? 'dark' : 'light',\r\n          shared: true,\r\n          intersect: false,\r\n          y: {\r\n            formatter: function(value) {\r\n              return new Intl.NumberFormat('es-MX', {\r\n                style: 'currency',\r\n                currency: 'MXN'\r\n              }).format(value)\r\n            }\r\n          }\r\n        },\r\n        theme: {\r\n          mode: this.isDarkMode ? 'dark' : 'light',\r\n          palette: 'palette1'\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    // Detectar el modo oscuro inicial\r\n    this.checkDarkMode()\r\n    // Escuchar cambios en el modo oscuro\r\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode)\r\n  },\r\n\r\n  mounted() {\r\n    // Cargar datos iniciales con comparación\r\n    this.loadData(this.selectedPeriod)\r\n  },\r\n\r\n  beforeUnmount() {\r\n    // Limpiar el listener cuando el componente se destruye\r\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode)\r\n  },\r\n\r\n  watch: {\r\n    selectedPeriod: {\r\n      handler(newPeriod) {\r\n        this.loadData(newPeriod)\r\n      },\r\n      immediate: false // Cambiado a false porque ya lo manejamos en mounted\r\n    },\r\n    showComparison(newValue) {\r\n      if (newValue) {\r\n        this.loadComparisonData()\r\n      } else {\r\n        this.series = this.series.slice(0, 1)\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    checkDarkMode() {\r\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme')\r\n      this.updateChartTheme()\r\n    },\r\n\r\n    updateChartTheme() {\r\n      const style = getComputedStyle(document.documentElement)\r\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim()\r\n      \r\n      this.chartOptions = {\r\n        ...this.chartOptions,\r\n        chart: {\r\n          ...this.chartOptions.chart,\r\n          background: bgSecondary,\r\n          foreColor: this.isDarkMode ? '#999' : '#666'\r\n        },\r\n        grid: {\r\n          ...this.chartOptions.grid,\r\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1'\r\n        },\r\n        colors: ['#2E93fA', '#66DA26'],\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            opacityFrom: 0.45,\r\n            opacityTo: 0.05,\r\n            stops: [0, 95, 100]\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n          width: 2\r\n        },\r\n        markers: {\r\n          size: 4,\r\n          colors: ['#2E93fA'],\r\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\r\n          strokeWidth: 2,\r\n          hover: {\r\n            size: 7\r\n          }\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          labels: {\r\n            style: {\r\n              colors: this.isDarkMode ? '#999' : '#666',\r\n              fontSize: '12px'\r\n            }\r\n          },\r\n          axisBorder: {\r\n            show: false\r\n          },\r\n          axisTicks: {\r\n            show: false\r\n          },\r\n          crosshairs: {\r\n            show: true,\r\n            stroke: {\r\n              color: '#666',\r\n              width: 1,\r\n              dashArray: 3\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Ingresos ($)',\r\n            style: {\r\n              fontSize: '14px',\r\n              color: this.isDarkMode ? '#999' : '#666'\r\n            }\r\n          },\r\n          labels: {\r\n            style: {\r\n              colors: this.isDarkMode ? '#999' : '#666'\r\n            },\r\n            formatter: function(value) {\r\n              return value >= 1000000 \r\n                ? `$${(value/1000000).toFixed(1)}M` \r\n                : value >= 1000 \r\n                  ? `$${(value/1000).toFixed(1)}K` \r\n                  : `$${value}`\r\n            }\r\n          }\r\n        },\r\n        tooltip: {\r\n          theme: this.isDarkMode ? 'dark' : 'light',\r\n          shared: true,\r\n          intersect: false,\r\n          y: {\r\n            formatter: function(value) {\r\n              return new Intl.NumberFormat('es-MX', {\r\n                style: 'currency',\r\n                currency: 'MXN'\r\n              }).format(value)\r\n            }\r\n          }\r\n        },\r\n        theme: {\r\n          ...this.chartOptions.theme,\r\n          mode: this.isDarkMode ? 'dark' : 'light'\r\n        }\r\n      }\r\n    },\r\n\r\n    async loadData(period) {\r\n      this.isLoading = true\r\n      try {\r\n        // Aquí iría la llamada a tu API\r\n        // Por ahora usamos datos de ejemplo\r\n        const data = this.generateMockData(period)\r\n        this.series = [{\r\n          name: 'Ingresos',\r\n          data: data\r\n        }]\r\n        \r\n        // Siempre cargar los datos de comparación si showComparison es true\r\n        if (this.showComparison) {\r\n          const comparisonData = this.generateMockComparisonData(period)\r\n          this.series.push({\r\n            name: 'Período anterior',\r\n            data: comparisonData\r\n          })\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading revenue data:', error)\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n\r\n    async loadComparisonData() {\r\n      try {\r\n        const comparisonData = this.generateMockComparisonData(this.selectedPeriod)\r\n        if (this.series.length > 1) {\r\n          this.series[1] = {\r\n            name: 'Período anterior',\r\n            data: comparisonData\r\n          }\r\n        } else {\r\n          this.series.push({\r\n            name: 'Período anterior',\r\n            data: comparisonData\r\n          })\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading comparison data:', error)\r\n      }\r\n    },\r\n\r\n    generateMockData(period) {\r\n      const now = new Date()\r\n      const data = []\r\n      let points = 0\r\n      \r\n      switch(period) {\r\n        case 'day':\r\n          points = 24\r\n          for (let i = 0; i < points; i++) {\r\n            data.push([\r\n              now.setHours(i, 0, 0),\r\n              Math.floor(Math.random() * 50000) + 10000\r\n            ])\r\n          }\r\n          break\r\n        case 'week':\r\n          points = 7\r\n          for (let i = 0; i < points; i++) {\r\n            data.push([\r\n              now.setDate(now.getDate() - 1),\r\n              Math.floor(Math.random() * 200000) + 50000\r\n            ])\r\n          }\r\n          break\r\n        case 'month':\r\n          points = 30\r\n          for (let i = 0; i < points; i++) {\r\n            data.push([\r\n              now.setDate(now.getDate() - 1),\r\n              Math.floor(Math.random() * 500000) + 100000\r\n            ])\r\n          }\r\n          break\r\n        case 'year':\r\n          points = 12\r\n          for (let i = 0; i < points; i++) {\r\n            data.push([\r\n              now.setMonth(now.getMonth() - 1),\r\n              Math.floor(Math.random() * 2000000) + 500000\r\n            ])\r\n          }\r\n          break\r\n      }\r\n      \r\n      return data.reverse()\r\n    },\r\n\r\n    generateMockComparisonData(period) {\r\n      return this.generateMockData(period).map(([date, value]) => {\r\n        const prevDate = new Date(date)\r\n        switch(period) {\r\n          case 'day':\r\n            prevDate.setDate(prevDate.getDate() - 1)\r\n            break\r\n          case 'week':\r\n            prevDate.setDate(prevDate.getDate() - 7)\r\n            break\r\n          case 'month':\r\n            prevDate.setMonth(prevDate.getMonth() - 1)\r\n            break\r\n          case 'year':\r\n            prevDate.setFullYear(prevDate.getFullYear() - 1)\r\n            break\r\n        }\r\n        return [prevDate.getTime(), Math.floor(value * 0.8 + Math.random() * value * 0.4)]\r\n      })\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.revenue-chart {\r\n  background: var(--bg-secondary);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: \r\n    0 2px 4px rgba(0, 0, 0, 0.05),\r\n    0 4px 8px rgba(0, 0, 0, 0.05),\r\n    inset 0 -1px 0 rgba(0, 0, 0, 0.1),\r\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\r\n  transform: translateY(0);\r\n  transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\r\n  position: relative;\r\n  background-image: linear-gradient(\r\n    to bottom,\r\n    rgba(255, 255, 255, 0.1) 0%,\r\n    rgba(255, 255, 255, 0) 20%\r\n  );\r\n}\r\n\r\n/* Efecto de elevación al pasar el mouse */\r\n.revenue-chart:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: \r\n    0 5px 10px rgba(0, 0, 0, 0.1),\r\n    0 10px 20px rgba(0, 0, 0, 0.1),\r\n    0 20px 40px rgba(0, 0, 0, 0.05),\r\n    inset 0 -2px 0 rgba(0, 0, 0, 0.1),\r\n    inset 0 2px 0 rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n/* Efecto de presión al hacer clic */\r\n.revenue-chart:active {\r\n  transform: translateY(-2px);\r\n  box-shadow: \r\n    0 2px 5px rgba(0, 0, 0, 0.1),\r\n    0 5px 10px rgba(0, 0, 0, 0.05),\r\n    inset 0 -1px 0 rgba(0, 0, 0, 0.1),\r\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\r\n  transition: all 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);\r\n}\r\n\r\n/* Añadir un pseudo-elemento para el efecto de brillo en el borde */\r\n.revenue-chart::before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 1px;\r\n  background: linear-gradient(\r\n    to right,\r\n    rgba(255, 255, 255, 0) 0%,\r\n    rgba(255, 255, 255, 0.5) 50%,\r\n    rgba(255, 255, 255, 0) 100%\r\n  );\r\n  border-top-left-radius: 12px;\r\n  border-top-right-radius: 12px;\r\n}\r\n\r\n/* Añadir un pseudo-elemento para el efecto de sombra en el borde inferior */\r\n.revenue-chart::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 1px;\r\n  background: linear-gradient(\r\n    to right,\r\n    rgba(0, 0, 0, 0) 0%,\r\n    rgba(0, 0, 0, 0.2) 50%,\r\n    rgba(0, 0, 0, 0) 100%\r\n  );\r\n  border-bottom-left-radius: 12px;\r\n  border-bottom-right-radius: 12px;\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: var(--text-primary);\r\n  margin: 0;\r\n}\r\n\r\n.chart-controls {\r\n  display: flex;\r\n  gap: 20px;\r\n  align-items: center;\r\n}\r\n\r\n.period-select {\r\n  padding: 8px 12px;\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 6px;\r\n  background: var(--bg-secondary);\r\n  color: var(--text-primary);\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.period-select:hover {\r\n  border-color: var(--border-hover);\r\n}\r\n\r\n.switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 24px;\r\n}\r\n\r\n.switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n.slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: var(--bg-tertiary);\r\n  transition: .4s;\r\n  border-radius: 24px;\r\n}\r\n\r\n.slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 16px;\r\n  width: 16px;\r\n  left: 4px;\r\n  bottom: 4px;\r\n  background-color: var(--bg-primary);\r\n  transition: .4s;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput:checked + .slider {\r\n  background-color: #2E93fA;\r\n}\r\n\r\ninput:checked + .slider:before {\r\n  transform: translateX(26px);\r\n}\r\n\r\n.toggle-label {\r\n  margin-left: 10px;\r\n  color: var(--text-secondary);\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.chart-container {\r\n  position: relative;\r\n  min-height: 350px;\r\n  background: var(--bg-primary);\r\n}\r\n\r\n.loading-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: var(--bg-overlay);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid var(--spinner-track);\r\n  border-top-color: var(--spinner-color);\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .chart-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 15px;\r\n  }\r\n\r\n  .chart-controls {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n\r\n  .period-select {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n:deep(.apexcharts-canvas) {\r\n  background: var(--bg-secondary) !important;\r\n}\r\n\r\n:deep(.apexcharts-svg) {\r\n  background: var(--bg-secondary) !important;\r\n}\r\n\r\n:deep(.apexcharts-plot-area) {\r\n  fill: var(--bg-secondary) !important;\r\n}\r\n\r\n:deep(.apexcharts-grid) {\r\n  background: var(--bg-secondary) !important;\r\n}\r\n\r\n:deep(.apexcharts-gridlines-horizontal),\r\n:deep(.apexcharts-gridlines-vertical) {\r\n  stroke: var(--border-color) !important;\r\n}\r\n\r\n:deep(.apexcharts-plot-background) {\r\n  fill: var(--bg-secondary) !important;\r\n}\r\n\r\n:deep(.apexcharts-inner) {\r\n  background: var(--bg-secondary) !important;\r\n}\r\n\r\n:deep(.apexcharts-area-series) path {\r\n  fill-opacity: 0.5;\r\n}\r\n\r\n:deep(.apexcharts-tooltip) {\r\n  background: var(--bg-secondary) !important;\r\n  border: 1px solid var(--border-color) !important;\r\n}\r\n\r\n:deep(.apexcharts-tooltip-title) {\r\n  background: var(--bg-tertiary) !important;\r\n  border-bottom: 1px solid var(--border-color) !important;\r\n}\r\n\r\n:deep(.apexcharts-xaxistooltip) {\r\n  background: var(--bg-secondary) !important;\r\n  border: 1px solid var(--border-color) !important;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}