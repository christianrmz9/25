{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent } from 'vue';\nimport VueApexCharts from 'vue3-apexcharts';\nexport default defineComponent({\n  name: 'RevenueChart',\n  components: {\n    apexchart: VueApexCharts\n  },\n  data() {\n    const today = new Date();\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(today.getDate() - 30);\n    return {\n      startDate: thirtyDaysAgo.toISOString().split('T')[0],\n      endDate: today.toISOString().split('T')[0],\n      today: today.toISOString().split('T')[0],\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ingresos',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: this.isDarkMode ? '#000000' : '#fff',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        plotOptions: {\n          area: {\n            fillTo: 'origin'\n          }\n        },\n        colors: ['#2E93fA'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back',\n          padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          },\n          xaxis: {\n            lines: {\n              show: true\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true\n            }\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\n            },\n            formatter: function (value) {\n              return value >= 1000000 ? `$${(value / 1000000).toFixed(1)}M` : value >= 1000 ? `$${(value / 1000).toFixed(1)}K` : `$${value}`;\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        },\n        theme: {\n          mode: this.isDarkMode ? 'dark' : 'light',\n          palette: 'palette1'\n        }\n      }\n    };\n  },\n  created() {\n    // Detectar el modo oscuro inicial\n    this.checkDarkMode();\n    // Escuchar cambios en el modo oscuro\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode);\n  },\n  mounted() {\n    // Cargar datos iniciales con comparación\n    this.loadData();\n  },\n  beforeUnmount() {\n    // Limpiar el listener cuando el componente se destruye\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode);\n  },\n  watch: {\n    startDate: {\n      handler() {\n        this.loadData();\n      }\n    },\n    endDate: {\n      handler() {\n        this.loadData();\n      }\n    }\n  },\n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme');\n      this.updateChartTheme();\n    },\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement);\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim();\n      const textSecondary = style.getPropertyValue('--text-secondary').trim();\n      const borderColor = style.getPropertyValue('--border-color').trim();\n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: textSecondary\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: borderColor\n        },\n        colors: ['#2E93fA'],\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: bgSecondary,\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          ...this.chartOptions.xaxis,\n          labels: {\n            style: {\n              colors: textSecondary,\n              fontSize: '12px'\n            }\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: borderColor,\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          ...this.chartOptions.yaxis,\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: textSecondary\n            }\n          },\n          labels: {\n            style: {\n              colors: textSecondary\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          style: {\n            fontSize: '12px'\n          },\n          y: {\n            formatter: function (value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value);\n            }\n          }\n        }\n      };\n    },\n    async loadData() {\n      this.isLoading = true;\n      try {\n        // Convertir fechas a objetos Date\n        const start = new Date(this.startDate);\n        const end = new Date(this.endDate);\n        const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24));\n\n        // Generar datos para el rango seleccionado\n        const data = [];\n        let currentValue = Math.floor(Math.random() * 500000) + 100000; // Valor inicial\n\n        for (let i = 0; i <= diffDays; i++) {\n          const date = new Date(start);\n          date.setDate(start.getDate() + i);\n\n          // Generar variación aleatoria entre -10% y +10%\n          const variation = Math.random() * 0.2 - 0.1;\n          currentValue = Math.floor(currentValue * (1 + variation));\n\n          // Asegurar que el valor no sea negativo\n          currentValue = Math.max(currentValue, 100000);\n          data.push([date.getTime(), currentValue]);\n        }\n\n        // Actualizar las series con los datos\n        this.series = [{\n          name: 'Ingresos',\n          data: data\n        }];\n      } catch (error) {\n        console.error('Error loading revenue data:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    onDateChange() {\n      // Validar que las fechas sean válidas\n      if (!this.startDate || !this.endDate) {\n        return;\n      }\n      const start = new Date(this.startDate);\n      const end = new Date(this.endDate);\n      const today = new Date();\n\n      // Validar que la fecha de inicio no sea posterior a la fecha final\n      if (start > end) {\n        this.startDate = this.endDate;\n        return;\n      }\n\n      // Validar que la fecha final no sea posterior a hoy\n      if (end > today) {\n        this.endDate = today.toISOString().split('T')[0];\n        return;\n      }\n\n      // Validar que el rango no sea mayor a 365 días\n      const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24));\n      if (diffDays > 365) {\n        this.endDate = new Date(start.getTime() + 365 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n      }\n      this.loadData();\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","VueApexCharts","name","components","apexchart","data","today","Date","thirtyDaysAgo","setDate","getDate","startDate","toISOString","split","endDate","isLoading","isDarkMode","series","chartOptions","chart","type","height","background","foreColor","toolbar","show","tools","download","selection","zoom","zoomin","zoomout","pan","reset","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","plotOptions","area","fillTo","colors","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","curve","width","grid","borderColor","strokeDashArray","position","padding","top","right","bottom","left","xaxis","lines","yaxis","markers","size","strokeColors","strokeWidth","hover","labels","style","fontSize","axisBorder","axisTicks","crosshairs","color","dashArray","title","text","formatter","value","toFixed","tooltip","theme","shared","intersect","y","Intl","NumberFormat","currency","format","mode","palette","created","checkDarkMode","window","matchMedia","addEventListener","mounted","loadData","beforeUnmount","removeEventListener","watch","handler","methods","document","documentElement","classList","contains","updateChartTheme","getComputedStyle","bgSecondary","getPropertyValue","trim","textSecondary","start","end","diffDays","Math","ceil","currentValue","floor","random","i","date","variation","max","push","getTime","error","console","onDateChange"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\RevenueChart.vue"],"sourcesContent":["<template>\n  <div class=\"revenue-chart\">\n    <div class=\"chart-header\">\n      <h3>Ingresos</h3>\n    </div>\n      \n    <div class=\"chart-container\">\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-spinner\"></div>\n              </div>\n      <apexchart\n        type=\"area\"\n        height=\"350\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n      ></apexchart>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport VueApexCharts from 'vue3-apexcharts'\n\nexport default defineComponent({\n  name: 'RevenueChart',\n  components: {\n    apexchart: VueApexCharts\n  },\n  \n  data() {\n    const today = new Date()\n    const thirtyDaysAgo = new Date()\n    thirtyDaysAgo.setDate(today.getDate() - 30)\n    \n    return {\n      startDate: thirtyDaysAgo.toISOString().split('T')[0],\n      endDate: today.toISOString().split('T')[0],\n      today: today.toISOString().split('T')[0],\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ingresos',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: this.isDarkMode ? '#000000' : '#fff',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        plotOptions: {\n          area: {\n            fillTo: 'origin'\n          }\n        },\n        colors: ['#2E93fA'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back',\n          padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          },\n          xaxis: {\n            lines: {\n              show: true\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true\n            }\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\n            },\n            formatter: function(value) {\n              return value >= 1000000 \n                ? `$${(value/1000000).toFixed(1)}M` \n                : value >= 1000 \n                  ? `$${(value/1000).toFixed(1)}K` \n                  : `$${value}`\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        },\n        theme: {\n          mode: this.isDarkMode ? 'dark' : 'light',\n          palette: 'palette1'\n        }\n      }\n    }\n  },\n\n  created() {\n    // Detectar el modo oscuro inicial\n    this.checkDarkMode()\n    // Escuchar cambios en el modo oscuro\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode)\n  },\n  \n  mounted() {\n    // Cargar datos iniciales con comparación\n    this.loadData()\n  },\n  \n  beforeUnmount() {\n    // Limpiar el listener cuando el componente se destruye\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode)\n  },\n  \n  watch: {\n    startDate: {\n      handler() {\n        this.loadData()\n      }\n    },\n    endDate: {\n      handler() {\n        this.loadData()\n      }\n    }\n  },\n  \n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme')\n      this.updateChartTheme()\n    },\n\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement)\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim()\n      const textSecondary = style.getPropertyValue('--text-secondary').trim()\n      const borderColor = style.getPropertyValue('--border-color').trim()\n      \n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: textSecondary\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: borderColor\n        },\n        colors: ['#2E93fA'],\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: bgSecondary,\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          ...this.chartOptions.xaxis,\n          labels: {\n            style: {\n              colors: textSecondary,\n              fontSize: '12px'\n            }\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: borderColor,\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          ...this.chartOptions.yaxis,\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: textSecondary\n            }\n          },\n          labels: {\n            style: {\n              colors: textSecondary\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          style: {\n            fontSize: '12px'\n          },\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        }\n      }\n    },\n\n    async loadData() {\n      this.isLoading = true\n      try {\n        // Convertir fechas a objetos Date\n        const start = new Date(this.startDate)\n        const end = new Date(this.endDate)\n        const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24))\n        \n        // Generar datos para el rango seleccionado\n        const data = []\n        let currentValue = Math.floor(Math.random() * 500000) + 100000 // Valor inicial\n        \n        for (let i = 0; i <= diffDays; i++) {\n          const date = new Date(start)\n          date.setDate(start.getDate() + i)\n          \n          // Generar variación aleatoria entre -10% y +10%\n          const variation = (Math.random() * 0.2) - 0.1\n          currentValue = Math.floor(currentValue * (1 + variation))\n          \n          // Asegurar que el valor no sea negativo\n          currentValue = Math.max(currentValue, 100000)\n          \n          data.push([\n            date.getTime(),\n            currentValue\n          ])\n        }\n        \n        // Actualizar las series con los datos\n        this.series = [{\n          name: 'Ingresos',\n          data: data\n        }]\n      } catch (error) {\n        console.error('Error loading revenue data:', error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    onDateChange() {\n      // Validar que las fechas sean válidas\n      if (!this.startDate || !this.endDate) {\n        return\n      }\n\n      const start = new Date(this.startDate)\n      const end = new Date(this.endDate)\n      const today = new Date()\n\n      // Validar que la fecha de inicio no sea posterior a la fecha final\n      if (start > end) {\n        this.startDate = this.endDate\n        return\n      }\n\n      // Validar que la fecha final no sea posterior a hoy\n      if (end > today) {\n        this.endDate = today.toISOString().split('T')[0]\n        return\n      }\n\n      // Validar que el rango no sea mayor a 365 días\n      const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24))\n      if (diffDays > 365) {\n        this.endDate = new Date(start.getTime() + (365 * 24 * 60 * 60 * 1000)).toISOString().split('T')[0]\n      }\n\n      this.loadData()\n    }\n  }\n})\n</script>\n\n<style scoped>\n.revenue-chart {\n  background: var(--bg-secondary);\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: \n    0 2px 4px rgba(0, 0, 0, 0.05),\n    0 4px 8px rgba(0, 0, 0, 0.05),\n    inset 0 -1px 0 rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  transform: translateY(0);\n  transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\n  position: relative;\n  background-image: linear-gradient(\n    to bottom,\n    rgba(255, 255, 255, 0.1) 0%,\n    rgba(255, 255, 255, 0) 20%\n  );\n}\n\n/* Efecto de elevación al pasar el mouse */\n.revenue-chart:hover {\n  transform: translateY(-5px);\n  box-shadow: \n    0 5px 10px rgba(0, 0, 0, 0.1),\n    0 10px 20px rgba(0, 0, 0, 0.1),\n    0 20px 40px rgba(0, 0, 0, 0.05),\n    inset 0 -2px 0 rgba(0, 0, 0, 0.1),\n    inset 0 2px 0 rgba(255, 255, 255, 0.1);\n}\n\n/* Efecto de presión al hacer clic */\n.revenue-chart:active {\n  transform: translateY(-2px);\n  box-shadow: \n    0 2px 5px rgba(0, 0, 0, 0.1),\n    0 5px 10px rgba(0, 0, 0, 0.05),\n    inset 0 -1px 0 rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  transition: all 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);\n}\n\n/* Añadir un pseudo-elemento para el efecto de brillo en el borde */\n.revenue-chart::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    to right,\n    rgba(255, 255, 255, 0) 0%,\n    rgba(255, 255, 255, 0.5) 50%,\n    rgba(255, 255, 255, 0) 100%\n  );\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}\n\n/* Añadir un pseudo-elemento para el efecto de sombra en el borde inferior */\n.revenue-chart::after {\n  content: \"\";\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    to right,\n    rgba(0, 0, 0, 0) 0%,\n    rgba(0, 0, 0, 0.2) 50%,\n    rgba(0, 0, 0, 0) 100%\n  );\n  border-bottom-left-radius: 12px;\n  border-bottom-right-radius: 12px;\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.chart-title {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--text-primary);\n  margin: 0;\n}\n\n.chart-controls {\n  display: flex;\n  align-items: center;\n}\n\n.date-range-picker {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  background: var(--bg-secondary);\n  padding: 8px;\n  border-radius: 6px;\n  border: 1px solid var(--border-color);\n}\n\n.date-input {\n  padding: 6px 10px;\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  background: var(--bg-primary);\n  color: var(--text-primary);\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.date-input:hover {\n  border-color: var(--border-hover);\n}\n\n.date-input:focus {\n  outline: none;\n  border-color: var(--primary);\n  box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.1);\n}\n\n.date-separator {\n  color: var(--text-secondary);\n  font-size: 0.9rem;\n}\n\n.chart-container {\n  position: relative;\n  min-height: 350px;\n  background: var(--bg-primary);\n}\n\n.loading-overlay {\n    position: absolute;\n  top: 0;\n    left: 0;\n    right: 0;\n  bottom: 0;\n  background: var(--bg-overlay);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid var(--spinner-track);\n  border-top-color: var(--spinner-color);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (max-width: 768px) {\n  .chart-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 15px;\n  }\n\n  .chart-controls {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .date-range-picker {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .date-input {\n    width: 100%;\n  }\n}\n\n:deep(.apexcharts-canvas) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-svg) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-plot-area) {\n  fill: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-grid) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-gridlines-horizontal),\n:deep(.apexcharts-gridlines-vertical) {\n  stroke: var(--border-color) !important;\n}\n\n:deep(.apexcharts-plot-background) {\n  fill: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-inner) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-area-series) path {\n  fill-opacity: 0.5;\n}\n\n:deep(.apexcharts-tooltip) {\n  background: var(--bg-secondary) !important;\n  border: 1px solid var(--border-color) !important;\n}\n\n:deep(.apexcharts-tooltip-title) {\n  background: var(--bg-tertiary) !important;\n  border-bottom: 1px solid var(--border-color) !important;\n}\n\n:deep(.apexcharts-xaxistooltip) {\n  background: var(--bg-secondary) !important;\n  border: 1px solid var(--border-color) !important;\n}\n</style> "],"mappings":";AAqBA,SAASA,eAAc,QAAS,KAAI;AACpC,OAAOC,aAAY,MAAO,iBAAgB;AAE1C,eAAeD,eAAe,CAAC;EAC7BE,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVC,SAAS,EAAEH;EACb,CAAC;EAEDI,IAAIA,CAAA,EAAG;IACL,MAAMC,KAAI,GAAI,IAAIC,IAAI,CAAC;IACvB,MAAMC,aAAY,GAAI,IAAID,IAAI,CAAC;IAC/BC,aAAa,CAACC,OAAO,CAACH,KAAK,CAACI,OAAO,CAAC,IAAI,EAAE;IAE1C,OAAO;MACLC,SAAS,EAAEH,aAAa,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpDC,OAAO,EAAER,KAAK,CAACM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1CP,KAAK,EAAEA,KAAK,CAACM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACxCE,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,KAAK;MACjBC,MAAM,EAAE,CAAC;QACPf,IAAI,EAAE,UAAU;QAChBG,IAAI,EAAE;MACR,CAAC,CAAC;MACFa,YAAY,EAAE;QACZC,KAAK,EAAE;UACLC,IAAI,EAAE,MAAM;UACZC,MAAM,EAAE,GAAG;UACXC,UAAU,EAAE,IAAI,CAACN,UAAS,GAAI,SAAQ,GAAI,MAAM;UAChDO,SAAS,EAAE,MAAM;UACjBC,OAAO,EAAE;YACPC,IAAI,EAAE,IAAI;YACVC,KAAK,EAAE;cACLC,QAAQ,EAAE,IAAI;cACdC,SAAS,EAAE,IAAI;cACfC,IAAI,EAAE,IAAI;cACVC,MAAM,EAAE,IAAI;cACZC,OAAO,EAAE,IAAI;cACbC,GAAG,EAAE,IAAI;cACTC,KAAK,EAAE;YACT;UACF,CAAC;UACDC,UAAU,EAAE;YACVC,OAAO,EAAE,IAAI;YACbC,MAAM,EAAE,WAAW;YACnBC,KAAK,EAAE,GAAG;YACVC,gBAAgB,EAAE;cAChBH,OAAO,EAAE,IAAI;cACbI,KAAK,EAAE;YACT,CAAC;YACDC,gBAAgB,EAAE;cAChBL,OAAO,EAAE,IAAI;cACbE,KAAK,EAAE;YACT;UACF;QACF,CAAC;QACDI,WAAW,EAAE;UACXC,IAAI,EAAE;YACJC,MAAM,EAAE;UACV;QACF,CAAC;QACDC,MAAM,EAAE,CAAC,SAAS,CAAC;QACnBC,IAAI,EAAE;UACJzB,IAAI,EAAE,UAAU;UAChB0B,QAAQ,EAAE;YACRC,cAAc,EAAE,CAAC;YACjBC,WAAW,EAAE,IAAI;YACjBC,SAAS,EAAE,IAAI;YACfC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG;UACpB;QACF,CAAC;QACDC,UAAU,EAAE;UACVhB,OAAO,EAAE;QACX,CAAC;QACDiB,MAAM,EAAE;UACNC,KAAK,EAAE,QAAQ;UACfC,KAAK,EAAE;QACT,CAAC;QACDC,IAAI,EAAE;UACJ9B,IAAI,EAAE,IAAI;UACV+B,WAAW,EAAE,IAAI,CAACxC,UAAS,GAAI,MAAK,GAAI,SAAS;UACjDyC,eAAe,EAAE,CAAC;UAClBC,QAAQ,EAAE,MAAM;UAChBC,OAAO,EAAE;YACPC,GAAG,EAAE,CAAC;YACNC,KAAK,EAAE,CAAC;YACRC,MAAM,EAAE,CAAC;YACTC,IAAI,EAAE;UACR,CAAC;UACDC,KAAK,EAAE;YACLC,KAAK,EAAE;cACLxC,IAAI,EAAE;YACR;UACF,CAAC;UACDyC,KAAK,EAAE;YACLD,KAAK,EAAE;cACLxC,IAAI,EAAE;YACR;UACF;QACF,CAAC;QACD0C,OAAO,EAAE;UACPC,IAAI,EAAE,CAAC;UACPxB,MAAM,EAAE,CAAC,SAAS,CAAC;UACnByB,YAAY,EAAE,IAAI,CAACrD,UAAS,GAAI,MAAK,GAAI,MAAM;UAC/CsD,WAAW,EAAE,CAAC;UACdC,KAAK,EAAE;YACLH,IAAI,EAAE;UACR;QACF,CAAC;QACDJ,KAAK,EAAE;UACL5C,IAAI,EAAE,UAAU;UAChBoD,MAAM,EAAE;YACNC,KAAK,EAAE;cACL7B,MAAM,EAAE,IAAI,CAAC5B,UAAS,GAAI,SAAQ,GAAI,MAAM;cAC5C0D,QAAQ,EAAE;YACZ;UACF,CAAC;UACDC,UAAU,EAAE;YACVlD,IAAI,EAAE;UACR,CAAC;UACDmD,SAAS,EAAE;YACTnD,IAAI,EAAE;UACR,CAAC;UACDoD,UAAU,EAAE;YACVpD,IAAI,EAAE,IAAI;YACV2B,MAAM,EAAE;cACN0B,KAAK,EAAE,MAAM;cACbxB,KAAK,EAAE,CAAC;cACRyB,SAAS,EAAE;YACb;UACF;QACF,CAAC;QACDb,KAAK,EAAE;UACLc,KAAK,EAAE;YACLC,IAAI,EAAE,cAAc;YACpBR,KAAK,EAAE;cACLC,QAAQ,EAAE,MAAM;cAChBI,KAAK,EAAE,IAAI,CAAC9D,UAAS,GAAI,SAAQ,GAAI;YACvC;UACF,CAAC;UACDwD,MAAM,EAAE;YACNC,KAAK,EAAE;cACL7B,MAAM,EAAE,IAAI,CAAC5B,UAAS,GAAI,SAAQ,GAAI;YACxC,CAAC;YACDkE,SAAS,EAAE,SAAAA,CAASC,KAAK,EAAE;cACzB,OAAOA,KAAI,IAAK,OAAM,GAClB,IAAI,CAACA,KAAK,GAAC,OAAO,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAE,GAChCD,KAAI,IAAK,IAAG,GACV,IAAI,CAACA,KAAK,GAAC,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAE,GAC7B,IAAID,KAAK,EAAC;YAClB;UACF;QACF,CAAC;QACDE,OAAO,EAAE;UACPC,KAAK,EAAE,IAAI,CAACtE,UAAS,GAAI,MAAK,GAAI,OAAO;UACzCuE,MAAM,EAAE,IAAI;UACZC,SAAS,EAAE,KAAK;UAChBC,CAAC,EAAE;YACDP,SAAS,EAAE,SAAAA,CAASC,KAAK,EAAE;cACzB,OAAO,IAAIO,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;gBACpClB,KAAK,EAAE,UAAU;gBACjBmB,QAAQ,EAAE;cACZ,CAAC,CAAC,CAACC,MAAM,CAACV,KAAK;YACjB;UACF;QACF,CAAC;QACDG,KAAK,EAAE;UACLQ,IAAI,EAAE,IAAI,CAAC9E,UAAS,GAAI,MAAK,GAAI,OAAO;UACxC+E,OAAO,EAAE;QACX;MACF;IACF;EACF,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,aAAa,CAAC;IACnB;IACAC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACH,aAAa;EACjG,CAAC;EAEDI,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,QAAQ,CAAC;EAChB,CAAC;EAEDC,aAAaA,CAAA,EAAG;IACd;IACAL,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACK,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACP,aAAa;EACpG,CAAC;EAEDQ,KAAK,EAAE;IACL9F,SAAS,EAAE;MACT+F,OAAOA,CAAA,EAAG;QACR,IAAI,CAACJ,QAAQ,CAAC;MAChB;IACF,CAAC;IACDxF,OAAO,EAAE;MACP4F,OAAOA,CAAA,EAAG;QACR,IAAI,CAACJ,QAAQ,CAAC;MAChB;IACF;EACF,CAAC;EAEDK,OAAO,EAAE;IACPV,aAAaA,CAAA,EAAG;MACd,IAAI,CAACjF,UAAS,GAAI4F,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,QAAQ,CAAC,YAAY;MAC1E,IAAI,CAACC,gBAAgB,CAAC;IACxB,CAAC;IAEDA,gBAAgBA,CAAA,EAAG;MACjB,MAAMvC,KAAI,GAAIwC,gBAAgB,CAACL,QAAQ,CAACC,eAAe;MACvD,MAAMK,WAAU,GAAIzC,KAAK,CAAC0C,gBAAgB,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAC;MAClE,MAAMC,aAAY,GAAI5C,KAAK,CAAC0C,gBAAgB,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAAC;MACtE,MAAM5D,WAAU,GAAIiB,KAAK,CAAC0C,gBAAgB,CAAC,gBAAgB,CAAC,CAACC,IAAI,CAAC;MAElE,IAAI,CAAClG,YAAW,GAAI;QAClB,GAAG,IAAI,CAACA,YAAY;QACpBC,KAAK,EAAE;UACL,GAAG,IAAI,CAACD,YAAY,CAACC,KAAK;UAC1BG,UAAU,EAAE4F,WAAW;UACvB3F,SAAS,EAAE8F;QACb,CAAC;QACD9D,IAAI,EAAE;UACJ,GAAG,IAAI,CAACrC,YAAY,CAACqC,IAAI;UACzBC,WAAW,EAAEA;QACf,CAAC;QACDZ,MAAM,EAAE,CAAC,SAAS,CAAC;QACnBuB,OAAO,EAAE;UACPC,IAAI,EAAE,CAAC;UACPxB,MAAM,EAAE,CAAC,SAAS,CAAC;UACnByB,YAAY,EAAE6C,WAAW;UACzB5C,WAAW,EAAE,CAAC;UACdC,KAAK,EAAE;YACLH,IAAI,EAAE;UACR;QACF,CAAC;QACDJ,KAAK,EAAE;UACL,GAAG,IAAI,CAAC9C,YAAY,CAAC8C,KAAK;UAC1BQ,MAAM,EAAE;YACNC,KAAK,EAAE;cACL7B,MAAM,EAAEyE,aAAa;cACrB3C,QAAQ,EAAE;YACZ;UACF,CAAC;UACDG,UAAU,EAAE;YACVpD,IAAI,EAAE,IAAI;YACV2B,MAAM,EAAE;cACN0B,KAAK,EAAEtB,WAAW;cAClBF,KAAK,EAAE,CAAC;cACRyB,SAAS,EAAE;YACb;UACF;QACF,CAAC;QACDb,KAAK,EAAE;UACL,GAAG,IAAI,CAAChD,YAAY,CAACgD,KAAK;UAC1Bc,KAAK,EAAE;YACLC,IAAI,EAAE,cAAc;YACpBR,KAAK,EAAE;cACLC,QAAQ,EAAE,MAAM;cAChBI,KAAK,EAAEuC;YACT;UACF,CAAC;UACD7C,MAAM,EAAE;YACNC,KAAK,EAAE;cACL7B,MAAM,EAAEyE;YACV;UACF;QACF,CAAC;QACDhC,OAAO,EAAE;UACPC,KAAK,EAAE,IAAI,CAACtE,UAAS,GAAI,MAAK,GAAI,OAAO;UACzCuE,MAAM,EAAE,IAAI;UACZC,SAAS,EAAE,KAAK;UAChBf,KAAK,EAAE;YACLC,QAAQ,EAAE;UACZ,CAAC;UACDe,CAAC,EAAE;YACDP,SAAS,EAAE,SAAAA,CAASC,KAAK,EAAE;cACzB,OAAO,IAAIO,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;gBACpClB,KAAK,EAAE,UAAU;gBACjBmB,QAAQ,EAAE;cACZ,CAAC,CAAC,CAACC,MAAM,CAACV,KAAK;YACjB;UACF;QACF;MACF;IACF,CAAC;IAED,MAAMmB,QAAQA,CAAA,EAAG;MACf,IAAI,CAACvF,SAAQ,GAAI,IAAG;MACpB,IAAI;QACF;QACA,MAAMuG,KAAI,GAAI,IAAI/G,IAAI,CAAC,IAAI,CAACI,SAAS;QACrC,MAAM4G,GAAE,GAAI,IAAIhH,IAAI,CAAC,IAAI,CAACO,OAAO;QACjC,MAAM0G,QAAO,GAAIC,IAAI,CAACC,IAAI,CAAC,CAACH,GAAE,GAAID,KAAK,KAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC;;QAEhE;QACA,MAAMjH,IAAG,GAAI,EAAC;QACd,IAAIsH,YAAW,GAAIF,IAAI,CAACG,KAAK,CAACH,IAAI,CAACI,MAAM,CAAC,IAAI,MAAM,IAAI,MAAK,EAAE;;QAE/D,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,IAAKN,QAAQ,EAAEM,CAAC,EAAE,EAAE;UAClC,MAAMC,IAAG,GAAI,IAAIxH,IAAI,CAAC+G,KAAK;UAC3BS,IAAI,CAACtH,OAAO,CAAC6G,KAAK,CAAC5G,OAAO,CAAC,IAAIoH,CAAC;;UAEhC;UACA,MAAME,SAAQ,GAAKP,IAAI,CAACI,MAAM,CAAC,IAAI,GAAG,GAAI,GAAE;UAC5CF,YAAW,GAAIF,IAAI,CAACG,KAAK,CAACD,YAAW,IAAK,IAAIK,SAAS,CAAC;;UAExD;UACAL,YAAW,GAAIF,IAAI,CAACQ,GAAG,CAACN,YAAY,EAAE,MAAM;UAE5CtH,IAAI,CAAC6H,IAAI,CAAC,CACRH,IAAI,CAACI,OAAO,CAAC,CAAC,EACdR,YAAW,CACZ;QACH;;QAEA;QACA,IAAI,CAAC1G,MAAK,GAAI,CAAC;UACbf,IAAI,EAAE,UAAU;UAChBG,IAAI,EAAEA;QACR,CAAC;MACH,EAAE,OAAO+H,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK;MACpD,UAAU;QACR,IAAI,CAACrH,SAAQ,GAAI,KAAI;MACvB;IACF,CAAC;IAEDuH,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,CAAC,IAAI,CAAC3H,SAAQ,IAAK,CAAC,IAAI,CAACG,OAAO,EAAE;QACpC;MACF;MAEA,MAAMwG,KAAI,GAAI,IAAI/G,IAAI,CAAC,IAAI,CAACI,SAAS;MACrC,MAAM4G,GAAE,GAAI,IAAIhH,IAAI,CAAC,IAAI,CAACO,OAAO;MACjC,MAAMR,KAAI,GAAI,IAAIC,IAAI,CAAC;;MAEvB;MACA,IAAI+G,KAAI,GAAIC,GAAG,EAAE;QACf,IAAI,CAAC5G,SAAQ,GAAI,IAAI,CAACG,OAAM;QAC5B;MACF;;MAEA;MACA,IAAIyG,GAAE,GAAIjH,KAAK,EAAE;QACf,IAAI,CAACQ,OAAM,GAAIR,KAAK,CAACM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/C;MACF;;MAEA;MACA,MAAM2G,QAAO,GAAIC,IAAI,CAACC,IAAI,CAAC,CAACH,GAAE,GAAID,KAAK,KAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC;MAChE,IAAIE,QAAO,GAAI,GAAG,EAAE;QAClB,IAAI,CAAC1G,OAAM,GAAI,IAAIP,IAAI,CAAC+G,KAAK,CAACa,OAAO,CAAC,IAAK,GAAE,GAAI,EAAC,GAAI,EAAC,GAAI,EAAC,GAAI,IAAK,CAAC,CAACvH,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;MACnG;MAEA,IAAI,CAACyF,QAAQ,CAAC;IAChB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}