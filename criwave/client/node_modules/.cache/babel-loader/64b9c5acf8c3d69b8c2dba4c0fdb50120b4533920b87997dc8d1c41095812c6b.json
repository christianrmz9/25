{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"date-range-chart\"\n};\nconst _hoisted_2 = {\n  class: \"chart-header\"\n};\nconst _hoisted_3 = {\n  class: \"date-controls\"\n};\nconst _hoisted_4 = {\n  class: \"date-picker-container\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"date-picker-popup\"\n};\nconst _hoisted_7 = {\n  class: \"calendar\"\n};\nconst _hoisted_8 = [\"max\"];\nconst _hoisted_9 = [\"min\", \"max\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_12 = {\n  key: 2,\n  class: \"no-data-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"Ventas por Rango de Fecha\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"date-input\",\n    value: _ctx.formatDateRange,\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.showDatePicker = true),\n    readonly: \"\",\n    placeholder: \"Seleccionar rango de fechas\"\n  }, null, 8 /* PROPS */, _hoisted_5), _ctx.showDatePicker ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.startDate = $event),\n    max: _ctx.endDate || _ctx.today,\n    class: \"range-input\"\n  }, null, 8 /* PROPS */, _hoisted_8), [[_vModelText, _ctx.startDate]]), _cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n    class: \"range-separator\"\n  }, \"hasta\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.endDate = $event),\n    min: _ctx.startDate,\n    max: _ctx.today,\n    class: \"range-input\"\n  }, null, 8 /* PROPS */, _hoisted_9), [[_vModelText, _ctx.endDate]]), _createElementVNode(\"button\", {\n    class: \"apply-button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.applyRange && _ctx.applyRange(...args))\n  }, \" Aplicar \")])])) : _createCommentVNode(\"v-if\", true)])])]), _ctx.hasDateRange ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _ctx.hasData ? (_openBlock(), _createBlock(_component_apexchart, {\n    key: 1,\n    type: \"area\",\n    height: \"350\",\n    options: _ctx.chartOptions,\n    series: _ctx.series\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])) : !_ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, \" Selecciona un rango de fechas para visualizar los datos \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","type","value","_ctx","formatDateRange","onClick","_cache","$event","showDatePicker","readonly","placeholder","_hoisted_5","_hoisted_6","_hoisted_7","startDate","max","endDate","today","_hoisted_8","min","_hoisted_9","args","applyRange","_createCommentVNode","hasDateRange","_hoisted_10","isLoading","_hoisted_11","hasData","_createBlock","_component_apexchart","height","options","chartOptions","series","_hoisted_12"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\DateRangeChart.vue"],"sourcesContent":["<template>\n  <div class=\"date-range-chart\">\n    <div class=\"chart-header\">\n      <h3>Ventas por Rango de Fecha</h3>\n      <div class=\"date-controls\">\n        <div class=\"date-picker-container\">\n          <input \n            type=\"text\" \n            class=\"date-input\"\n            :value=\"formatDateRange\"\n            @click=\"showDatePicker = true\"\n            readonly\n            placeholder=\"Seleccionar rango de fechas\"\n          >\n          <div v-if=\"showDatePicker\" class=\"date-picker-popup\">\n            <div class=\"calendar\">\n              <input \n                type=\"date\" \n                v-model=\"startDate\"\n                :max=\"endDate || today\"\n                class=\"range-input\"\n              >\n              <span class=\"range-separator\">hasta</span>\n              <input \n                type=\"date\" \n                v-model=\"endDate\"\n                :min=\"startDate\"\n                :max=\"today\"\n                class=\"range-input\"\n              >\n              <button class=\"apply-button\" @click=\"applyRange\">\n                Aplicar\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n      \n    <div class=\"chart-container\" v-if=\"hasDateRange\">\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-spinner\"></div>\n      </div>\n      <apexchart\n        v-if=\"hasData\"\n        type=\"area\"\n        height=\"350\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n      ></apexchart>\n      <div v-else-if=\"!isLoading\" class=\"no-data-message\">\n        Selecciona un rango de fechas para visualizar los datos\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport VueApexCharts from 'vue3-apexcharts'\n\nexport default defineComponent({\n  name: 'DateRangeChart',\n  components: {\n    apexchart: VueApexCharts\n  },\n  \n  data() {\n    return {\n      startDate: '',\n      endDate: '',\n      showDatePicker: false,\n      today: new Date().toISOString().split('T')[0],\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ventas',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: 'transparent',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        colors: ['#2E93fA'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back'\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ventas ($)',\n            style: {\n              fontSize: '14px',\n              color: '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: '#666'\n            },\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        },\n        tooltip: {\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        }\n      }\n    }\n  },\n\n  computed: {\n    formatDateRange() {\n      if (!this.startDate || !this.endDate) return ''\n      return `${this.formatDate(this.startDate)} - ${this.formatDate(this.endDate)}`\n    },\n    \n    hasDateRange() {\n      return this.startDate && this.endDate\n    },\n    hasData() {\n      return this.series[0].data.length > 0\n    }\n  },\n\n  created() {\n    this.checkDarkMode()\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode)\n  },\n  \n  beforeUnmount() {\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode)\n  },\n  \n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme')\n      this.updateChartTheme()\n    },\n\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement)\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim()\n      const textSecondary = style.getPropertyValue('--text-secondary').trim()\n      const borderColor = style.getPropertyValue('--border-color').trim()\n      \n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: textSecondary\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: borderColor\n        },\n        xaxis: {\n          ...this.chartOptions.xaxis,\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          }\n        },\n        yaxis: {\n          ...this.chartOptions.yaxis,\n          title: {\n            style: {\n              color: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light'\n        }\n      }\n    },\n\n    formatDate(dateString) {\n      if (!dateString) return ''\n      const [year, month, day] = dateString.split('-')\n      return `${day}/${month}/${year}`\n    },\n\n    applyRange() {\n      if (this.startDate && this.endDate) {\n        this.showDatePicker = false\n        this.loadData()\n      }\n    },\n\n    async loadData() {\n      if (!this.hasDateRange) return\n\n      this.isLoading = true\n      this.series[0].data = []\n      \n      try {\n        const start = new Date(this.startDate)\n        const end = new Date(this.endDate)\n        const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24))\n        \n        const data = []\n        let currentValue = Math.floor(Math.random() * 500000) + 100000\n        \n        for (let i = 0; i <= diffDays; i++) {\n          const date = new Date(start)\n          date.setDate(start.getDate() + i)\n          \n          const variation = (Math.random() * 0.2) - 0.1\n          currentValue = Math.floor(currentValue * (1 + variation))\n          currentValue = Math.max(currentValue, 100000)\n          \n          data.push([\n            date.getTime(),\n            currentValue\n          ])\n        }\n        \n        setTimeout(() => {\n          this.series = [{\n            name: 'Ventas',\n            data: data\n          }]\n          this.isLoading = false\n        }, 300)\n        \n      } catch (error) {\n        console.error('Error loading data:', error)\n        this.isLoading = false\n      }\n    }\n  }\n})\n</script>\n\n<style scoped>\n.date-range-chart {\n  background: var(--bg-secondary);\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.date-controls {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.date-picker-container {\n  min-width: 260px;\n}\n\n.date-input {\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid var(--border-color);\n  border-radius: 6px;\n  background: var(--bg-primary);\n  color: var(--text-primary);\n  font-size: 0.9rem;\n  cursor: pointer;\n}\n\n:deep(.vc-container),\n:deep(.vc-header),\n:deep(.vc-weekday),\n:deep(.vc-day),\n:deep(.vc-day-content:hover),\n:deep(.vc-highlight) {\n  display: none;\n}\n\n.chart-container {\n  position: relative;\n  min-height: 350px;\n  background: var(--bg-primary);\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--bg-overlay);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid var(--spinner-track);\n  border-top-color: var(--spinner-color);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.no-data-message {\n  height: 350px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: var(--text-secondary);\n  font-size: 1.1rem;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (max-width: 768px) {\n  .chart-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 15px;\n  }\n\n  .date-controls {\n    flex-direction: column;\n    width: 100%;\n  }\n\n  .date-picker-container {\n    width: 100%;\n    flex-direction: column;\n  }\n\n  .date-input {\n    width: 100%;\n  }\n\n  .update-button {\n    width: 100%;\n    margin-top: 10px;\n  }\n}\n\n:deep(.apexcharts-canvas) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-tooltip) {\n  background: var(--bg-secondary) !important;\n  border: 1px solid var(--border-color) !important;\n}\n\n:deep(.apexcharts-tooltip-title) {\n  background: var(--bg-tertiary) !important;\n  border-bottom: 1px solid var(--border-color) !important;\n}\n\n:deep(.apexcharts-xaxistooltip) {\n  background: var(--bg-secondary) !important;\n  border: 1px solid var(--border-color) !important;\n}\n\n.update-button {\n  padding: 8px 16px;\n  background: var(--primary);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 100px;\n}\n\n.update-button:hover:not(:disabled) {\n  background: var(--primary-dark);\n  transform: translateY(-1px);\n}\n\n.update-button:disabled {\n  background: var(--disabled);\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.button-text {\n  font-weight: 500;\n}\n\n.date-picker-popup {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  margin-top: 8px;\n  background: var(--bg-primary);\n  border: 1px solid var(--border-color);\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  padding: 16px;\n  min-width: 300px;\n}\n\n.calendar {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.range-input {\n  padding: 8px 12px;\n  border: 1px solid var(--border-color);\n  border-radius: 6px;\n  background: var(--bg-primary);\n  color: var(--text-primary);\n  font-size: 0.9rem;\n  width: 100%;\n}\n\n.range-separator {\n  text-align: center;\n  color: var(--text-secondary);\n  padding: 4px 0;\n}\n\n.apply-button {\n  padding: 8px 16px;\n  background: var(--primary);\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin-top: 8px;\n}\n\n.apply-button:hover {\n  background: var(--primary-dark);\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAuB;mBAL1C;;EAAAC,GAAA;EAcqCD,KAAK,EAAC;;;EAC1BA,KAAK,EAAC;AAAU;mBAfjC;mBAAA;;EAAAC,GAAA;EAuCSD,KAAK,EAAC;;;EAvCfC,GAAA;EAwC4BD,KAAK,EAAC;;;EAxClCC,GAAA;EAkDkCD,KAAK,EAAC;;;;uBAjDtCE,mBAAA,CAqDM,OArDNC,UAqDM,GApDJC,mBAAA,CAmCM,OAnCNC,UAmCM,G,0BAlCJD,mBAAA,CAAkC,YAA9B,2BAAyB,sBAC7BA,mBAAA,CAgCM,OAhCNE,UAgCM,GA/BJF,mBAAA,CA8BM,OA9BNG,UA8BM,GA7BJH,mBAAA,CAOC;IANCI,IAAI,EAAC,MAAM;IACXR,KAAK,EAAC,YAAY;IACjBS,KAAK,EAAEC,IAAA,CAAAC,eAAe;IACtBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,IAAA,CAAAK,cAAc;IACtBC,QAAQ,EAAR,EAAQ;IACRC,WAAW,EAAC;0BAZxBC,UAAA,GAcqBR,IAAA,CAAAK,cAAc,I,cAAzBb,mBAAA,CAoBM,OApBNiB,UAoBM,GAnBJf,mBAAA,CAkBM,OAlBNgB,UAkBM,G,gBAjBJhB,mBAAA,CAKC;IAJCI,IAAI,EAAC,MAAM;IAjB3B,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAkByBJ,IAAA,CAAAW,SAAS,GAAAP,MAAA;IACjBQ,GAAG,EAAEZ,IAAA,CAAAa,OAAO,IAAIb,IAAA,CAAAc,KAAK;IACtBxB,KAAK,EAAC;0BApBtByB,UAAA,I,cAkByBf,IAAA,CAAAW,SAAS,E,6BAIpBjB,mBAAA,CAA0C;IAApCJ,KAAK,EAAC;EAAiB,GAAC,OAAK,sB,gBACnCI,mBAAA,CAMC;IALCI,IAAI,EAAC,MAAM;IAxB3B,uBAAAK,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAyByBJ,IAAA,CAAAa,OAAO,GAAAT,MAAA;IACfY,GAAG,EAAEhB,IAAA,CAAAW,SAAS;IACdC,GAAG,EAAEZ,IAAA,CAAAc,KAAK;IACXxB,KAAK,EAAC;0BA5BtB2B,UAAA,I,cAyByBjB,IAAA,CAAAa,OAAO,E,GAKlBnB,mBAAA,CAES;IAFDJ,KAAK,EAAC,cAAc;IAAEY,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAe,IAAA,KAAElB,IAAA,CAAAmB,UAAA,IAAAnB,IAAA,CAAAmB,UAAA,IAAAD,IAAA,CAAU;KAAE,WAEjD,E,OAhCdE,mBAAA,e,OAuCuCpB,IAAA,CAAAqB,YAAY,I,cAA/C7B,mBAAA,CAcM,OAdN8B,WAcM,GAbOtB,IAAA,CAAAuB,SAAS,I,cAApB/B,mBAAA,CAEM,OAFNgC,WAEM,EAAArB,MAAA,QAAAA,MAAA,OADJT,mBAAA,CAAmC;IAA9BJ,KAAK,EAAC;EAAiB,2B,MAzCpC8B,mBAAA,gBA4CcpB,IAAA,CAAAyB,OAAO,I,cADfC,YAAA,CAMaC,oBAAA;IAjDnBpC,GAAA;IA6CQO,IAAI,EAAC,MAAM;IACX8B,MAAM,EAAC,KAAK;IACXC,OAAO,EAAE7B,IAAA,CAAA8B,YAAY;IACrBC,MAAM,EAAE/B,IAAA,CAAA+B;qDAEM/B,IAAA,CAAAuB,SAAS,I,cAA1B/B,mBAAA,CAEM,OAFNwC,WAEM,EAF8C,2DAEpD,KApDNZ,mBAAA,e,KAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}