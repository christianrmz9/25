{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dashboard-container\"\n};\nconst _hoisted_2 = {\n  class: \"sales-cards\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sales_card = _resolveComponent(\"sales-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    class: \"dashboard-header\"\n  }, [_createElementVNode(\"h1\", {\n    class: \"welcome-title\"\n  }, \"Bienvenido al Dashboard\"), _createElementVNode(\"p\", {\n    class: \"welcome-subtitle\"\n  }, \"Resumen de ventas y métricas clave\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Tarjeta de ventas diarias \"), _createVNode(_component_sales_card, {\n    title: \"Ventas del día\",\n    amount: $data.dailySales.amount,\n    count: $data.dailySales.count,\n    average: $data.dailySales.average,\n    change: $data.dailySales.change,\n    \"change-amount\": $data.dailySales.changeAmount,\n    \"comparison-period\": \"día anterior\"\n  }, null, 8 /* PROPS */, [\"amount\", \"count\", \"average\", \"change\", \"change-amount\"]), _createCommentVNode(\" Tarjeta de ventas semanales \"), _createVNode(_component_sales_card, {\n    title: \"Ventas de la semana\",\n    amount: $data.weeklySales.amount,\n    count: $data.weeklySales.count,\n    average: $data.weeklySales.average,\n    change: $data.weeklySales.change,\n    \"change-amount\": $data.weeklySales.changeAmount,\n    \"comparison-period\": \"semana anterior\"\n  }, null, 8 /* PROPS */, [\"amount\", \"count\", \"average\", \"change\", \"change-amount\"]), _createCommentVNode(\" Tarjeta de ventas mensuales \"), _createVNode(_component_sales_card, {\n    title: \"Ventas del mes\",\n    amount: $data.monthlySales.amount,\n    count: $data.monthlySales.count,\n    average: $data.monthlySales.average,\n    change: $data.monthlySales.change,\n    \"change-amount\": $data.monthlySales.changeAmount,\n    \"comparison-period\": \"mes anterior\"\n  }, null, 8 /* PROPS */, [\"amount\", \"count\", \"average\", \"change\", \"change-amount\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","_createVNode","_component_sales_card","title","amount","$data","dailySales","count","average","change","changeAmount","weeklySales","monthlySales"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"dashboard-header\">\r\n      <h1 class=\"welcome-title\">Bienvenido al Dashboard</h1>\r\n      <p class=\"welcome-subtitle\">Resumen de ventas y métricas clave</p>\r\n    </div>\r\n    \r\n    <div class=\"sales-cards\">\r\n      <!-- Tarjeta de ventas diarias -->\r\n      <sales-card\r\n        title=\"Ventas del día\"\r\n        :amount=\"dailySales.amount\"\r\n        :count=\"dailySales.count\"\r\n        :average=\"dailySales.average\"\r\n        :change=\"dailySales.change\"\r\n        :change-amount=\"dailySales.changeAmount\"\r\n        comparison-period=\"día anterior\"\r\n      />\r\n      \r\n      <!-- Tarjeta de ventas semanales -->\r\n      <sales-card\r\n        title=\"Ventas de la semana\"\r\n        :amount=\"weeklySales.amount\"\r\n        :count=\"weeklySales.count\"\r\n        :average=\"weeklySales.average\"\r\n        :change=\"weeklySales.change\"\r\n        :change-amount=\"weeklySales.changeAmount\"\r\n        comparison-period=\"semana anterior\"\r\n      />\r\n      \r\n      <!-- Tarjeta de ventas mensuales -->\r\n      <sales-card\r\n        title=\"Ventas del mes\"\r\n        :amount=\"monthlySales.amount\"\r\n        :count=\"monthlySales.count\"\r\n        :average=\"monthlySales.average\"\r\n        :change=\"monthlySales.change\"\r\n        :change-amount=\"monthlySales.changeAmount\"\r\n        comparison-period=\"mes anterior\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Componente principal del Dashboard\r\n * \r\n * Muestra un resumen de las métricas principales del negocio,\r\n * comenzando con las ventas del día.\r\n * \r\n * @component AppDashboard\r\n */\r\nimport SalesCard from './SalesCard.vue';\r\n// Importar el servicio de dashboard en lugar de los datos directamente\r\nimport { getDailySales, getWeeklySales, getMonthlySales } from '../../services/dashboardService';\r\n\r\nexport default {\r\n  name: 'AppDashboard',\r\n  \r\n  components: {\r\n    SalesCard\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      // Inicializar con valores vacíos que se llenarán al cargar\r\n      dailySales: {\r\n        amount: 0,\r\n        count: 0,\r\n        average: 0,\r\n        change: 0,\r\n        changeAmount: 0\r\n      },\r\n      // Datos de ventas semanales\r\n      weeklySales: {\r\n        amount: 0,\r\n        count: 0,\r\n        average: 0,\r\n        change: 0,\r\n        changeAmount: 0\r\n      },\r\n      // Datos de ventas mensuales\r\n      monthlySales: {\r\n        amount: 0,\r\n        count: 0,\r\n        average: 0,\r\n        change: 0,\r\n        changeAmount: 0\r\n      },\r\n      isLoading: true,\r\n      error: null\r\n    };\r\n  },\r\n  \r\n  computed: {\r\n    /**\r\n     * Genera un mensaje de bienvenida personalizado según la hora del día\r\n     */\r\n    welcomeMessage() {\r\n      const hour = new Date().getHours();\r\n      let greeting = '';\r\n      \r\n      if (hour < 12) {\r\n        greeting = 'Buenos días';\r\n      } else if (hour < 18) {\r\n        greeting = 'Buenas tardes';\r\n      } else {\r\n        greeting = 'Buenas noches';\r\n      }\r\n      \r\n      // Aquí se podría añadir el nombre del usuario cuando haya sistema de autenticación\r\n      return `${greeting}, Usuario`;\r\n    }\r\n  },\r\n  \r\n  methods: {\r\n    /**\r\n     * Carga los datos del dashboard desde el servicio\r\n     */\r\n    async loadDashboardData() {\r\n      try {\r\n        this.isLoading = true;\r\n        this.error = null;\r\n        \r\n        // Cargar múltiples conjuntos de datos en paralelo\r\n        const [dailyData, weeklyData, monthlyData] = await Promise.all([\r\n          getDailySales(),\r\n          getWeeklySales(),\r\n          getMonthlySales()\r\n        ]);\r\n        \r\n        // Mapear los datos al formato esperado por los componentes\r\n        this.dailySales = {\r\n          amount: dailyData.total,\r\n          count: dailyData.count,\r\n          average: dailyData.average,\r\n          change: dailyData.change,\r\n          changeAmount: dailyData.changeAmount\r\n        };\r\n        \r\n        this.weeklySales = {\r\n          amount: weeklyData.total,\r\n          count: weeklyData.count,\r\n          average: weeklyData.average,\r\n          change: weeklyData.change,\r\n          changeAmount: weeklyData.changeAmount\r\n        };\r\n        \r\n        this.monthlySales = {\r\n          amount: monthlyData.total,\r\n          count: monthlyData.count,\r\n          average: monthlyData.average,\r\n          change: monthlyData.change,\r\n          changeAmount: monthlyData.changeAmount\r\n        };\r\n        \r\n        // Aquí se pueden cargar más datos según sea necesario\r\n        \r\n        this.isLoading = false;\r\n      } catch (error) {\r\n        console.error('Error al cargar datos del dashboard:', error);\r\n        this.error = 'No se pudieron cargar los datos. Por favor, intenta de nuevo más tarde.';\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  },\r\n  \r\n  mounted() {\r\n    // Cargar datos al montar el componente\r\n    this.loadDashboardData();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos del dashboard */\r\n.dashboard-container {\r\n  width: 100%;\r\n  padding: 5px 0;\r\n}\r\n\r\n/* Estilos del encabezado */\r\n.dashboard-header {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.welcome-title {\r\n  font-size: 1.6rem;\r\n  font-weight: 600;\r\n  color: var(--text-primary);\r\n  margin: 0 0 6px 0;\r\n  /* Añadir efecto de texto 3D sutil */\r\n  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\r\n  opacity: 0.95; /* Alta importancia pero no distrae de los datos */\r\n}\r\n\r\n.welcome-subtitle {\r\n  font-size: 0.9rem;\r\n  color: var(--text-secondary);\r\n  margin: 0;\r\n  opacity: 0.75; /* Menos prominente que el título */\r\n}\r\n\r\n/* Contenedor de tarjetas */\r\n.sales-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n  /* Añadir perspectiva para mejorar el efecto 3D */\r\n  perspective: 1000px;\r\n}\r\n\r\n/* Estado de carga */\r\n.loading-state {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 40px 0;\r\n  color: var(--text-secondary);\r\n}\r\n\r\n.loading-spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid rgba(125, 130, 152, 0.2);\r\n  border-top-color: var(--accent);\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n/* Mensaje de error */\r\n.error-message {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 16px;\r\n  background-color: rgba(209, 67, 67, 0.1);\r\n  color: var(--error);\r\n  border-radius: 8px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.error-message svg {\r\n  width: 24px;\r\n  height: 24px;\r\n  margin-right: 12px;\r\n}\r\n\r\n/* Ajustes responsive */\r\n@media (max-width: 768px) {\r\n  .dashboard-container {\r\n    padding: 3px 0;\r\n  }\r\n  \r\n  .welcome-title {\r\n    font-size: 1.4rem;\r\n  }\r\n  \r\n  .welcome-subtitle {\r\n    font-size: 0.85rem;\r\n  }\r\n  \r\n  .sales-cards {\r\n    grid-template-columns: 1fr;\r\n    gap: 18px;\r\n    /* Mantener la perspectiva en móviles */\r\n    perspective: 800px;\r\n  }\r\n  \r\n  .loading-spinner {\r\n    width: 32px;\r\n    height: 32px;\r\n  }\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAqB;;EAMzBA,KAAK,EAAC;AAAa;;;uBAN1BC,mBAAA,CAwCM,OAxCNC,UAwCM,G,0BAvCJC,mBAAA,CAGM;IAHDH,KAAK,EAAC;EAAkB,IAC3BG,mBAAA,CAAsD;IAAlDH,KAAK,EAAC;EAAe,GAAC,yBAAuB,GACjDG,mBAAA,CAAkE;IAA/DH,KAAK,EAAC;EAAkB,GAAC,oCAAkC,E,sBAGhEG,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,mBAAA,+BAAkC,EAClCC,YAAA,CAQEC,qBAAA;IAPAC,KAAK,EAAC,gBAAgB;IACrBC,MAAM,EAAEC,KAAA,CAAAC,UAAU,CAACF,MAAM;IACzBG,KAAK,EAAEF,KAAA,CAAAC,UAAU,CAACC,KAAK;IACvBC,OAAO,EAAEH,KAAA,CAAAC,UAAU,CAACE,OAAO;IAC3BC,MAAM,EAAEJ,KAAA,CAAAC,UAAU,CAACG,MAAM;IACzB,eAAa,EAAEJ,KAAA,CAAAC,UAAU,CAACI,YAAY;IACvC,mBAAiB,EAAC;sFAGpBV,mBAAA,iCAAoC,EACpCC,YAAA,CAQEC,qBAAA;IAPAC,KAAK,EAAC,qBAAqB;IAC1BC,MAAM,EAAEC,KAAA,CAAAM,WAAW,CAACP,MAAM;IAC1BG,KAAK,EAAEF,KAAA,CAAAM,WAAW,CAACJ,KAAK;IACxBC,OAAO,EAAEH,KAAA,CAAAM,WAAW,CAACH,OAAO;IAC5BC,MAAM,EAAEJ,KAAA,CAAAM,WAAW,CAACF,MAAM;IAC1B,eAAa,EAAEJ,KAAA,CAAAM,WAAW,CAACD,YAAY;IACxC,mBAAiB,EAAC;sFAGpBV,mBAAA,iCAAoC,EACpCC,YAAA,CAQEC,qBAAA;IAPAC,KAAK,EAAC,gBAAgB;IACrBC,MAAM,EAAEC,KAAA,CAAAO,YAAY,CAACR,MAAM;IAC3BG,KAAK,EAAEF,KAAA,CAAAO,YAAY,CAACL,KAAK;IACzBC,OAAO,EAAEH,KAAA,CAAAO,YAAY,CAACJ,OAAO;IAC7BC,MAAM,EAAEJ,KAAA,CAAAO,YAAY,CAACH,MAAM;IAC3B,eAAa,EAAEJ,KAAA,CAAAO,YAAY,CAACF,YAAY;IACzC,mBAAiB,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}