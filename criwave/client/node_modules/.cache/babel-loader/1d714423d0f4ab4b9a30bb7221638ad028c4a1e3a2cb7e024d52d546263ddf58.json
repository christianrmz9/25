{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"date-range-chart\"\n};\nconst _hoisted_2 = {\n  class: \"chart-header\"\n};\nconst _hoisted_3 = {\n  class: \"date-controls\"\n};\nconst _hoisted_4 = {\n  class: \"date-picker-container\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"date-picker-popup\"\n};\nconst _hoisted_7 = {\n  class: \"date-picker-header\"\n};\nconst _hoisted_8 = {\n  class: \"calendars-container\"\n};\nconst _hoisted_9 = {\n  class: \"calendar\"\n};\nconst _hoisted_10 = {\n  class: \"calendar-header\"\n};\nconst _hoisted_11 = {\n  class: \"calendar-grid\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  class: \"date-picker-footer\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"chart-container\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nconst _hoisted_16 = {\n  key: 2,\n  class: \"no-data-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"Ventas por Rango de Fecha\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"date-input\",\n    value: _ctx.formatDateRange,\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.showDatePicker = true),\n    readonly: \"\",\n    placeholder: \"Seleccionar rango de fechas\"\n  }, null, 8 /* PROPS */, _hoisted_5), _ctx.showDatePicker ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", null, \"Seleccionar Rango\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.showDatePicker = false)\n  }, \"×\")]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.prevMonth && _ctx.prevMonth(...args))\n  }, \"<\"), _createElementVNode(\"span\", null, _toDisplayString(_ctx.formatMonth(_ctx.currentMonth)), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.nextMonth && _ctx.nextMonth(...args))\n  }, \">\")]), _createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.weekDays, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"weekday\",\n      key: day\n    }, _toDisplayString(day), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.calendarDays, date => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: date.getTime(),\n      class: _normalizeClass([\"calendar-day\", {\n        'selected': _ctx.isDateSelected(date),\n        'in-range': _ctx.isInRange(date),\n        'disabled': _ctx.isDisabled(date),\n        'today': _ctx.isToday(date)\n      }]),\n      onClick: $event => _ctx.selectDate(date)\n    }, _toDisplayString(date.getDate()), 11 /* TEXT, CLASS, PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    class: \"apply-button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.applyDateRange && _ctx.applyDateRange(...args))\n  }, \"Aplicar\")])])) : _createCommentVNode(\"v-if\", true)])])]), _ctx.hasDateRange ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, _cache[7] || (_cache[7] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _ctx.hasData ? (_openBlock(), _createBlock(_component_apexchart, {\n    key: 1,\n    type: \"area\",\n    height: \"350\",\n    options: _ctx.chartOptions,\n    series: _ctx.series\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])) : !_ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, \" Selecciona un rango de fechas para visualizar los datos \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","type","value","_ctx","formatDateRange","onClick","_cache","$event","showDatePicker","readonly","placeholder","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","args","prevMonth","_toDisplayString","formatMonth","currentMonth","nextMonth","_hoisted_11","_Fragment","_renderList","weekDays","day","calendarDays","date","getTime","_normalizeClass","isDateSelected","isInRange","isDisabled","isToday","selectDate","getDate","_hoisted_12","_hoisted_13","applyDateRange","_createCommentVNode","hasDateRange","_hoisted_14","isLoading","_hoisted_15","hasData","_createBlock","_component_apexchart","height","options","chartOptions","series","_hoisted_16"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\DateRangeChart.vue"],"sourcesContent":["<template>\r\n  <div class=\"date-range-chart\">\r\n    <div class=\"chart-header\">\r\n      <h3>Ventas por Rango de Fecha</h3>\r\n      <div class=\"date-controls\">\r\n        <div class=\"date-picker-container\">\r\n          <input \r\n            type=\"text\" \r\n            class=\"date-input\"\r\n            :value=\"formatDateRange\"\r\n            @click=\"showDatePicker = true\"\r\n            readonly\r\n            placeholder=\"Seleccionar rango de fechas\"\r\n          >\r\n          <div v-if=\"showDatePicker\" class=\"date-picker-popup\">\r\n            <div class=\"date-picker-header\">\r\n              <span>Seleccionar Rango</span>\r\n              <button class=\"close-button\" @click=\"showDatePicker = false\">×</button>\r\n            </div>\r\n            <div class=\"calendars-container\">\r\n              <div class=\"calendar\">\r\n                <div class=\"calendar-header\">\r\n                  <button @click=\"prevMonth\">&lt;</button>\r\n                  <span>{{ formatMonth(currentMonth) }}</span>\r\n                  <button @click=\"nextMonth\">&gt;</button>\r\n                </div>\r\n                <div class=\"calendar-grid\">\r\n                  <div class=\"weekday\" v-for=\"day in weekDays\" :key=\"day\">{{ day }}</div>\r\n                  <div\r\n                    v-for=\"date in calendarDays\"\r\n                    :key=\"date.getTime()\"\r\n                    class=\"calendar-day\"\r\n                    :class=\"{\r\n                      'selected': isDateSelected(date),\r\n                      'in-range': isInRange(date),\r\n                      'disabled': isDisabled(date),\r\n                      'today': isToday(date)\r\n                    }\"\r\n                    @click=\"selectDate(date)\"\r\n                  >\r\n                    {{ date.getDate() }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"date-picker-footer\">\r\n              <button class=\"apply-button\" @click=\"applyDateRange\">Aplicar</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      \r\n    <div class=\"chart-container\" v-if=\"hasDateRange\">\r\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\r\n        <div class=\"loading-spinner\"></div>\r\n      </div>\r\n      <apexchart\r\n        v-if=\"hasData\"\r\n        type=\"area\"\r\n        height=\"350\"\r\n        :options=\"chartOptions\"\r\n        :series=\"series\"\r\n      ></apexchart>\r\n      <div v-else-if=\"!isLoading\" class=\"no-data-message\">\r\n        Selecciona un rango de fechas para visualizar los datos\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport VueApexCharts from 'vue3-apexcharts'\r\n\r\nexport default defineComponent({\r\n  name: 'DateRangeChart',\r\n  components: {\r\n    apexchart: VueApexCharts\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      startDate: '',\r\n      endDate: '',\r\n      today: new Date().toISOString().split('T')[0],\r\n      isLoading: false,\r\n      isDarkMode: false,\r\n      showDatePicker: false,\r\n      currentMonth: new Date(),\r\n      weekDays: ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'],\r\n      tempStartDate: null,\r\n      tempEndDate: null,\r\n      series: [{\r\n        name: 'Ventas',\r\n        data: []\r\n      }],\r\n      chartOptions: {\r\n        chart: {\r\n          type: 'area',\r\n          height: 350,\r\n          background: 'transparent',\r\n          foreColor: '#666',\r\n          toolbar: {\r\n            show: true,\r\n            tools: {\r\n              download: true,\r\n              selection: true,\r\n              zoom: true,\r\n              zoomin: true,\r\n              zoomout: true,\r\n              pan: true,\r\n              reset: true\r\n            }\r\n          },\r\n          animations: {\r\n            enabled: true,\r\n            easing: 'easeinout',\r\n            speed: 800,\r\n            animateGradually: {\r\n              enabled: true,\r\n              delay: 150\r\n            },\r\n            dynamicAnimation: {\r\n              enabled: true,\r\n              speed: 350\r\n            }\r\n          }\r\n        },\r\n        colors: ['#2E93fA'],\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            opacityFrom: 0.45,\r\n            opacityTo: 0.05,\r\n            stops: [0, 95, 100]\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n          width: 2\r\n        },\r\n        grid: {\r\n          show: true,\r\n          borderColor: '#f1f1f1',\r\n          strokeDashArray: 3,\r\n          position: 'back'\r\n        },\r\n        markers: {\r\n          size: 4,\r\n          colors: ['#2E93fA'],\r\n          strokeWidth: 2,\r\n          hover: {\r\n            size: 7\r\n          }\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          labels: {\r\n            style: {\r\n              colors: '#666',\r\n              fontSize: '12px'\r\n            }\r\n          },\r\n          axisBorder: {\r\n            show: false\r\n          },\r\n          axisTicks: {\r\n            show: false\r\n          }\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Ventas ($)',\r\n            style: {\r\n              fontSize: '14px',\r\n              color: '#666'\r\n            }\r\n          },\r\n          labels: {\r\n            style: {\r\n              colors: '#666'\r\n            },\r\n            formatter: function(value) {\r\n              return new Intl.NumberFormat('es-MX', {\r\n                style: 'currency',\r\n                currency: 'MXN'\r\n              }).format(value)\r\n            }\r\n          }\r\n        },\r\n        tooltip: {\r\n          shared: true,\r\n          intersect: false,\r\n          y: {\r\n            formatter: function(value) {\r\n              return new Intl.NumberFormat('es-MX', {\r\n                style: 'currency',\r\n                currency: 'MXN'\r\n              }).format(value)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    hasDateRange() {\r\n      return this.startDate && this.endDate\r\n    },\r\n    hasData() {\r\n      return this.series[0].data.length > 0\r\n    },\r\n    formatDateRange() {\r\n      if (!this.startDate || !this.endDate) return ''\r\n      return `${this.formatDate(this.startDate)} - ${this.formatDate(this.endDate)}`\r\n    },\r\n\r\n    calendarDays() {\r\n      const year = this.currentMonth.getFullYear()\r\n      const month = this.currentMonth.getMonth()\r\n      const firstDay = new Date(year, month, 1)\r\n      const lastDay = new Date(year, month + 1, 0)\r\n      \r\n      const days = []\r\n      const firstDayOfWeek = firstDay.getDay()\r\n      \r\n      // Agregar días del mes anterior\r\n      for (let i = firstDayOfWeek - 1; i >= 0; i--) {\r\n        const date = new Date(year, month, -i)\r\n        days.push(date)\r\n      }\r\n      \r\n      // Agregar días del mes actual\r\n      for (let date = new Date(firstDay); date <= lastDay; date.setDate(date.getDate() + 1)) {\r\n        days.push(new Date(date))\r\n      }\r\n      \r\n      // Agregar días del mes siguiente hasta completar la última semana\r\n      const remainingDays = 42 - days.length\r\n      for (let i = 1; i <= remainingDays; i++) {\r\n        const date = new Date(year, month + 1, i)\r\n        days.push(date)\r\n      }\r\n      \r\n      return days\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.checkDarkMode()\r\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode)\r\n  },\r\n  \r\n  beforeUnmount() {\r\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode)\r\n  },\r\n  \r\n  methods: {\r\n    checkDarkMode() {\r\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme')\r\n      this.updateChartTheme()\r\n    },\r\n\r\n    updateChartTheme() {\r\n      const style = getComputedStyle(document.documentElement)\r\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim()\r\n      const textSecondary = style.getPropertyValue('--text-secondary').trim()\r\n      const borderColor = style.getPropertyValue('--border-color').trim()\r\n      \r\n      this.chartOptions = {\r\n        ...this.chartOptions,\r\n        chart: {\r\n          ...this.chartOptions.chart,\r\n          background: bgSecondary,\r\n          foreColor: textSecondary\r\n        },\r\n        grid: {\r\n          ...this.chartOptions.grid,\r\n          borderColor: borderColor\r\n        },\r\n        xaxis: {\r\n          ...this.chartOptions.xaxis,\r\n          labels: {\r\n            style: {\r\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\r\n            }\r\n          }\r\n        },\r\n        yaxis: {\r\n          ...this.chartOptions.yaxis,\r\n          title: {\r\n            style: {\r\n              color: this.isDarkMode ? '#e0e0e0' : '#666'\r\n            }\r\n          },\r\n          labels: {\r\n            style: {\r\n              colors: this.isDarkMode ? '#e0e0e0' : '#666'\r\n            }\r\n          }\r\n        },\r\n        tooltip: {\r\n          theme: this.isDarkMode ? 'dark' : 'light'\r\n        }\r\n      }\r\n    },\r\n\r\n    async loadData() {\r\n      if (!this.hasDateRange) return\r\n\r\n      this.isLoading = true\r\n      // Resetear los datos actuales\r\n      this.series[0].data = []\r\n      \r\n      try {\r\n        const start = new Date(this.startDate)\r\n        const end = new Date(this.endDate)\r\n        const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24))\r\n        \r\n        const data = []\r\n        let currentValue = Math.floor(Math.random() * 500000) + 100000\r\n        \r\n        for (let i = 0; i <= diffDays; i++) {\r\n          const date = new Date(start)\r\n          date.setDate(start.getDate() + i)\r\n          \r\n          const variation = (Math.random() * 0.2) - 0.1\r\n          currentValue = Math.floor(currentValue * (1 + variation))\r\n          currentValue = Math.max(currentValue, 100000)\r\n          \r\n          data.push([\r\n            date.getTime(),\r\n            currentValue\r\n          ])\r\n        }\r\n        \r\n        // Actualizar los datos con un pequeño retraso para asegurar la re-renderización\r\n        setTimeout(() => {\r\n          this.series = [{\r\n            name: 'Ventas',\r\n            data: data\r\n          }]\r\n          this.isLoading = false\r\n        }, 300)\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading data:', error)\r\n        this.isLoading = false\r\n      }\r\n    },\r\n\r\n    onDateChange() {\r\n      if (!this.startDate || !this.endDate) return\r\n      \r\n      const start = new Date(this.startDate)\r\n      const end = new Date(this.endDate)\r\n      const today = new Date()\r\n\r\n      if (start > end) {\r\n        this.startDate = this.endDate\r\n        return\r\n      }\r\n\r\n      if (end > today) {\r\n        this.endDate = today.toISOString().split('T')[0]\r\n        return\r\n      }\r\n\r\n      // Forzar la actualización de los datos\r\n      this.series[0].data = []\r\n      this.$nextTick(() => {\r\n        this.loadData()\r\n      })\r\n    },\r\n\r\n    formatDate(dateString) {\r\n      if (!dateString) return ''\r\n      const date = new Date(dateString)\r\n      return date.toLocaleDateString('es-ES', {\r\n        day: '2-digit',\r\n        month: '2-digit',\r\n        year: 'numeric'\r\n      })\r\n    },\r\n\r\n    formatMonth(date) {\r\n      return date.toLocaleDateString('es-ES', {\r\n        month: 'long',\r\n        year: 'numeric'\r\n      })\r\n    },\r\n\r\n    prevMonth() {\r\n      this.currentMonth = new Date(\r\n        this.currentMonth.getFullYear(),\r\n        this.currentMonth.getMonth() - 1\r\n      )\r\n    },\r\n\r\n    nextMonth() {\r\n      this.currentMonth = new Date(\r\n        this.currentMonth.getFullYear(),\r\n        this.currentMonth.getMonth() + 1\r\n      )\r\n    },\r\n\r\n    isToday(date) {\r\n      const today = new Date()\r\n      return date.toDateString() === today.toDateString()\r\n    },\r\n\r\n    isDateSelected(date) {\r\n      const dateStr = date.toISOString().split('T')[0]\r\n      return dateStr === this.tempStartDate || dateStr === this.tempEndDate\r\n    },\r\n\r\n    isInRange(date) {\r\n      if (!this.tempStartDate || !this.tempEndDate) return false\r\n      const dateStr = date.toISOString().split('T')[0]\r\n      return dateStr > this.tempStartDate && dateStr < this.tempEndDate\r\n    },\r\n\r\n    isDisabled(date) {\r\n      const today = new Date()\r\n      today.setHours(0, 0, 0, 0)\r\n      return date > today\r\n    },\r\n\r\n    selectDate(date) {\r\n      if (this.isDisabled(date)) return\r\n      \r\n      const dateStr = date.toISOString().split('T')[0]\r\n      \r\n      if (!this.tempStartDate || (this.tempStartDate && this.tempEndDate)) {\r\n        this.tempStartDate = dateStr\r\n        this.tempEndDate = null\r\n      } else {\r\n        if (dateStr < this.tempStartDate) {\r\n          this.tempEndDate = this.tempStartDate\r\n          this.tempStartDate = dateStr\r\n        } else {\r\n          this.tempEndDate = dateStr\r\n        }\r\n      }\r\n    },\r\n\r\n    applyDateRange() {\r\n      if (this.tempStartDate && this.tempEndDate) {\r\n        this.startDate = this.tempStartDate\r\n        this.endDate = this.tempEndDate\r\n        this.showDatePicker = false\r\n        this.onDateChange()\r\n      }\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.date-range-chart {\r\n  background: var(--bg-secondary);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.chart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.date-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n}\r\n\r\n.date-picker-container {\r\n  position: relative;\r\n}\r\n\r\n.date-input {\r\n  width: 250px;\r\n  cursor: pointer;\r\n}\r\n\r\n.date-picker-popup {\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  margin-top: 8px;\r\n  background: var(--bg-primary);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n  width: 300px;\r\n}\r\n\r\n.date-picker-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 16px;\r\n  border-bottom: 1px solid var(--border-color);\r\n}\r\n\r\n.close-button {\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  color: var(--text-secondary);\r\n  cursor: pointer;\r\n  padding: 4px;\r\n}\r\n\r\n.calendars-container {\r\n  padding: 16px;\r\n}\r\n\r\n.calendar {\r\n  width: 100%;\r\n}\r\n\r\n.calendar-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.calendar-header button {\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-primary);\r\n  cursor: pointer;\r\n  padding: 4px 8px;\r\n}\r\n\r\n.calendar-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  gap: 4px;\r\n}\r\n\r\n.weekday {\r\n  text-align: center;\r\n  font-size: 0.8rem;\r\n  color: var(--text-secondary);\r\n  padding: 4px;\r\n}\r\n\r\n.calendar-day {\r\n  text-align: center;\r\n  padding: 6px;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  font-size: 0.9rem;\r\n  color: var(--text-primary);\r\n}\r\n\r\n.calendar-day:hover:not(.disabled) {\r\n  background: var(--hover);\r\n}\r\n\r\n.calendar-day.selected {\r\n  background: var(--primary);\r\n  color: white;\r\n}\r\n\r\n.calendar-day.in-range {\r\n  background: var(--primary-light);\r\n  color: var(--primary);\r\n}\r\n\r\n.calendar-day.disabled {\r\n  color: var(--text-disabled);\r\n  cursor: not-allowed;\r\n}\r\n\r\n.calendar-day.today {\r\n  font-weight: bold;\r\n  border: 1px solid var(--primary);\r\n}\r\n\r\n.date-picker-footer {\r\n  padding: 12px 16px;\r\n  border-top: 1px solid var(--border-color);\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.apply-button {\r\n  padding: 6px 12px;\r\n  background: var(--primary);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.apply-button:hover {\r\n  background: var(--primary-dark);\r\n}\r\n\r\n.chart-container {\r\n  position: relative;\r\n  min-height: 350px;\r\n  background: var(--bg-primary);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.loading-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: var(--bg-overlay);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 3px solid var(--spinner-track);\r\n  border-top-color: var(--spinner-color);\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.no-data-message {\r\n  height: 350px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: var(--text-secondary);\r\n  font-size: 1.1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .chart-header {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 15px;\r\n  }\r\n\r\n  .date-controls {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n\r\n  .date-picker-container {\r\n    width: 100%;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .date-input {\r\n    width: 100%;\r\n  }\r\n\r\n  .update-button {\r\n    width: 100%;\r\n    margin-top: 10px;\r\n  }\r\n}\r\n\r\n:deep(.apexcharts-canvas) {\r\n  background: var(--bg-secondary) !important;\r\n}\r\n\r\n:deep(.apexcharts-tooltip) {\r\n  background: var(--bg-secondary) !important;\r\n  border: 1px solid var(--border-color) !important;\r\n}\r\n\r\n:deep(.apexcharts-tooltip-title) {\r\n  background: var(--bg-tertiary) !important;\r\n  border-bottom: 1px solid var(--border-color) !important;\r\n}\r\n\r\n:deep(.apexcharts-xaxistooltip) {\r\n  background: var(--bg-secondary) !important;\r\n  border: 1px solid var(--border-color) !important;\r\n}\r\n\r\n.update-button {\r\n  padding: 8px 16px;\r\n  background: var(--primary);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 100px;\r\n}\r\n\r\n.update-button:hover:not(:disabled) {\r\n  background: var(--primary-dark);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.update-button:disabled {\r\n  background: var(--disabled);\r\n  cursor: not-allowed;\r\n  opacity: 0.7;\r\n}\r\n\r\n.button-text {\r\n  font-weight: 500;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}