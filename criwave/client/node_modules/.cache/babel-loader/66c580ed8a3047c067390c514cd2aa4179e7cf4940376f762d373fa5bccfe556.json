{"ast":null,"code":"/**\r\n * Componente de barra de búsqueda reutilizable\r\n * \r\n * Emite eventos al escribir para filtrar elementos y proporciona\r\n * funcionalidad para limpiar la búsqueda\r\n * \r\n * @component SearchBar\r\n */\nimport Icon from './Icon.vue';\nimport { ICON_SEARCH, ICON_CLOSE, ICON_HISTORY } from '../../constants/icons';\nexport default {\n  name: 'SearchBar',\n  components: {\n    Icon\n  },\n  props: {\n    /**\r\n     * Texto del placeholder\r\n     */\n    placeholder: {\n      type: String,\n      default: 'Buscar...'\n    },\n    /**\r\n     * Retraso de búsqueda en ms (para debounce)\r\n     */\n    debounce: {\n      type: Number,\n      default: 300\n    },\n    /**\r\n     * Indica si hay resultados para la búsqueda actual\r\n     */\n    hasResults: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      searchQuery: '',\n      debounceTimeout: null,\n      isFocused: false,\n      showSuggestions: false,\n      recentSearches: [],\n      selectedIndex: -1,\n      // Iconos para usar en el template\n      icons: {\n        search: ICON_SEARCH,\n        close: ICON_CLOSE,\n        history: ICON_HISTORY\n      }\n    };\n  },\n  computed: {\n    /**\r\n     * Determina si se debe mostrar el mensaje de \"no se encontraron resultados\"\r\n     */\n    showNoResults() {\n      return this.searchQuery && !this.hasResults;\n    }\n  },\n  mounted() {\n    // Cargar búsquedas recientes del localStorage\n    this.loadRecentSearches();\n\n    // Detectar clics fuera del componente para cerrar sugerencias\n    document.addEventListener('click', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  },\n  methods: {\n    /**\r\n     * Maneja el evento de entrada de búsqueda\r\n     * con debounce para evitar múltiples llamadas\r\n     */\n    onSearch() {\n      clearTimeout(this.debounceTimeout);\n      this.debounceTimeout = setTimeout(() => {\n        this.$emit('search', this.searchQuery);\n        this.selectedIndex = -1; // Resetear índice seleccionado\n      }, this.debounce);\n    },\n    /**\r\n     * Limpia la búsqueda actual\r\n     */\n    clearSearch() {\n      this.searchQuery = '';\n      this.$emit('search', '');\n      this.$refs.searchInput.focus();\n      this.selectedIndex = -1;\n    },\n    /**\r\n     * Establece el foco en el campo de búsqueda\r\n     */\n    focus() {\n      this.$refs.searchInput.focus();\n    },\n    /**\r\n     * Maneja el evento de focus\r\n     */\n    onFocus() {\n      this.isFocused = true;\n      this.showSuggestions = true;\n    },\n    /**\r\n     * Maneja el evento de blur\r\n     */\n    onBlur() {\n      this.isFocused = false;\n      // Usar setTimeout para permitir clic en sugerencias\n      setTimeout(() => {\n        this.showSuggestions = false;\n      }, 200);\n    },\n    /**\r\n     * Carga búsquedas recientes del localStorage\r\n     */\n    loadRecentSearches() {\n      try {\n        const searches = localStorage.getItem('recentSearches');\n        if (searches) {\n          this.recentSearches = JSON.parse(searches);\n        }\n      } catch (error) {\n        console.error('Error al cargar las búsquedas recientes:', error);\n        this.recentSearches = [];\n      }\n    },\n    /**\r\n     * Navega por las sugerencias con las teclas de flecha\r\n     */\n    navigateSuggestion(direction) {\n      if (!this.showSuggestions || this.recentSearches.length === 0) return;\n      const maxIndex = this.recentSearches.length - 1;\n      if (direction > 0) {\n        // Navegar hacia abajo\n        this.selectedIndex = this.selectedIndex < maxIndex ? this.selectedIndex + 1 : 0;\n      } else {\n        // Navegar hacia arriba\n        this.selectedIndex = this.selectedIndex > 0 ? this.selectedIndex - 1 : maxIndex;\n      }\n    },\n    /**\r\n     * Selecciona la sugerencia actual\r\n     */\n    selectSuggestion() {\n      if (this.selectedIndex >= 0 && this.selectedIndex < this.recentSearches.length) {\n        this.applySuggestion(this.recentSearches[this.selectedIndex]);\n      }\n    },\n    /**\r\n     * Aplica una sugerencia seleccionada\r\n     */\n    applySuggestion(suggestion) {\n      this.searchQuery = suggestion;\n      this.$emit('search', suggestion);\n      this.showSuggestions = false;\n      this.selectedIndex = -1;\n    },\n    /**\r\n     * Maneja clics fuera del componente\r\n     */\n    handleClickOutside(event) {\n      if (this.$el && !this.$el.contains(event.target)) {\n        this.showSuggestions = false;\n      }\n    },\n    /**\r\n     * Limpia el historial de búsquedas recientes\r\n     */\n    clearSearchHistory() {\n      this.recentSearches = [];\n      try {\n        localStorage.removeItem('recentSearches');\n      } catch (error) {\n        console.error('Error al limpiar el historial de búsquedas:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Icon","ICON_SEARCH","ICON_CLOSE","ICON_HISTORY","name","components","props","placeholder","type","String","default","debounce","Number","hasResults","Boolean","data","searchQuery","debounceTimeout","isFocused","showSuggestions","recentSearches","selectedIndex","icons","search","close","history","computed","showNoResults","mounted","loadRecentSearches","document","addEventListener","handleClickOutside","beforeUnmount","removeEventListener","methods","onSearch","clearTimeout","setTimeout","$emit","clearSearch","$refs","searchInput","focus","onFocus","onBlur","searches","localStorage","getItem","JSON","parse","error","console","navigateSuggestion","direction","length","maxIndex","selectSuggestion","applySuggestion","suggestion","event","$el","contains","target","clearSearchHistory","removeItem"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\ui\\SearchBar.vue"],"sourcesContent":["<template>\r\n  <div class=\"search-bar\">\r\n    <div class=\"search-wrapper\" :class=\"{ 'is-focused': isFocused, 'has-results': hasResults }\">\r\n      <label for=\"searchInput\" class=\"sr-only\">Buscar en el sistema</label>\r\n      <input \r\n        type=\"text\" \r\n        id=\"searchInput\"\r\n        v-model=\"searchQuery\" \r\n        :placeholder=\"placeholder\" \r\n        class=\"search-input\"\r\n        @input=\"onSearch\"\r\n        @keyup.esc=\"clearSearch\"\r\n        @focus=\"onFocus\"\r\n        @blur=\"onBlur\"\r\n        @keydown.down.prevent=\"navigateSuggestion(1)\"\r\n        @keydown.up.prevent=\"navigateSuggestion(-1)\"\r\n        @keydown.enter=\"selectSuggestion\"\r\n        ref=\"searchInput\"\r\n        aria-label=\"Buscador\"\r\n        aria-autocomplete=\"list\"\r\n        :aria-controls=\"showSuggestions ? 'search-suggestions' : undefined\"\r\n        :aria-expanded=\"showSuggestions\"\r\n        :aria-activedescendant=\"selectedIndex >= 0 ? `suggestion-${selectedIndex}` : undefined\"\r\n      />\r\n      <icon name=\"search\" class=\"search-icon\" aria-hidden=\"true\" />\r\n      <button \r\n        v-if=\"searchQuery\" \r\n        type=\"button\" \r\n        class=\"clear-search\" \r\n        @click=\"clearSearch\"\r\n        aria-label=\"Limpiar búsqueda\"\r\n      >\r\n        <icon name=\"close\" />\r\n      </button>\r\n      <kbd v-else class=\"search-shortcut\" title=\"Atajo de teclado\" aria-hidden=\"true\">Ctrl+K</kbd>\r\n    </div>\r\n    \r\n    <!-- Sugerencias de búsqueda -->\r\n    <div \r\n      v-if=\"showSuggestions\" \r\n      class=\"search-suggestions\" \r\n      id=\"search-suggestions\" \r\n      role=\"listbox\"\r\n      aria-label=\"Sugerencias de búsqueda\"\r\n    >\r\n      <div v-if=\"recentSearches.length > 0\">\r\n        <div class=\"suggestions-header\" id=\"recent-searches-header\">\r\n          <span>Búsquedas recientes</span>\r\n          <button \r\n            class=\"clear-history-btn\" \r\n            @mousedown.prevent=\"clearSearchHistory\" \r\n            title=\"Limpiar historial\"\r\n            aria-label=\"Limpiar historial de búsquedas\"\r\n          >\r\n            Limpiar\r\n          </button>\r\n        </div>\r\n        <div \r\n          v-for=\"(search, index) in recentSearches\" \r\n          :key=\"`recent-${index}`\"\r\n          class=\"suggestion-item\"\r\n          :class=\"{ 'selected': selectedIndex === index }\"\r\n          @mousedown.prevent=\"applySuggestion(search)\"\r\n          @mouseover=\"selectedIndex = index\"\r\n          :id=\"`suggestion-${index}`\"\r\n          role=\"option\"\r\n          :aria-selected=\"selectedIndex === index\"\r\n          :tabindex=\"selectedIndex === index ? 0 : -1\"\r\n        >\r\n          <icon name=\"history\" class=\"suggestion-icon\" aria-hidden=\"true\" />\r\n          <span class=\"suggestion-text\">{{ search }}</span>\r\n        </div>\r\n      </div>\r\n      <div \r\n        v-if=\"!searchQuery && !recentSearches.length\" \r\n        class=\"no-suggestions\"\r\n        role=\"status\"\r\n      >\r\n        No hay búsquedas recientes\r\n      </div>\r\n    </div>\r\n    \r\n    <div \r\n      v-if=\"showNoResults\" \r\n      class=\"no-results-message\"\r\n      role=\"status\"\r\n      aria-live=\"polite\"\r\n    >\r\n      No se encontraron resultados para \"<strong>{{ searchQuery }}</strong>\"\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * Componente de barra de búsqueda reutilizable\r\n * \r\n * Emite eventos al escribir para filtrar elementos y proporciona\r\n * funcionalidad para limpiar la búsqueda\r\n * \r\n * @component SearchBar\r\n */\r\nimport Icon from './Icon.vue';\r\nimport { ICON_SEARCH, ICON_CLOSE, ICON_HISTORY } from '../../constants/icons';\r\n\r\nexport default {\r\n  name: 'SearchBar',\r\n  \r\n  components: {\r\n    Icon\r\n  },\r\n  \r\n  props: {\r\n    /**\r\n     * Texto del placeholder\r\n     */\r\n    placeholder: {\r\n      type: String,\r\n      default: 'Buscar...'\r\n    },\r\n    \r\n    /**\r\n     * Retraso de búsqueda en ms (para debounce)\r\n     */\r\n    debounce: {\r\n      type: Number,\r\n      default: 300\r\n    },\r\n    \r\n    /**\r\n     * Indica si hay resultados para la búsqueda actual\r\n     */\r\n    hasResults: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  \r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      debounceTimeout: null,\r\n      isFocused: false,\r\n      showSuggestions: false,\r\n      recentSearches: [],\r\n      selectedIndex: -1,\r\n      // Iconos para usar en el template\r\n      icons: {\r\n        search: ICON_SEARCH,\r\n        close: ICON_CLOSE,\r\n        history: ICON_HISTORY\r\n      }\r\n    };\r\n  },\r\n  \r\n  computed: {\r\n    /**\r\n     * Determina si se debe mostrar el mensaje de \"no se encontraron resultados\"\r\n     */\r\n    showNoResults() {\r\n      return this.searchQuery && !this.hasResults;\r\n    }\r\n  },\r\n  \r\n  mounted() {\r\n    // Cargar búsquedas recientes del localStorage\r\n    this.loadRecentSearches();\r\n    \r\n    // Detectar clics fuera del componente para cerrar sugerencias\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  \r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  },\r\n  \r\n  methods: {\r\n    /**\r\n     * Maneja el evento de entrada de búsqueda\r\n     * con debounce para evitar múltiples llamadas\r\n     */\r\n    onSearch() {\r\n      clearTimeout(this.debounceTimeout);\r\n      this.debounceTimeout = setTimeout(() => {\r\n        this.$emit('search', this.searchQuery);\r\n        this.selectedIndex = -1; // Resetear índice seleccionado\r\n      }, this.debounce);\r\n    },\r\n    \r\n    /**\r\n     * Limpia la búsqueda actual\r\n     */\r\n    clearSearch() {\r\n      this.searchQuery = '';\r\n      this.$emit('search', '');\r\n      this.$refs.searchInput.focus();\r\n      this.selectedIndex = -1;\r\n    },\r\n    \r\n    /**\r\n     * Establece el foco en el campo de búsqueda\r\n     */\r\n    focus() {\r\n      this.$refs.searchInput.focus();\r\n    },\r\n    \r\n    /**\r\n     * Maneja el evento de focus\r\n     */\r\n    onFocus() {\r\n      this.isFocused = true;\r\n      this.showSuggestions = true;\r\n    },\r\n    \r\n    /**\r\n     * Maneja el evento de blur\r\n     */\r\n    onBlur() {\r\n      this.isFocused = false;\r\n      // Usar setTimeout para permitir clic en sugerencias\r\n      setTimeout(() => {\r\n        this.showSuggestions = false;\r\n      }, 200);\r\n    },\r\n    \r\n    /**\r\n     * Carga búsquedas recientes del localStorage\r\n     */\r\n    loadRecentSearches() {\r\n      try {\r\n        const searches = localStorage.getItem('recentSearches');\r\n        if (searches) {\r\n          this.recentSearches = JSON.parse(searches);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error al cargar las búsquedas recientes:', error);\r\n        this.recentSearches = [];\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * Navega por las sugerencias con las teclas de flecha\r\n     */\r\n    navigateSuggestion(direction) {\r\n      if (!this.showSuggestions || this.recentSearches.length === 0) return;\r\n      \r\n      const maxIndex = this.recentSearches.length - 1;\r\n      \r\n      if (direction > 0) {\r\n        // Navegar hacia abajo\r\n        this.selectedIndex = this.selectedIndex < maxIndex ? this.selectedIndex + 1 : 0;\r\n      } else {\r\n        // Navegar hacia arriba\r\n        this.selectedIndex = this.selectedIndex > 0 ? this.selectedIndex - 1 : maxIndex;\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * Selecciona la sugerencia actual\r\n     */\r\n    selectSuggestion() {\r\n      if (this.selectedIndex >= 0 && this.selectedIndex < this.recentSearches.length) {\r\n        this.applySuggestion(this.recentSearches[this.selectedIndex]);\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * Aplica una sugerencia seleccionada\r\n     */\r\n    applySuggestion(suggestion) {\r\n      this.searchQuery = suggestion;\r\n      this.$emit('search', suggestion);\r\n      this.showSuggestions = false;\r\n      this.selectedIndex = -1;\r\n    },\r\n    \r\n    /**\r\n     * Maneja clics fuera del componente\r\n     */\r\n    handleClickOutside(event) {\r\n      if (this.$el && !this.$el.contains(event.target)) {\r\n        this.showSuggestions = false;\r\n      }\r\n    },\r\n    \r\n    /**\r\n     * Limpia el historial de búsquedas recientes\r\n     */\r\n    clearSearchHistory() {\r\n      this.recentSearches = [];\r\n      try {\r\n        localStorage.removeItem('recentSearches');\r\n      } catch (error) {\r\n        console.error('Error al limpiar el historial de búsquedas:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Clase para elementos que solo deben ser visibles para lectores de pantalla */\r\n.sr-only {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  border-width: 0;\r\n}\r\n\r\n.search-bar {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.search-wrapper {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 10px 14px 10px 34px;\r\n  border-radius: 8px;\r\n  border: 1px solid transparent;\r\n  background-color: var(--search-bg);\r\n  color: var(--search-text);\r\n  font-size: 0.95rem;\r\n  transition: all 0.2s ease;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.search-input::placeholder {\r\n  color: var(--search-placeholder);\r\n  transition: opacity 0.2s;\r\n}\r\n\r\n.is-focused .search-input::placeholder {\r\n  opacity: 0.7;\r\n}\r\n\r\n.search-input:focus {\r\n  outline: none;\r\n  background-color: var(--bg-primary);\r\n  border-color: var(--primary);\r\n  box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.search-icon {\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: var(--text-secondary);\r\n  pointer-events: none;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.is-focused .search-icon {\r\n  color: var(--primary);\r\n}\r\n\r\n.clear-search {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  opacity: 0.7;\r\n  transition: opacity 0.2s;\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-secondary);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 24px;\r\n  width: 24px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.clear-search:hover {\r\n  opacity: 1;\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.search-shortcut {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background-color: var(--bg-secondary);\r\n  color: var(--text-secondary);\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  font-size: 0.7rem;\r\n  font-family: monospace;\r\n  opacity: 0.7;\r\n  border: 1px solid var(--border);\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n  display: none; /* Oculto por defecto */\r\n}\r\n\r\n.is-focused .search-shortcut {\r\n  display: none;\r\n}\r\n\r\n/* Solo mostrar el atajo en pantallas grandes */\r\n@media (min-width: 992px) {\r\n  .search-shortcut {\r\n    display: inline-block;\r\n  }\r\n}\r\n\r\n.no-results-message {\r\n  margin-top: 10px;\r\n  padding: 8px 12px;\r\n  background-color: var(--bg-secondary);\r\n  color: var(--text-secondary);\r\n  border-radius: 6px;\r\n  font-size: 0.85rem;\r\n  animation: fadeIn 0.3s ease;\r\n}\r\n\r\n/* Estilos para sugerencias de búsqueda */\r\n.search-suggestions {\r\n  position: absolute;\r\n  top: calc(100% + 4px);\r\n  left: 0;\r\n  right: 0;\r\n  background-color: var(--bg-primary);\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n  z-index: 10;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  border: 1px solid var(--border);\r\n  animation: fadeIn 0.2s ease;\r\n}\r\n\r\n.suggestions-header {\r\n  padding: 8px 12px;\r\n  font-size: 0.75rem;\r\n  color: var(--text-secondary);\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5px;\r\n  background-color: var(--bg-secondary);\r\n  border-bottom: 1px solid var(--border);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.clear-history-btn {\r\n  background: none;\r\n  border: none;\r\n  color: var(--text-secondary);\r\n  font-size: 0.75rem;\r\n  cursor: pointer;\r\n  padding: 2px 6px;\r\n  border-radius: 4px;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.clear-history-btn:hover {\r\n  background-color: var(--bg-hover);\r\n  color: var(--primary);\r\n}\r\n\r\n.suggestion-item {\r\n  padding: 8px 12px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: background-color 0.15s;\r\n}\r\n\r\n.suggestion-item:hover,\r\n.suggestion-item.selected {\r\n  background-color: var(--bg-hover);\r\n}\r\n\r\n.suggestion-icon {\r\n  margin-right: 8px;\r\n  color: var(--text-secondary);\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.suggestion-text {\r\n  color: var(--text-primary);\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.no-suggestions {\r\n  padding: 10px 12px;\r\n  color: var(--text-secondary);\r\n  font-size: 0.85rem;\r\n  text-align: center;\r\n  font-style: italic;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(-5px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}