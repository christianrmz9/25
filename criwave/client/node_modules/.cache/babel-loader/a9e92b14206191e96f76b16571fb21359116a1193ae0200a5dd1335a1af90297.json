{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"revenue-chart\"\n};\nconst _hoisted_2 = {\n  class: \"chart-header\"\n};\nconst _hoisted_3 = {\n  class: \"chart-controls\"\n};\nconst _hoisted_4 = {\n  class: \"date-range-picker\"\n};\nconst _hoisted_5 = {\n  class: \"chart-container\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"loading-overlay\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Datepicker = _resolveComponent(\"Datepicker\");\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n    class: \"chart-title\"\n  }, \"Total Ingresos\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_Datepicker, {\n    modelValue: _ctx.dateRange,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.dateRange = $event),\n    range: \"\",\n    \"max-date\": _ctx.today,\n    \"enable-time-picker\": false,\n    format: {\n      month: 'short',\n      day: '2-digit',\n      year: 'numeric'\n    },\n    \"preview-format\": {\n      month: 'short',\n      day: '2-digit',\n      year: 'numeric'\n    },\n    locale: \"es\",\n    \"auto-apply\": \"\",\n    clearable: false,\n    \"close-on-auto-apply\": true,\n    placeholder: \"Seleccionar rango de fechas\",\n    \"input-class-name\": \"date-input\",\n    teleport: true,\n    \"teleport-center\": \"\"\n  }, null, 8 /* PROPS */, [\"modelValue\", \"max-date\"])])])]), _createElementVNode(\"div\", _hoisted_5, [_ctx.isLoading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createVNode(_component_apexchart, {\n    type: \"area\",\n    height: \"350\",\n    options: _ctx.chartOptions,\n    series: _ctx.series\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_Datepicker","modelValue","_ctx","dateRange","_cache","$event","range","today","format","month","day","year","locale","clearable","placeholder","teleport","_hoisted_5","isLoading","_hoisted_6","_createCommentVNode","_component_apexchart","type","height","options","chartOptions","series"],"sources":["C:\\Users\\Pc\\Desktop\\Proyectos\\criwave\\client\\src\\components\\dashboard\\RevenueChart.vue"],"sourcesContent":["<template>\n  <div class=\"revenue-chart\">\n    <div class=\"chart-header\">\n        <h2 class=\"chart-title\">Total Ingresos</h2>\n      <div class=\"chart-controls\">\n        <div class=\"date-range-picker\">\n          <Datepicker\n            v-model=\"dateRange\"\n            range\n            :max-date=\"today\"\n            :enable-time-picker=\"false\"\n            :format=\"{ month: 'short', day: '2-digit', year: 'numeric' }\"\n            :preview-format=\"{ month: 'short', day: '2-digit', year: 'numeric' }\"\n            locale=\"es\"\n            auto-apply\n            :clearable=\"false\"\n            :close-on-auto-apply=\"true\"\n            placeholder=\"Seleccionar rango de fechas\"\n            input-class-name=\"date-input\"\n            :teleport=\"true\"\n            teleport-center\n          />\n        </div>\n      </div>\n    </div>\n      \n    <div class=\"chart-container\">\n      <div v-if=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-spinner\"></div>\n      </div>\n      <apexchart\n        type=\"area\"\n        height=\"350\"\n        :options=\"chartOptions\"\n        :series=\"series\"\n      ></apexchart>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport VueApexCharts from 'vue3-apexcharts'\nimport Datepicker from '@vuepic/vue-datepicker'\nimport '@vuepic/vue-datepicker/dist/main.css'\n\nexport default defineComponent({\n  name: 'RevenueChart',\n  components: {\n    apexchart: VueApexCharts,\n    Datepicker\n  },\n  \n  data() {\n    const today = new Date()\n    const thirtyDaysAgo = new Date()\n    thirtyDaysAgo.setDate(today.getDate() - 30)\n    \n    return {\n      dateRange: [thirtyDaysAgo, today],\n      today: today,\n      isLoading: false,\n      isDarkMode: false,\n      series: [{\n        name: 'Ingresos',\n        data: []\n      }],\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          background: this.isDarkMode ? '#000000' : '#fff',\n          foreColor: '#666',\n          toolbar: {\n            show: true,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true\n            }\n          },\n          animations: {\n            enabled: true,\n            easing: 'easeinout',\n            speed: 800,\n            animateGradually: {\n              enabled: true,\n              delay: 150\n            },\n            dynamicAnimation: {\n              enabled: true,\n              speed: 350\n            }\n          }\n        },\n        plotOptions: {\n          area: {\n            fillTo: 'origin'\n          }\n        },\n        colors: ['#2E93fA'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            opacityFrom: 0.45,\n            opacityTo: 0.05,\n            stops: [0, 95, 100]\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        grid: {\n          show: true,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1',\n          strokeDashArray: 3,\n          position: 'back',\n          padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          },\n          xaxis: {\n            lines: {\n              show: true\n            }\n          },\n          yaxis: {\n            lines: {\n              show: true\n            }\n          }\n        },\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666',\n              fontSize: '12px'\n            }\n          },\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            show: true,\n            stroke: {\n              color: '#666',\n              width: 1,\n              dashArray: 3\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: 'Ingresos ($)',\n            style: {\n              fontSize: '14px',\n              color: this.isDarkMode ? '#999' : '#666'\n            }\n          },\n          labels: {\n            style: {\n              colors: this.isDarkMode ? '#999' : '#666'\n            },\n            formatter: function(value) {\n              return value >= 1000000 \n                ? `$${(value/1000000).toFixed(1)}M` \n                : value >= 1000 \n                  ? `$${(value/1000).toFixed(1)}K` \n                  : `$${value}`\n            }\n          }\n        },\n        tooltip: {\n          theme: this.isDarkMode ? 'dark' : 'light',\n          shared: true,\n          intersect: false,\n          y: {\n            formatter: function(value) {\n              return new Intl.NumberFormat('es-MX', {\n                style: 'currency',\n                currency: 'MXN'\n              }).format(value)\n            }\n          }\n        },\n        theme: {\n          mode: this.isDarkMode ? 'dark' : 'light',\n          palette: 'palette1'\n        }\n      }\n    }\n  },\n\n  created() {\n    this.checkDarkMode()\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', this.checkDarkMode)\n  },\n  \n  mounted() {\n    this.loadData()\n  },\n  \n  beforeUnmount() {\n    window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', this.checkDarkMode)\n  },\n  \n  watch: {\n    dateRange: {\n      handler(newRange) {\n        if (newRange && newRange.length === 2) {\n          this.loadData()\n        }\n      },\n      deep: true\n    }\n  },\n  \n  methods: {\n    checkDarkMode() {\n      this.isDarkMode = document.documentElement.classList.contains('dark-theme')\n      this.updateChartTheme()\n    },\n\n    updateChartTheme() {\n      const style = getComputedStyle(document.documentElement)\n      const bgSecondary = style.getPropertyValue('--bg-secondary').trim()\n      \n      this.chartOptions = {\n        ...this.chartOptions,\n        chart: {\n          ...this.chartOptions.chart,\n          background: bgSecondary,\n          foreColor: this.isDarkMode ? '#999' : '#666'\n        },\n        grid: {\n          ...this.chartOptions.grid,\n          borderColor: this.isDarkMode ? '#333' : '#f1f1f1'\n        },\n        colors: ['#2E93fA'],\n        markers: {\n          size: 4,\n          colors: ['#2E93fA'],\n          strokeColors: this.isDarkMode ? '#333' : '#fff',\n          strokeWidth: 2,\n          hover: {\n            size: 7\n          }\n        }\n      }\n    },\n\n    async loadData() {\n      this.isLoading = true\n      try {\n        const [start, end] = this.dateRange\n        const diffDays = Math.ceil((end - start) / (1000 * 60 * 60 * 24))\n        \n        const data = []\n        for (let i = 0; i <= diffDays; i++) {\n          const date = new Date(start)\n          date.setDate(start.getDate() + i)\n          data.push([\n            date.getTime(),\n            Math.floor(Math.random() * 500000) + 100000\n          ])\n        }\n        \n        this.series = [{\n          name: 'Ingresos',\n          data: data\n        }]\n      } catch (error) {\n        console.error('Error loading revenue data:', error)\n      } finally {\n        this.isLoading = false\n      }\n    }\n  }\n})\n</script>\n\n<style scoped>\n.revenue-chart {\n  background: var(--bg-secondary);\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: \n    0 2px 4px rgba(0, 0, 0, 0.05),\n    0 4px 8px rgba(0, 0, 0, 0.05),\n    inset 0 -1px 0 rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  transform: translateY(0);\n  transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);\n  position: relative;\n  background-image: linear-gradient(\n    to bottom,\n    rgba(255, 255, 255, 0.1) 0%,\n    rgba(255, 255, 255, 0) 20%\n  );\n}\n\n/* Efecto de elevación al pasar el mouse */\n.revenue-chart:hover {\n  transform: translateY(-5px);\n  box-shadow: \n    0 5px 10px rgba(0, 0, 0, 0.1),\n    0 10px 20px rgba(0, 0, 0, 0.1),\n    0 20px 40px rgba(0, 0, 0, 0.05),\n    inset 0 -2px 0 rgba(0, 0, 0, 0.1),\n    inset 0 2px 0 rgba(255, 255, 255, 0.1);\n}\n\n/* Efecto de presión al hacer clic */\n.revenue-chart:active {\n  transform: translateY(-2px);\n  box-shadow: \n    0 2px 5px rgba(0, 0, 0, 0.1),\n    0 5px 10px rgba(0, 0, 0, 0.05),\n    inset 0 -1px 0 rgba(0, 0, 0, 0.1),\n    inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  transition: all 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);\n}\n\n/* Añadir un pseudo-elemento para el efecto de brillo en el borde */\n.revenue-chart::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    to right,\n    rgba(255, 255, 255, 0) 0%,\n    rgba(255, 255, 255, 0.5) 50%,\n    rgba(255, 255, 255, 0) 100%\n  );\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n}\n\n/* Añadir un pseudo-elemento para el efecto de sombra en el borde inferior */\n.revenue-chart::after {\n  content: \"\";\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 1px;\n  background: linear-gradient(\n    to right,\n    rgba(0, 0, 0, 0) 0%,\n    rgba(0, 0, 0, 0.2) 50%,\n    rgba(0, 0, 0, 0) 100%\n  );\n  border-bottom-left-radius: 12px;\n  border-bottom-right-radius: 12px;\n}\n\n.chart-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.chart-title {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: var(--text-primary);\n  margin: 0;\n}\n\n.chart-controls {\n  display: flex;\n  align-items: center;\n}\n\n.date-range-picker {\n  min-width: 280px;\n}\n\n:deep(.dp__theme_light) {\n  --dp-background-color: var(--bg-secondary);\n  --dp-text-color: var(--text-primary);\n  --dp-hover-color: var(--primary);\n  --dp-hover-text-color: white;\n  --dp-hover-icon-color: white;\n  --dp-primary-color: var(--primary);\n  --dp-primary-text-color: white;\n  --dp-secondary-color: var(--border-color);\n  --dp-border-color: var(--border-color);\n  --dp-menu-border-color: var(--border-color);\n}\n\n:deep(.dp__range_end),\n:deep(.dp__range_start),\n:deep(.dp__active_date) {\n  background: var(--primary) !important;\n}\n\n:deep(.dp__input) {\n  padding: 8px 12px;\n  border: 1px solid var(--border-color);\n  border-radius: 6px;\n  background: var(--bg-secondary);\n  color: var(--text-primary);\n  font-size: 0.9rem;\n  width: 100%;\n}\n\n:deep(.dp__input:hover) {\n  border-color: var(--border-hover);\n}\n\n:deep(.dp__input:focus) {\n  outline: none;\n  border-color: var(--primary);\n  box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.1);\n}\n\n.chart-container {\n  position: relative;\n  min-height: 350px;\n  background: var(--bg-primary);\n}\n\n.loading-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: var(--bg-overlay);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n}\n\n.loading-spinner {\n  width: 40px;\n  height: 40px;\n  border: 3px solid var(--spinner-track);\n  border-top-color: var(--spinner-color);\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (max-width: 768px) {\n  .chart-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 15px;\n  }\n\n  .chart-controls {\n    width: 100%;\n  }\n\n  .date-range-picker {\n    width: 100%;\n  }\n}\n\n:deep(.apexcharts-canvas) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-svg) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-plot-area) {\n  fill: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-grid) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-gridlines-horizontal),\n:deep(.apexcharts-gridlines-vertical) {\n  stroke: var(--border-color) !important;\n}\n\n:deep(.apexcharts-plot-background) {\n  fill: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-inner) {\n  background: var(--bg-secondary) !important;\n}\n\n:deep(.apexcharts-area-series) path {\n  fill-opacity: 0.5;\n}\n\n:deep(.apexcharts-tooltip) {\n  background: var(--bg-secondary) !important;\n  border: 1px solid var(--border-color) !important;\n}\n\n:deep(.apexcharts-tooltip-title) {\n  background: var(--bg-tertiary) !important;\n  border-bottom: 1px solid var(--border-color) !important;\n}\n\n:deep(.apexcharts-xaxistooltip) {\n  background: var(--bg-secondary) !important;\n  border: 1px solid var(--border-color) !important;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAmB;;EAqB7BA,KAAK,EAAC;AAAiB;;EA1BhCC,GAAA;EA2B4BD,KAAK,EAAC;;;;;uBA1BhCE,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,CAsBM,OAtBNC,UAsBM,G,0BArBFD,mBAAA,CAA2C;IAAvCJ,KAAK,EAAC;EAAa,GAAC,gBAAc,sBACxCI,mBAAA,CAmBM,OAnBNE,UAmBM,GAlBJF,mBAAA,CAiBM,OAjBNG,UAiBM,GAhBJC,YAAA,CAeEC,qBAAA;IArBZC,UAAA,EAOqBC,IAAA,CAAAC,SAAS;IAP9B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOqBH,IAAA,CAAAC,SAAS,GAAAE,MAAA;IAClBC,KAAK,EAAL,EAAK;IACJ,UAAQ,EAAEJ,IAAA,CAAAK,KAAK;IACf,oBAAkB,EAAE,KAAK;IACzBC,MAAM,EAAE;MAAAC,KAAA;MAAAC,GAAA;MAAAC,IAAA;IAAA,CAAmD;IAC3D,gBAAc,EAAE;MAAAF,KAAA;MAAAC,GAAA;MAAAC,IAAA;IAAA,CAAmD;IACpEC,MAAM,EAAC,IAAI;IACX,YAAU,EAAV,EAAU;IACTC,SAAS,EAAE,KAAK;IAChB,qBAAmB,EAAE,IAAI;IAC1BC,WAAW,EAAC,6BAA6B;IACzC,kBAAgB,EAAC,YAAY;IAC5BC,QAAQ,EAAE,IAAI;IACf,iBAAe,EAAf;6DAMRpB,mBAAA,CAUM,OAVNqB,UAUM,GATOd,IAAA,CAAAe,SAAS,I,cAApBxB,mBAAA,CAEM,OAFNyB,UAEM,EAAAd,MAAA,QAAAA,MAAA,OADJT,mBAAA,CAAmC;IAA9BJ,KAAK,EAAC;EAAiB,2B,MA5BpC4B,mBAAA,gBA8BMpB,YAAA,CAKaqB,oBAAA;IAJXC,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,KAAK;IACXC,OAAO,EAAErB,IAAA,CAAAsB,YAAY;IACrBC,MAAM,EAAEvB,IAAA,CAAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}